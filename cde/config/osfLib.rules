XCOMM $XConsortium: osfLib.rules /main/cde1_maint/1 1995/10/10 18:14:17 drk $
/*
 * OSF shared library rules
 * These rules override certain rules in Imake.rules that are either
 * shared lib specific or have been modified to do shared libs in 
 * addition to a static library.
 *
 * InstallSharedLibrary(libname,rev,dest)
 * InstallSharedLibraryData(libname,rev,dest)
 *
 * SharedLibraryTarget(libname,rev,solist,down,up)
 * SharedLibraryDataTarget(libname,rev,salist)
 *
 * InstallSharedDebuggedLibrary(libname,rev,dest)
 * InstallSharedDebuggedLibraryData(libname,rev,dest)
 *
 * SharedDebuggedLibraryTarget(libname,rev,solist,down,up)
 * SharedDebuggedLibraryDataTarget(libname,rev,salist)
 *
 * DebuggedLibraryTarget(libname,solist) (old support)
 */

/**/#  Using OSF shared library rules

#ifndef HasSharedLibraries
#define HasSharedLibraries YES
#endif
#ifndef ForceNormalLib 
#define ForceNormalLib YES
#endif
#ifndef SharedDataSeparation
#define SharedDataSeparation NO
#endif
#ifndef SharedCodeDef
#define SharedCodeDef /* nothing */
#endif
#ifndef CommonSharedNormalObjects
#define CommonSharedNormalObjects YES
#endif
#ifndef SharedLibraryDef
#define SharedLibraryDef 
#endif
#ifndef ShLibIncludeFile
#define ShLibIncludeFile <osfLib.tmpl>
#endif
#ifndef PositionIndependentCFlags
#define PositionIndependentCFlags
#endif
#ifndef ExtraLoadFlags
#define ExtraLoadFlags 
#endif
#ifndef UsrShLibDir
#define UsrShLibDir /usr/shlib
#endif
#ifndef XShLibDir
#define XShLibDir /usr/shlib/X11
#endif

/*
 * InstallSharedLibrary - generate rules to install the shared library.
 */
#ifndef InstallSharedLibrary
#define	InstallSharedLibrary(libname,rev,dest)				@@\
									@@\
install:: Concat(lib,libname.so)					@@\
	MakeDir($(DESTDIR)dest)						@@\
	$(INSTALL) -c $(INSTLIBFLAGS) Concat(lib,libname.so) \		@@\
		$(DESTDIR)/dest	

#endif /* InstallSharedLibrary */

/*
 * InstallSharedLibraryData - generate rules to install the shared library data
 */
#ifndef InstallSharedLibraryData
#define	InstallSharedLibraryData(libname,rev,dest)
#endif /* InstallSharedLibraryData */

/*
 * SharedLibraryTarget - generate rules to create a shared library;
 */

#ifndef SharedLibraryTarget
#define SharedLibraryTarget(libname,rev,solist,down,up)			@@\
									@@\
all:: Concat(lib,libname.so)						@@\
									@@\
Concat(lib,libname.so):: solist						@@\
	$(RM) $@ 							@@\
	$(LD) $(SHLIBFLAGS) -shared -all \				@@\
		-o $@ solist \						@@\
		-none $(SO_REQLIBS)					@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so)

#endif /* SharedLibraryTarget */

/*
 * SharedLibraryDataTarget - generate rules to create shlib data file;
 */
#ifndef SharedLibraryDataTarget
#define SharedLibraryDataTarget(libname,rev,salist)
#endif /* SharedLibraryTarget */


/*
 * SharedDebuggedLibraryTarget - generate rules to create a shared library;
 * build an itermediate archive & then the .so from it.
 */

#ifndef SharedDebuggedLibraryTarget
#define SharedDebuggedLibraryTarget(libname,rev,solist,down,up)			@@\
									@@\
all:: Concat3(debugger/lib,libname,.so)					@@\
									@@\
Concat3(debugger/lib,libname,.so):: Concat3(lib,libname,.so)		@@\
	$(RM) $@ Concat3(debugger/lib,libname,_d.a) 			@@\
	(cd ./debugger; $(AR) Concat3(lib,libname,_d.a) solist  )	@@\
	RanLibrary(Concat3(debugger/lib,libname,_d.a))			@@\
	$(LD) $(SHLIBFLAGS) -shared -o $@ -all 	\			@@\
		debugger/Concat3(lib,libname,_d.a) \			@@\
		-soname Concat3(lib,libname,.so) \			@@\
		-none $(SO_REQLIBS)		 			@@\
	$(RM) Concat3(debugger/lib,libname,_d.a)			@@\
									@@\
clean::									@@\
	$(RM) Concat3(lib,libname,.so) Concat3(debugger/lib,libname,_d.a)

#endif /* SharedDebuggedLibraryTarget */


/*
 * SharedDebuggedLibraryDataTarget - generate rules to create shlib data file;
 */
#ifndef SharedDebuggedLibraryDataTarget
#define SharedDebuggedLibraryDataTarget(libname,rev,salist)
#endif /* SharedDebuggedLibraryTarget */

/*
 * InstallSharedDebuggedLibrary - 
 *   generate rules to install the shared debugged library.
 */
#ifndef InstallSharedDebuggedLibrary
#define	InstallSharedDebuggedLibrary(libname,rev,dest)			@@\
									@@\
install:: Concat(debugger/lib,libname.so)				@@\
	MakeDir($(DESTDIR)dest)						@@\
	$(INSTALL) -c $(INSTLIBFLAGS) Concat(debugger/lib,libname.so) \	@@\
		$(DESTDIR)dest

#endif /* InstallSharedDebuggedLibrary */

/*
 * InstallSharedDebuggedLibraryData - 
 *   generate rules to install the shared debugged library data
 */
#ifndef InstallSharedDebuggedLibraryData
#define	InstallSharedDebuggedLibraryData(libname,rev,dest)
#endif /* InstallSharedDebuggedLibraryData */

#ifdef NoStaticDebugLibs
/*
 * DebuggedLibraryTarget - generate rules to create a debuggable library.
 *   a workaround for the NoStaticDebugLibs case for those Imakefiles
 *   that used the older style
 */
#ifndef DebuggedLibraryTarget
#define	DebuggedLibraryTarget(libname,objlist)				@@\
AllTarget(Concat3(debugger/lib,libname,.so))				@@\
									@@\
Concat3(debugger/lib,libname,.so):: Concat3(lib,libname,.so)		@@\
	$(RM) $@ 							@@\
	$(LD) $(SHLIBFLAGS) -shared -all \				@@\
		-o $@ -soname Concat3(lib,libname,.so) \		@@\
		debugger/?*.o -none $(SO_REQLIBS)	 		@@\
									@@\
clean::									@@\
	$(RM) Concat3(debugger/lib,libname,.so)

#endif /* DebuggedLibraryTarget */
#endif /* NoStaticDebugLibs */

/*
 * NormalSharedLibraryTarget - generate rules to create a shared library;
 * build it into a different name so that the we do not hose people by having
 * the library gone for long periods.
 */
#ifndef NormalSharedLibraryTarget
#define NormalSharedLibraryTarget(libname,rev,solist)                   @@\
SharedLibraryTarget(libname,rev,solist,shared,..)
#endif /* NormalSharedLibraryTarget */ 


/* SharedLibraryBuildInstall - install a shared library to a destination.
 * Remove it first if you can. If not, move them to file~.
 */
#ifndef SharedLibraryBuildInstall
#define SharedLibraryBuildInstall(libname,rev,dest)			@@\
$(INST_STEP)::								@@\
	MakeDir($(BINSTALLPATH)/dest)					@@\
	@if [ -f Concat($(BINSTALLPATH)/dest/lib,libname.so) ];then \	@@\
	  $(RM) Concat($(BINSTALLPATH)/dest/lib,libname.so) || \	@@\
	  $(MV) Concat($(BINSTALLPATH)/dest/lib,libname.so) Concat(Concat($(BINSTALLPATH)/dest/lib,libname.so),~);fi	@@\
	$(BINSTALL) -f $(BINSTALLPATH)/dest Concat(lib,libname.so)	@@\
									@@\
LinkBuildFileList($(BUILDINCTOP),includes,Concat(lib,libname.so),$(BINSTALLPATH),dest,$(CURRENT_DIR))
#endif /* SharedLibraryBuildInstall */
