.TH csa_free 3 "14 Oct 94"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994, 1995 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994, 1995 International Business Machines Corp.
.\" (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994, 1995 Novell, Inc.
.\" (c) Copyright 1994 X.400 API Association
.SH NAME
csa_free \- free memory allocated by the calendaring service
.SH SYNOPSIS
.yS
#include <csa.h>
.sp 0.5v
.ta \w'CSA_return_code csa_free('u
CSA_return_code csa_free(CSA_buffer \f2memory\fP);
.yE
.SH DESCRIPTION
The
.Fn csa_free
function frees memory allocated by the calendaring
service.
After the call, the pointer memory will be
invalid and should not be referenced again.
When any CSA
function allocates and returns a buffer to the application,
the application will free that memory with this call when
it is finished with the memory.
When a CSA function
returns a base pointer to a complex structure containing
several levels of pointers, all the application will do to
free the entire structure or array of structures is call
this routine with the base pointer returned by the CSA
function.
The CSA functions that return structures of
this form are
.Fn csa_list_calendars 3,
.Fn csa_look_up 3,
.Fn csa_query_configuration 3,
.Fn csa_list_calendar_attributes 3,
.Fn csa_read_calendar_attributes 3,
.Fn csa_free_time_search 3,
.Fn csa_add_entry 3,
.Fn csa_list_entries 3,
.Fn csa_list_entry_attributes 3,
.Fn csa_list_entry_sequence 3,
.Fn csa_read_entry_attributes 3,
and
.Fn csa_read_next_reminder 3,
.Fn csa_update_entry_attributes 3.
The behavior of
.Fn csa_free 3
is undefined when called with a pointer to a memory block
not allocated by the calendaring service, a pointer to a
memory block that has already been freed, or a pointer
contained in a structure returned by the CSA
implementation.
In some situations, the extensions
specified for a function may be a combination of input and
output extensions.
In this case, the memory returned in
the output extensions must be freed one at a time using
.Fn csa_free 3.
.SH ARGUMENTS
.HU "Memory (Buffer)"
A pointer to memory allocated by the calendaring service.
A value of
.Cn NULL
will be ignored, but will return the return code
.Cn CSA_SUCCESS .
.SH "RETURN VALUE"
Whether the function succeeded or not, and, if not, why.
It may be success or one of the values listed under ERRORS
below.
.SH ERRORS
The
.Fn csa_free
function returns the following error values:
.VL 6
.Lc CSA_E_FAILURE
.br
There was a general failure that does not
fit the description of any other error code.
.Lc CSA_E_INVALID_MEMORY
.br
A function parameter was invalid.
.LE
.SH "SEE ALSO"
.Hd csa.h 5,
.Fn csa_add_calendar 3,
.Fn csa_add_entry 3,
.Fn csa_call_callbacks 3,
.Fn csa_delete_calendar 3,
.Fn csa_delete_entry 3,
.Fn csa_free_time_search 3,
.Fn csa_list_calendar_attributes 3,
.Fn csa_list_calendars 3,
.Fn csa_list_entries 3,
.Fn csa_list_entry_attributes 3,
.Fn csa_list_entry_sequence 3,
.Fn csa_logoff 3,
.Fn csa_logon 3,
.Fn csa_look_up 3,
.Fn csa_query_configuration 3,
.Fn csa_read_calendar_attributes 3,
.Fn csa_read_entry_attributes 3,
.Fn csa_read_next_reminder 3,
.Fn csa_register_callback 3,
.xo .Fn csa_restore 3,
.xo .Fn csa_save 3,
.Fn csa_unregister_callback 3,
.Fn csa_update_calendar_attributes 3,
.Fn csa_update_entry_attributes 3.
