.TH tt_host_file_netfile 3 "11 May 1994"
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.SH NAME
tt_host_file_netfile \- map between local and canonical pathnames on a remote host
.SH SYNOPSIS
.yS
#include <Tt/tt_c.h>
.sp 0.5v
.ta \w'char *tt_host_file_netfile('u
char *tt_host_file_netfile(const char *\f2host\fP,
	const char *\f2filename\fP);
.yE
.SH DESCRIPTION
The
.Fn tt_host_file_netfile
function performs a conversion equivalent to that of the
.Fn tt_file_netfile 3
function, but performs it on a remote host.
.P
The
.I filename
argument is
a pathname (absolute or relative) that is valid on the remote host.
Every component of
.I filename
must exist, except for the last component.
The
.I host
argument is a name of a remote host.
.SH "RETURN VALUE"
Upon successful completion, the
.Fn tt_host_file_netfile
function returns
a freshly allocated
null-terminated string of unspecified format, which can be passed to
.Fn tt_netfile_file 3
or
.Fn tt_host_netfile_file 3;
otherwise, it returns an error pointer.
The application can use
.Fn tt_ptr_error 3
to extract one of the following
.B Tt_status
values from the returned pointer:
.VL 8
.Lc TT_ERR_PATH
.br
The
.I filename
argument is a path that is not valid on
the remote host.
.Lc TT_ERR_DBAVAIL
.br
The ToolTalk database server
could not be reached on
.IR host ,
perhaps because the host is unavailable or
cannot be reached through the network.
.Lc TT_ERR_DBEXIST
.br
The ToolTalk database server
is not properly installed on
.IR host .
.Lc TT_ERR_UNIMP
.br
The ToolTalk database server
contacted is of a version that does not support
.Fn tt_host_file_netfile .
.LE
.SH "APPLICATION USAGE"
The
.Fn tt_file_netfile 3,
.Fn tt_netfile_file 3,
.Fn tt_host_file_netfile 3
and
.Fn tt_host_netfile_file 3
functions allow an
application to determine a path valid on remote hosts,
perhaps for purposes of constructing a command string valid for remote
execution on that host.
By composing the two calls, paths for files not accessible from the
current host can be constructed.
For example, if path
.B /sample/file
is valid on host A, a program
running on host B can use
.Cs I
tt_host_netfile_file("C", tt_host_file_netfile("A", "/sample/file"))
.Ce
to determine a path to the same file valid on host C, if such a
path is possible.
.P
Allocated strings should be freed using either
.Fn tt_free 3
or
.Fn tt_release 3.
.P
The
.Fn tt_open 3
function need not be called before
.Fn tt_host_file_netfile .
.SH "SEE ALSO"
.Hd Tt/tt_c.h 5,
.Fn tt_file_netfile 3,
.Fn tt_netfile_file 3,
.Fn tt_host_netfile_file 3,
.Fn tt_open 3,
.Fn tt_free 3,
.Fn tt_release 3.
