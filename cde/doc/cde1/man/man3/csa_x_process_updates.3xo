.TH csa_x_process_updates 3 "4 Aug 1994"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994, 1995 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994, 1995 International Business Machines Corp.
.\" (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994, 1995 Novell, Inc.
.SH NAME
csa_x_process_updates \- invoke a calendar application's calendar event handler
.SH SYNOPSIS
.yS
#include <csa.h>
.sp 0.5v
.ta \w'void csa_x_process_updates('u
void csa_x_process_updates(CSA_session_handle \f2cal\fP); 
.yE
.SH DESCRIPTION
The
.Fn csa_x_process_updates
function checks to see if there have been calendar updates
that are of interest to the client.
If there have been one
or more calendar updates, and the client previously
registered a callback handler using
.Fn csa_register_callback 3
for updates of this type, the callback function is called by
.Fn csa_x_process_updates .
.P
The
.I cal
argument specifies a calendar session handle.
The callback
function will be invoked only if there have been updates to
this calendar.
If
.I cal
is set to
.Cn NULL ,
the callback function will be invoked if there have been
updates to any logged on calendars.
.SH "RETURN VALUE"
The
.Fn csa_x_process_updates
function returns no value.
.SH "APPLICATION USAGE"
The
.Fn csa_x_process_updates
function is useful for applications that maintain a
dynamic representation of calendar information, such as a
GUI calendar display.
Because the calendar server can
simultaneously maintain multiple read/write connections for
the same calendar, any data retrieved by a client should be
considered immediately out of date.
To create the
appearance of a dynamic display of calendar data, such an
application should call
.Fn csa_x_process_updates
as frequently as necessary from within its main event loop.
.P
One way to do this is to have a timeout handler call
.Fn csa_x_process_updates
at regular intervals.
The duration of the timer should be
appropriate for the expected user environment.
This does
not eliminate the risk of the client holding outdated
information;
it merely gives the application control over
how old the information can get.
.SH "SEE ALSO"
.Hd csa.h 5,
.cde .Fn csa_register_callback 3.
.xo .Fn csa_register_callback
.xo in the \*(Za.
.br
