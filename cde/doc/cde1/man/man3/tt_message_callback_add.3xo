.TH tt_message_callback_add 3 "11 May 1994"
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.SH NAME
tt_message_callback_add \- register a callback function
.SH SYNOPSIS
.yS
#include <Tt/tt_c.h>
.sp 0.5v
.ta \w'Tt_status tt_message_callback_add('u
Tt_status tt_message_callback_add(Tt_message \f2m\fP,
	Tt_message_callback \f2f\fP);
.yE
.SH DESCRIPTION
The
.Fn tt_message_callback_add
function
registers a callback function to be automatically invoked by
.Fn tt_message_receive 3
whenever a reply or other state-change to this message is returned.
.P
The callback is defined in
.Hd Tt/tt_c.h 5.
If the callback returns
.Cn TT_CALLBACK_CONTINUE ,
other callbacks will be
run; if no callback returns
.Cn TT_CALLBACK_PROCESSED ,
.Fn tt_message_receive
returns the message.
If the callback returns
.Cn TT_CALLBACK_PROCESSED ,
no further callbacks are
invoked for this event;
.Fn tt_message_receive
does not return the message.
.P
The
.I m
argument is the opaque handle for the message involved in this operation.
The
.I f
argument is the message callback to be run.
.P
The pattern handle will be
.Cn NULL
if the message did not match a dynamic pattern.
This is usually the case for message callbacks.
.SH "RETURN VALUE"
Upon successful completion, the
.Fn tt_message_callback_add
function returns the status of the operation as one of the following
.B Tt_status
values:
.VL 8
.Lc TT_OK
The operation completed successfully.
.Lc TT_ERR_NOMP
.br
The
.Cm ttsession 1
process is not running and the ToolTalk service cannot restart it.
.Lc TT_ERR_POINTER
.br
The pointer passed does not point to an object of
the correct type for this operation.
.LE
.SH "APPLICATION USAGE"
These callbacks are invoked from
.Fn tt_message_receive ;
the program must, therefore, call
.Fn tt_message_receive
when the file descriptor returned by
.Fn tt_fd
becomes active.
.P
The application can use
.Fn tt_message_callback_add
to create wrappers for ToolTalk messages.
For example, a library routine can construct a request,
attach a callback to the message, send
the message, and process the reply in the callback.
When the callback returns
.Cn TT_CALLBACK_PROCESSED ,
the message reply is not returned to the main
program; the message and reply are, therefore, completely hidden.
.SH "SEE ALSO"
.Hd Tt/tt_c.h 5,
.Fn tt_message_receive 3.
