...\" **  (c) Copyright 1993, 1994 Hewlett-Packard Company
...\" **  (c) Copyright 1993, 1994 International Business Machines Corp.
...\" **  (c) Copyright 1993, 1994 Sun Microsystems, Inc.
...\" **  (c) Copyright 1993, 1994 Unix System Labs, Inc.,
...\" **      a subsidiary of Novell, Inc.
...\" **
...\" **
...\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
...\" **      All Rights Reserved.
...\" **
...\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
...\" **
...\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
...\" **      Maynard, MA.  All Rights Reserved.
...\" **
...\" **
.TH Constraint 3X "" "" "" ""
.ds )H Hewlett-Packard Company
.ds ]W Motif Release 1.2: May 1992
.SH NAME
\fIConstraint\fP \- The Constraint widget class
.SH SYNOPSIS
.nf
.sS
.iS
\&#include <Xm/Xm.h>
.iE
.sE
.SH DESCRIPTION
.fi
\fIConstraint\fP widgets
maintain additional state data for each child.  For example,
client-defined constraints on the child's geometry may be specified.
.PP 
When a constrained composite widget defines constraint resources, all of that
widget's children inherit all of those resources as their own.  These
constraint resources are set and read just the same as any other resources
defined for the child.  This resource inheritance extends exactly one
generation down, which means only the first-generation children of a
constrained composite widget inherit the parent widget's constraint
resources.
.PP 
Because constraint resources are defined by the parent widgets and not
the children, the child widgets never directly use the constraint resource
data.  Instead, the parents use constraint resource data to
attach child-specific data to children.
.SS "Classes"
Constraint inherits behavior and resources from \fIComposite\fP
and \fICore\fP.
.PP 
The class pointer is \fIconstraintWidgetClass\fP.
.PP 
The class name is \fIConstraint\fP.
.SS "New Resources"
Constraint defines no new resources.
.SS "Inherited Resources"
Constraint inherits behavior and resources from \fIComposite\fP and \fICore\fP.
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \fIXmN\fP or
\fIXmC\fP prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \fIXm\fP prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \fIXtSetValues\fP (S),
retrieved by using \fIXtGetValues\fP (G), or is not applicable
(N/A).
.P 
.wH
.in 0 
.sp 1
.in 0
.KS
.TS 
center;
cBp7 ssss
lBp6 lBp6 lBp6 lBp6 lBp6
lp6 lp6 lp6 lp6 lp6.
Core Resource Set
Name	Class	Type	Default	Access
_
XmNaccelerators	XmCAccelerators	XtAccelerators	dynamic	CSG
XmNancestorSensitive	XmCSensitive	Boolean	dynamic	G
XmNbackground	XmCBackground	Pixel	dynamic	CSG
XmNbackgroundPixmap	XmCPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNborderColor	XmCBorderColor	Pixel	XtDefaultForeground	CSG
XmNborderPixmap	XmCPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNborderWidth	XmCBorderWidth	Dimension	1	CSG
XmNcolormap	XmCColormap	Colormap	dynamic	CG
XmNdepth	XmCDepth	int	dynamic	CG
XmNdestroyCallback	XmCCallback	XtCallbackList	NULL	C
XmNheight	XmCHeight	Dimension	dynamic	CSG
XmNinitialResourcesPersistent	XmCInitialResourcesPersistent	Boolean	True	C
XmNmappedWhenManaged	XmCMappedWhenManaged	Boolean	True	CSG
XmNscreen	XmCScreen	Screen *	dynamic	CG
.wH
.tH
XmNsensitive	XmCSensitive	Boolean	True	CSG
XmNtranslations	XmCTranslations	XtTranslations	dynamic	CSG
XmNwidth	XmCWidth	Dimension	dynamic	CSG
XmNx	XmCPosition	Position	0	CSG
XmNy	XmCPosition	Position	0	CSG
.TE
.KE
.in
.sp 1
.wH
.in  
.SS "Translations"
There are no translations for Constraint.
.SH RELATED INFORMATION
.na
\fIComposite(3X)\fP and \fICore(3X)\fP.
.ad
