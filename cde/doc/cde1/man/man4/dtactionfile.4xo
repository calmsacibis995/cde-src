.cdes
.TH dtactionfile 4 "10 June 1994"
.\" *************************************************************************
.\" **  (c) Copyright 1993, 1994, 1995 Hewlett-Packard Company
.\" **  (c) Copyright 1993, 1994, 1995 International Business Machines Corp.
.\" **  (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.
.\" **  (c) Copyright 1993, 1994, 1995 Novell, Inc.
.\" *************************************************************************
.SH NAME
dtactionfile\ - define the content of desktop action definition records
.SH SYNOPSIS
.yS
set DtDbVersion=\f2version_number\fP
set \f2VariableName\fP=\f2variable_value\fP
.sp 0.5v
ACTION  \f2action_name\fP
{
	# \f2Comment\fP
	\f2FieldName\fP \f2field_value\fP
	\f2FieldName\fP \f2field_value\fP
        \&.
        \&.
        \&.
}
.yE
.SH DESCRIPTION
.cdee
Cde actions define the behavior of icons, front panel controls
and operations on data objects.
Actions are defined in a set of text files with the
.B \&.dt
suffix.
Each action definition consists of the word
.Cn ACTION
followed by an action
name and a list of Field and Value pairs (one per line) on lines by themselves
and enclosed in brackets.
.xos
.H 3 "Action File Syntax"
The general syntax of the actions files is as follows:
.P
.yS
set DtDbVersion=\f2version_number\fP
set \f2VariableName\fP=\f2variable_value\fP
.sp 0.5v
ACTION  \f2action_name\fP
{
	# \f2Comment\fP
	\f2FieldName\fP \f2field_value\fP
	\f2FieldName\fP \f2field_value\fP
        \&.
        \&.
        \&.
}
.yE
.xoe
.P
These text files may also contain data typing information as
described in
.cde .BR dtdtsfile (4).
.xo .cX dtdtsfile .
(See
.cde .BR dtdtfile (4)
.xo .cX dtdtfile
for the general syntax and location of the actions
and data types database.)
.P
.xo .H 3 "Classes of Actions"
Actions are of one of the following classes:
command actions,
ToolTalk message actions or map actions.
These action classes are described in the following sections.
.cde .HU "Command Actions"
.xo .H 4 "Command Actions"
Command actions are identified by a
.Cn TYPE
.Cn COMMAND
field.
This field defines an execution string to invoke
and a set of related
information, such as the current working directory for the
command and the host where the command should be executed.
The following field names are unique to command actions:
.Cn EXEC_STRING ,
.Cn EXEC_HOST ,
.Cn CWD ,
.Cn WINDOW_TYPE
and
.Cn TERM_OPTS .
.cde .HU "ToolTalk Message Actions"
.xo .H 4 "ToolTalk Message Actions"
ToolTalk message actions are identified by a
.Cn TYPE
.Cn TT_MSG
field.
This field defines a ToolTalk message to be sent.
The following fields are unique to ToolTalk message actions:
.Cn TT_CLASS ,
.Cn TT_SCOPE ,
.Cn TT_OPERATION ,
.Cn TT_FILE ,
.Cn TT_ARGn_MODE ,
.Cn TT_ARGn_VTYPE ,
.Cn TT_ARGn_REP_TYPE
and
.Cn TT_ARGn_VALUE .
.cde .HU "Map Actions"
.xo .H 4 "Map Actions"
Map actions are identified by a
.Cn TYPE
.Cn MAP
field.
This field does not
define any specific behavior; instead, this field specifies a different
action name that should be invoked in place of the original action.
Multiple map actions can be chained together, but the
chain must ultimately terminate in a non-map action.
The following field is unique to map actions:
.Cn MAP_ACTION .
.cde .HU "Common Fields"
.xo .H 4 "Common Fields"
In addition to the unique action fields listed above, all
actions support the following fields:
.Cn LABEL ,
.Cn ICON ,
.Cn DESCRIPTION ,
.Cn ARG_CLASS ,
.Cn ARG_MODE ,
.Cn ARG_TYPE ,
.Cn ARG_COUNT
and
.Cn TYPE .
.br
.cde .HU Keywords
.xo .H 4 Keywords
The value string for certain action fields may reference
special keywords enclosed within percentage character (%)
delimiters.
These keywords are evaluated when the action is
invoked and replaced with the appropriate value.
In fields that do not evaluate keywords, the keyword
is taken literally.
The valid keywords are:
.VL 6
.Lc %DatabaseHost%
.br
The name of the host where the action
definition file is located.
This hostname is specified by the host
portion of the \f2host:/\fP\f2path\fP searchpath
used to find the action.
.Lc %DisplayHost%
.br
The name of the host where the X
server displaying the Cde session is
running.
.Lc %LocalHost%
.br
The name of the host where the
application invoking the action is
executing.
.Lc %SessionHost%
.br
The name of the host where the
controlling login manager (\c
.Cm dtlogin 1)
runs.
.LE
.cde .HU "Argument References"
.xo .H 4 "Argument References"
Arguments passed to actions can be referenced in certain
action fields using special argument keywords enclosed
within percent character (%) delimiters.
These argument
keywords are evaluated when the action is invoked and
replaced with the appropriate value.
In fields that do not
evaluate keywords, the keyword is taken literally.
The valid argument keywords are:
.VL 6
.LI %Arg_\f2n%\fP
.br
The
.IR n th
(starting with 1) argument of the action.
If the action was
invoked with fewer than
.I n
arguments, the value of the keyword is
.Cn NULL .
.LI %Args%
.br
All remaining arguments of the action.
If any arguments of the action
have already been referenced within this field by an %Arg_\f2n\fP% keyword,
those arguments are not referenced a second time by %Args%.
.LI %"\f2prompt\fP"%
.br
Prompt the user for a value, using
.I prompt
as the label of a text field.
.LI %Arg_\f2n\fP"\f2prompt\fP"%
.br
The
.IR n th
(starting with 1) argument of the action.
If the action was invoked with fewer than
.I n
arguments, prompt the user for a value using
.I prompt
as the label of a text field.
.LE
.P
If a keyword references the name of a file argument, the value of the
keyword is expanded to an absolute pathname prior to substitution.
In addition, if the file name is to be passed to a remote system, the
file name is first mapped appropriately (see
.Fn tt_file_netfile 3
and
.Fn tt_netfile_file 3).
.P
If the keyword references a buffer argument, the buffer data is
placed in a temporary file and the name of the temporary file is
substituted, as described above.
Some action fields provide direct
support for data buffers and do not require use of a temporary file.
This behavior is noted in the description of the appropriate fields.
.P
If the keyword references a string obtained from the user, it is
treated as a simple string and the value substituted without any
transformation.
.P
Argument references can be forced to be treated as file names or simple
strings by using the
.B (File)
or
.B (String)
qualifier immediately after the opening % of the keyword.
For example:
.Cs I
%(String)Arg_\f2n\fP%
%(File)"\f2prompt\fP"%
.Ce
.P
If an action is invoked with more than one argument, and the action
definition only references one or zero arguments, the action is
iteratively invoked with each of the supplied arguments.
If the
action definition references more than one argument, any extra
arguments are ignored.
.cde .HU "Action Selection"
.xo .H 4 "Action Selection"
.xo .xR4 actionselection
Multiple actions can be defined with the same name.
When the action
is invoked, the appropriate action definition is chosen based on
the number and class of arguments supplied.
For example, the
.B Open
action may invoke
.Cm dtpad 1
if a text file is supplied as an
argument, or it may invoke
.Cm dticon 1
if a bitmap file argument is supplied.
The
.Cn ARG_COUNT ,
.Cn ARG_CLASS ,
.Cn ARG_MODE
and
.Cn ARG_TYPE
fields specify the number, mode and
types of arguments that are accepted by a particular action.
Because these fields can have shell pattern-matching
values such as *, it is possible that
the action database contains multiple actions that have the same
name and are all capable of accepting the arguments that are supplied.
In this case, the following precedence rules are used to choose a
single action definition to invoke:
.xo .BL
.cde .VL 3
.LI \(bu
Actions with more specific attribute values take precedence over
more general attribute values.
.LI \(bu
For the
.Cn ARG_COUNT
field, an exact numerical value (\f2N\fP) is more
specific than a less-than range (\f2<N\fP).
A less-than range (\f2<N\fP) is more
specific than a greater-than range (\f2>N\fP).
And a greater-than range
(\f2>N\fP) is more specific than a shell pattern-matching character (*).
.LI \(bu
For the
.Cn ARG_CLASS
and
.Cn ARG_TYPE
fields, a single item is more
specific than a list of items and a list of items is more specific
than a shell pattern-matching *.
.LI \(bu
For the
.Cn ARG_MODE
field,
.B w
(writable) and
.B !w
(not writable) are more specific than
a shell pattern-matching *.
.LI \(bu
The fields have the following precedence, from high to low:
.Cn ARG_CLASS ,
.Cn ARG_TYPE ,
.Cn ARG_MODE ,
.Cn ARG_COUNT .
.LI \(bu
If two action definitions have equal specificity, the action
definition appearing first in the database load order takes
precedence.
Database directories are loaded in the order specified by the
.I DTDATABASESEARCHPATH
environment variable, and are loaded in the collation
order of their file names.
.LE
.cde .HU "ARG_CLASS Field"
.xo .H 4 "ARG_CLASS Field"
The
.Cn ARG_CLASS
field is optional for all types of actions.
This field
specifies the class of arguments the action accepts.
If an action is invoked with more than one argument, the class of only
the first argument is checked against the value of the
.Cn ARG_CLASS
field.
The valid values for this field are:
.VL 10
.Lc BUFFER
The action accepts arguments that are blocks of data held in memory.
.Lc FILE
The action accepts arguments that are file names.
.LI *
The action is defined for all classes of arguments.
.LE
.P
A comma-separated list of valid values is also allowed and specifies
that the action accepts arguments of any of the listed classes.
.P
If an action is defined to accept a buffer argument, yet the
implementation of the action requires a file name, the buffer is
automatically converted into a temporary file for the
action to use.
See the description of the
.B DtTmpDir
resource
.xo (\c
.xo .cX actionres )
for information
on configuring the location of these temporary files.
.P
Keywords are not evaluated in the
.Cn ARG_CLASS
field.
The default value of the
.Cn ARG_CLASS
field is
.BR * .
.cde .HU "ARG_COUNT Field "
.xo .H 4 "ARG_COUNT Field "
The
.Cn ARG_COUNT
field is optional for all types of actions.
The
.Cn ARG_COUNT
field specifies the number of arguments that the action
accepts.
The valid values for this field (where
.I N
denotes any
non-negative integer) are:
.VL 6
.LI \f2N\fP
The action accepts exactly
.I N
arguments.
.LI \f2<N\fP
The action accepts any number of arguments less than
.IR N .
.LI \f2>N\fP
The action accepts any number of arguments greater than
.IR N .
.LI *
The action accepts any number of arguments.
.LE
.P
Keywords are not evaluated in the
.Cn ARG_COUNT
field.
The default value of
the
.Cn ARG_COUNT
field is
.BR * .
.br
.cde .HU "ARG_MODE Field"
.xo .H 4 "ARG_MODE Field"
The
.Cn ARG_MODE
field is optional for all types of actions.
This field specifies the mode of arguments the action accepts.
If an action is invoked with more than one argument, the mode of
only the first argument is checked against the value of the
.Cn ARG_MODE
field.
The valid values for this field are:
.VL 6
.LI \f3w\fP
The action accepts arguments that writable by the user.
.LI \f3!w\fP
The action accepts arguments that are not writable by the user.
.LI \f3*\fP
The action is defined for all classes of arguments.
.LE
.P
Keywords are not evaluated in the
.Cn ARG_MODE
field.
The default value of the
.Cn ARG_MODE
field is
.BR * .
.br
.cde .HU "ARG_TYPE Field"
.xo .H 4 "ARG_TYPE Field"
The
.Cn ARG_TYPE
field is optional for all types of actions.
This field
specifies the types of arguments the action accepts.
If
the action is invoked with more than one argument, the type of only
the first argument is checked against the value of this field.
Valid values for this field are * (all data types are accepted), a single
data type name or a comma-separated list of data types.
The set of valid data types are those defined by
.Cn DATA_ATTRIBUTE
records in the
data typing database.
(See
.cde .BR dtdtsfile (4)
.xo .cX dtdtsfile
for more information.)
.P
Keywords are not evaluated in the
.Cn ARG_TYPE
field.
The default value of
the
.Cn ARG_TYPE
field is
.BR * .
.cde .HU "CWD Field"
.xo .H 4 "CWD Field"
The
.Cn CWD
field is optional for all types of actions.
This field
specifies the current working directory to be used when the execution
string is invoked.
Valid values include any absolute pathname.
If this field is not specified, the current working directory for the
execution string is determined by the following:
.xo .BL
.cde .VL 3
.LI \(bu
If the application invoking the action specifies a current working
directory, that directory is used.
.LI \(bu
If arguments are supplied to the action and the first argument is a
directory, that directory is used.
.LI \(bu
If arguments are supplied to the action and the first argument is a
file, the directory where the file is located is used.
.LI \(bu
The current working directory of the application invoking the
action is used.
.LE
.P
Keywords are not evaluated in the
.Cn CWD
field.
.br
.cde .HU "DESCRIPTION Field"
.xo .H 4 "DESCRIPTION Field"
The
.Cn DESCRIPTION
field is optional for
.Cn COMMAND
actions.
This field
specifies a textual description of the action that is suitable for
presentation to a user requesting information about the action.
The
description should contain no formatting information such as tab or
newline characters.
The application that presents the information to the user formats the
information.
.P
Keywords are not evaluated in the
.Cn DESCRIPTION
field.
There is no
default value for the
.Cn DESCRIPTION
field.
.cde .HU "EXEC_HOST Field"
.xo .H 4 "EXEC_HOST Field"
The
.Cn EXEC_HOST
field is optional for
.Cn COMMAND
actions.
This field
specifies the host where the execution string should be invoked.
Valid values for this field include actual hostnames, as well as any
of the hostname keywords.
If a comma-separated list of hostnames is
provided, execution is attempted on each of the hosts in the order
specified until execution succeeds.
.P
Keywords are evaluated in the
.Cn EXEC_HOST
field.
The default value of the
.Cn EXEC_HOST
field is
.BR %DatabaseHost%,%LocalHost% .
(See the description of the
.B ExecutionHosts
resource
.xo in
.xo .cX actionres
for information on how to change this default value.)
.cde .HU "EXEC_STRING Field"
.xo .H 4 "EXEC_STRING Field"
The
.Cn EXEC_STRING
field is required for
.Cn COMMAND
actions.
This field
specifies an execution string to be invoked.
The string is parsed
using the same quoting rules as defined by
.cde .Cm sh 1;
.xo .Cm sh
.xo in the \*(ZC;
however, the
execution string is not automatically passed to any shell.
Therefore,
if the execution string requires shell features such as redirection of
standard input,
redirection of standard output,
or pipes, the appropriate shell must be specified
explicitly in the execution string.
For example:
.Cs I
EXEC_STRING	sh \-c 'ls \-l | more'
.Ce
.P
Keywords are evaluated in the
.Cn EXEC_STRING
field.
There is no default
value for the
.Cn EXEC_STRING
field.
.cde .HU "ICON Field"
.xo .H 4 "ICON Field"
The
.Cn ICON
field is optional for all types of actions.
This field
specifies the name of an icon that represents the action.
.ig zz
(In Cde, the file management and front panel
services show actions as icons.
Icons inform the user of what
actions are available and serve as drop sites as part of
drag-and-drop operations.)
.zz
.P
Icons are
found by using the standard Cde icon search path,
so the value can be either an absolute pathname (for example,
.BR /foo/icons/myicon.bm ),
a relative pathname (for example,
.BR icons/myicon.bm )
or a partial filename (for example,
.BR myicon ).
Partial filenames are preferred because
they allow the Cde icon search path to find the icon with the optimum
size and depth for the current environment.
.P
Keywords are not evaluated in the
.Cn ICON
field.
The default value of the
.Cn ICON
field is
.BR Dtactn .
(See the description of the
.B ActionIcon
resource
.xo in
.xo .cX actionres
for information on how to change this default value.)
.cde .HU "LABEL Field"
.xo .H 4 "LABEL Field"
The
.Cn LABEL
field is optional for all types of actions.
This field
specifies a user-visible label for the action.
When actions are
presented to the user, the localized
.Cn LABEL
field is used to identify
the action instead of the non-localized action name.
.P
Keywords are not evaluated in the
.Cn LABEL
field.
The default value of the
.Cn LABEL
field is the name of the action.
.cde .HU "MAP_ACTION Field"
.xo .H 4 "MAP_ACTION Field"
The
.Cn MAP_ACTION
field is required for
.Cn MAP
actions.
This field
specifies the name of an action that should be invoked in place of the
current action.
The specified action is invoked with the same set of
arguments that were passed to the original action.
.P
Keywords are not evaluated in the
.Cn MAP_ACTION
field.
There is no default
value for the
.Cn MAP_ACTION
field.
.cde .HU "TERM_OPTS Field"
.xo .H 4 "TERM_OPTS Field"
The
.Cn TERM_OPTS
field is optional for
.Cn COMMAND
actions.
This field
specifies command-line options that are passed to the terminal
emulator for all
.Cn COMMAND
actions that are terminal based.
(That is, any
.Cn COMMAND
action other than those that specify
.Cn WINDOW_TYPE
.Cn NO_STDIO .)
These command-line options are typically used to specify a unique
terminal-window geometry, font, color or title.
.P
The value of the
.Cn TERM_OPTS
field must be an option string in a form
the terminal emulator supports and it must only affect the appearance
of the terminal window.
For example, options such as
.BR \-e ,
which affect the
behavior of the terminal window, must not be used.
.P
Keywords are evaluated in the
.Cn TERM_OPTS
field.
The default value of the
.Cn TERM_OPTS
field is
.Cs I
\-title action_label
.Ce
where
.I action_label
is the
.Cn LABEL
field for the action.
See
.Cm dtterm 1
.cde (or
.cde .Cm xterm 1)
for the meaning of
.BR \-title .
.br
.cde .HU "TT_ARGn_MODE Field"
.xo .H 4 "TT_ARGn_MODE Field"
The
.Cn TT_ARGn_MODE
field is optional for
.Cn TT_MSG
actions.
This field
specifies the value of the ToolTalk mode attribute for the
.IR n th
message
argument, where
.I n
is zero for the first message argument.
The valid values for this field are:
.Cn TT_IN ,
.Cn TT_INOUT
and
.Cn TT_OUT .
.P
(See
.Hd Tt/tt_c.h
.xo in
.xo .cX tthdrs
for a description of these values.)
.P
Keywords are not evaluated in the
.Cn TT_ARGn_MODE
field.
There is no
default value for the
.Cn TT_ARGn_MODE
field.
.cde .HU "TT_ARGn_REP_TYPE Field"
.xo .H 4 "TT_ARGn_REP_TYPE Field"
The
.Cn TT_ARGn_REP_TYPE
field is optional for
.Cn TT_MSG
actions.
This field
specifies the representation type of the
.IR n th
ToolTalk message
argument, where
.I n
is zero for the first message argument.
The valid values for this field are:
.VL 6
.Lc TT_REP_UNDEFINED
.br
If
.Cn TT_ARGn_VALUE
references a buffer argument, the representation type
is a buffer; otherwise, it is a string.
.Lc TT_REP_INTEGER
.br
The representation type is an integer.
.Lc TT_REP_BUFFER
.br
The representation type is a buffer.
.Lc TT_REP_STRING
.br
The representation type is string.
.LE
.P
Keywords are not evaluated in the
.Cn TT_ARGn_REP_TYPE
field.
The default
value of the
.Cn TT_ARGn_REP_TYPE
field is
.Cn TT_REP_UNDEFINED .
.cde .HU "TT_ARGn_VALUE Field"
.xo .H 4 "TT_ARGn_VALUE Field"
The
.Cn TT_ARGn_VALUE
field is optional for
.Cn TT_MSG
actions.
If there is
no corresponding
.Cn TT_ARGn_MODE
field, the
.Cn TT_ARGn_VALUE
field is ignored.
If there is a
.Cn TT_ARGn_MODE
field, the
.Cn TT_ARGn_VALUE
field specifies the value of the
.IR n th
ToolTalk message argument,
where
.I n
is zero
for the first message argument.
If there is a
.Cn TT_ARGn_MODE
field with
no corresponding
.Cn TT_ARGn_VALUE
field, the value of the
.IR n th
ToolTalk
message argument is set to
.Cn NULL .
.P
The value of the
.Cn TT_ARGn_VALUE
field must be a single string or action argument.
Keywords that reference a single action argument are
evaluated in the
.Cn TT_ARGn_VALUE
field, however %Args%
is not allowed as
it references multiple action arguments.
There is no default value
for the
.Cn TT_ARGn_VALUE
field.
.cde .HU "TT_ARGn_VTYPE Field"
.xo .H 4 "TT_ARGn_VTYPE Field"
The
.Cn TT_ARGn_VTYPE
field is required to accompany any
.Cn TT_ARGn_MODE
fields in
.Cn TT_MSG
actions.
This field specifies the value of the
ToolTalk vtype attribute of the
.IR n th
message argument, where
.I n
is zero for
the first message argument.
If this field references an argument
keyword, the
.I MEDIA
attribute of the specified argument is used.
If
the
.I MEDIA
attribute is not defined, the
.Cn DATA_ATTRIBUTE
name of the data type is used.
.P
Keywords are evaluated in the
.Cn TT_ARGn_VTYPE
field.
There is no default
value for the
.Cn TT_ARGn_VTYPE
field.
.cde .HU "TT_CLASS Field"
.xo .H 4 "TT_CLASS Field"
The
.Cn TT_CLASS
field is required for
.Cn TT_MSG
actions.
This field
specifies the value of the ToolTalk class message field.
The valid values for this field are:
.VL 6
.Lc TT_NOTICE
.br
The action defines a ToolTalk notification message.
.Lc TT_REQUEST
.br
The action defines a ToolTalk request message.
.LE
.P
Keywords are not evaluated in the
.Cn TT_CLASS
field.
There is no default
value for the
.Cn TT_CLASS
field.
.cde .HU "TT_FILE Field"
.xo .H 4 "TT_FILE Field"
The
.Cn TT_FILE
field is optional for
.Cn TT_MSG
actions.
This field
specifies the value of the ToolTalk file message field.
The value of
this field must be a single file name and can either be a specific
file name (for example,
.BR /tmp/foo )
or an argument keyword
(for example, %Arg_\f21\fP%).
%Args%
is not allowed because it references multiple action arguments.
If an argument keyword is specified and the corresponding
argument is not a file (that is, it is a buffer), the action
invocation fails.
.P
Keywords are evaluated in the
.Cn TT_FILE
field.
There is no default value
for the
.Cn TT_FILE
field; if it is not set, the file attribute of the
ToolTalk message is set to
.Cn NULL .
.cde .HU "TT_OPERATION Field"
.xo .H 4 "TT_OPERATION Field"
The
.Cn TT_OPERATION
field is required for
.Cn TT_MSG
actions.
This field specifies the value of the ToolTalk operation message field.
Typical values are operations such as
.I Display
or
.I Edit
that are
defined by the Media Exchange Message Set.
.P
Keywords are not evaluated in the
.Cn TT_OPERATION
field.
There is no default
value for the
.Cn TT_OPERATION
field.
.cde .HU "TT_SCOPE Field"
.xo .H 4 "TT_SCOPE Field"
The
.Cn TT_SCOPE
field is required for
.Cn TT_MSG
actions.
This field
specifies the value of the ToolTalk scope message field.
(See
.Hd Tt/tt_c.h
for a description of these values.)
The valid values for this field are:
.Cn TT_BOTH ,
.Cn TT_FILE ,
.Cn TT_FILE_IN_SESSION
and
.Cn TT_SESSION .
.P
Keywords are not evaluated in the
.Cn TT_SCOPE
field.
There is no default value for the
.Cn TT_SCOPE
field.
.cde .HU "TYPE Field"
.xo .H 4 "TYPE Field"
The
.Cn TYPE
field is optional for
.Cn COMMAND
actions and required for
.Cn MAP
or
.Cn TT_MSG
actions.
This field specifies the type of behavior defined by
the action.
Valid values for this field are:
.VL 6
.Lc COMMAND
.br
The action invokes a command.
.Lc MAP
The action specifies a different action name to invoke in place of the
current action.
.Lc TT_MSG
.br
The action defines a ToolTalk message to be sent.
.LE
.P
Keywords are not evaluated in the
.Cn TYPE
field.
The default value of the
.Cn TYPE
field is
.Cn COMMAND .
.cde .HU "WINDOW_TYPE Field"
.xo .H 4 "WINDOW_TYPE Field"
The
.Cn WINDOW_TYPE
field is optional for
.Cn COMMAND
actions.
This field specifies the type of windowing support the
execution string requires.
Valid values for this field are:
.VL 6
.Lc NO_STDIO
.br
No windowing support is required.
This value is appropriate for
execution strings that have no output or are X Windows applications.
.Lc PERM_TERMINAL
.br
The execution string requires a terminal window.
When the execution
string exits, the terminal window is left open until the user
explicitly closes it.
This value is appropriate for applications
that write their output to standard output and then terminate, such as
.Cm ls 1.
.Lc TERMINAL
.br
The execution string requires a terminal window.
When the execution
string exits, the terminal window is closed.
If the execution string exits ``quickly'' (see
the description of the
.B waitTime
resource), the terminal window is
left open to allow the user to view any error messages that were
written to standard output or standard error.
This value is
appropriate for full-screen terminal applications such as the
.Cm vi 1
editor.
.LE
.P
Keywords are not evaluated in the
.Cn WINDOW_TYPE
field.
The default value
of the
.Cn WINDOW_TYPE
field is
.Cn PERM_TERMINAL .
.cde .SH RESOURCES
.xo .H 3 Resources
.xo .xR3 actionres
The following resources are available to control the behavior of
actions.
These resources must be set for the application that is
invoking the action.
They can be set for all applications that invoke
actions by omitting the application name or class name.
.P
.cde .ne 10
.DS
.TS
.xo expand box tab(@);
.cde tab(@);
cb sss
lb | lb | lb | lb
lb | lb | lb | lw(4c) .
X11 Resources That Modify Action Behavior
_
Name@Class@Type@Default
_
actionIcon@ActionIcon@string@``Dtactn''
dtEnvMap-@DtEnvMap-@string@``DTAPPSEARCHPATH:
   ForRemote@   ForRemote@@DTHELPSEARCHPATH:
@@@DTDATABASESEARCHPATH:
@@@XMICONSEARCHPATH:
@@@XMICONBMSEARCHPATH''
dtexecPath@DtexecPath@string@``/usr/dt/bin/dtexec''
dtTmpDir@DtTempDir@string@``$HOME/.dt/tmp''
executionHost-@ExecutionHost-@string@``False''
   Logging@   Logging
executionHosts@ExecutionHosts@string@T{
.na
``%DatabaseHost%,
%LocalHost%''
T}
localTerminal@LocalTerminal@string@``dtterm''
remoteTerminals@RemoteTerminals@string@None
waitTime@WaitTime@number@3
.TE
.DE
.P
.VL 6
.LI \f3actionIcon\fP
.br
Specifies the default value of the
.Cn ICON
field for
actions that do not define the field.
The default value of
this resource is
.BR Dtactn .
.br
.LI \f3dtEnvMapForRemote\fP
.br
Specifies a colon-separated list of environment variables names.
Each variable contains a colon-separated list of pathnames to be
mapped for remote actions (see
.Fn tt_file_netfile 3
and
.Fn tt_netfile_file 3 ).
.P
Only environment variables in the user's current environment
.cde (see
.cde .IR environ (5))
are mapped.
.cdes
Supplemental environment variables such as
those added by
.IR dtspcdenv (4),
for example, are not mapped.
.cdee
.P
If a pathname contains substitution characters,
only the portion of the path up to the first percent character is
mapped, with the remaining portion appended to the
resulting mapped portion.
For example, if
.I NLSPATH
is set to
.BR /system/nlslib/%L/%N.cat ,
it maps to
.BR /net/host/system/nlslib/%L/%N.cat .
.br
.LI \f3dtexecPath\fP
.br
Specifies the location of the
.Cm dtexec 1
command that is used for terminal-based actions.
The
default value is
.BR /usr/dt/bin/dtexec .
.LI \f3dtTmpDir\fP
.br
Specifies the full pathname of the directory to be used
for holding temporary files created during action invocation.
The directory must be visible to remote hosts used for action execution.
.LI \f3executionHostLogging\fP
.br
Turns on and off detailed logging to the user's
.B $HOME/.dt/errorlog
of action invocation events.
The default value is False,
which disables logging.
Logging is enabled if this resource is set to True.
.LI \f3executionHosts\fP
.br
Specifies the default value of the
.Cn EXEC_HOST
field for
.Cn COMMAND
actions that do not define the field.
The default value is
.BR %DatabaseHost%,%LocalHost% .
.LI \f3localTerminal\fP
.br
Specifies an alternative terminal emulator for
terminal-based actions that execute locally.
Any terminal emulator
specified by this resource must support the
.B \-title
and
.B \-e
options as
described in
.Cm dtterm 1.
The default value is
.Cm dtterm 1.
.LI \f3remoteTerminals\fP
.br
Specifies the terminal emulator to use for
terminal-based actions that execute on the named system.
The value of this resource is a comma-separated list of the
form \f2host\fP:\f2terminal-path\fP
where
.I terminal-path
is the terminal emulator used when
invoking terminal-based actions on
.I host
host.
The default terminal
emulator used for any host not specified by this resource is
the emulator specified by the
.Cn localTerminal
resource.
.br
.LI \f3waitTime\fP
.br
Specifies the time threshold used for
.Cn COMMAND
actions that specify
.Cn WINDOW_TYPE
.Cn TERMINAL .
If the command exits in less than
.I waitTime
seconds,
the terminal window is left open.
The default value is 3.
.LE
.cde .SH EXAMPLES
.xo .H 3 Examples
The following action is defined to pipe its argument through the
.Cm pr 1
and
.Cm lp 1
commands:
.Cs I
ACTION PrintText
{
	ICON		printer
	DESCRIPTION	Paginate and print a text file to the \e
			default printer.
.sp 0.5v
	ARG_TYPE	Text
.sp 0.5v
	TYPE		COMMAND
	EXEC_STRING	sh \-c 'pr %Arg_1"File to print:"% | lp'
	WINDOW_TYPE	NO_STDIO
}
.Ce
.P
The following action defines that
.I Open
on Text files use the EditText action:
.Cs I
ACTION Open
{
	ARG_TYPE	Text
	TYPE		MAP
	MAP_ACTION	EditText
}
.Ce
.P
The following action is defined to send the ToolTalk Display request
message for non-writable objects:
.br
.Cs I
ACTION Display
{
	ARG_CLASS		BUFFER
	ARG_MODE		!w
.sp 0.5v
	TYPE			TT_MSG
	TT_CLASS		TT_REQUEST
	TT_SCOPE		TT_SESSION
	TT_OPERATION		Display
	TT_ARG0_MODE		TT_IN
	TT_ARG0_VTYPE		%Arg_1%
	TT_ARG0_VALUE		%Arg_1%
}
.Ce
.cde .SH "APPLICATION USAGE"
.xo .H 3 "Application Usage"
Errors encountered when loading database files are written to the
user's
.BR $HOME/.dt/errorlog .
Errors encountered in the value of an
action field cause the field to be rejected.
If the field is a required field, the entire action definition is rejected.
Errors encountered when an action is invoked cause an error dialog to be
displayed to the user.
.cdes
.SH "SEE ALSO"
.Hd Tt/tt_c.h,
.BR dtdtfile (4),
.BR dtdtsfile (4),
.Fn DtActionInvoke 3,
.Fn tt_file_netfile 3,
.Fn tt_netfile_file 3,
.Cm dtterm 1.
.cdee
