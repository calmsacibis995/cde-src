...\" **  (c) Copyright 1993, 1994 Hewlett-Packard Company
...\" **  (c) Copyright 1993, 1994 International Business Machines Corp.
...\" **  (c) Copyright 1993, 1994 Sun Microsystems, Inc.
...\" **  (c) Copyright 1993, 1994 Novell, Inc
...\" **
...\" **
...\" **
...\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
...\" **      All Rights Reserved.
...\" **
...\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
...\" **
...\" **  (c) Copyright 1988 by Massachusetts Institute of Technology
...\" **
...\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
...\" **      Maynard, MA.  All Rights Reserved.
...\" **
...\" **
.TH XmClipboardUndoCopy 3X "" "" "" ""
.ds )H Hewlett-Packard Company
.ds ]W Motif Release 1.2: May 1992
.SH NAME
\fIXmClipboardUndoCopy\fP \- A clipboard function that deletes the last item placed on the clipboard
.SH SYNOPSIS
.nf
.sS
.iS
\&#include <Xm/Xm.h>
\&#include <Xm/CutPaste.h>
.sp \n(PDu
int \fIXmClipboardUndoCopy\fI (\fBdisplay, window\fI)
.ta .5i 1.5i
.nf
	Display	\fB* display\fI;
	Window	\fBwindow\fI;
.wH
.fi
.iE
.sE
.SH DESCRIPTION
.fi
\fIXmClipboardUndoCopy\fP
deletes the last item placed on the clipboard if the item
was placed there by an application with the passed \fBdisplay\fP and
\fBwindow\fP arguments.  Any data item deleted from the clipboard by the
original call to \fIXmClipboardCopy\fP is restored.  If the \fBdisplay\fP
or \fBwindow\fP IDs do not match the last copied item, no action is taken,
and this function has no effect.
.nL
.ne 12
.IP "\fBdisplay\fP"
Specifies a pointer to the \fIDisplay\fP structure that was returned in a
previous call to \fIXOpenDisplay\fP or \fIXtDisplay\fP.
.IP "\fBwindow\fP"
Specifies a widget's window ID that relates the application window to the
clipboard.  The widget's window ID can be obtained by using
\fIXtWindow\fP.
The same application instance should pass the same window ID to each
clipboard function it calls.
.SH RETURN VALUE
.IP "\fIClipboardSuccess\fP"
The function is successful.
.IP "\fIClipboardLocked\fP"
The function failed because the clipboard was locked by another
application.  The application can continue to call the function again with
the same parameters until the lock goes away.  This gives the application
the opportunity to ask if the user wants to keep trying or to give up
on the operation.
.SH RELATED INFORMATION
.na
\fIXmClipboardLock(3X)\fP and \fIXmClipboardStartCopy(3X)\fP.
.ad
