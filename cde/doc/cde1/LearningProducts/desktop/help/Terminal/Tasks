<chapter id=Tasks>Terminal Tasks

<list bullet tight>
*<xref StartStopTerminalEmulatorSI>
*<xref XTClosingTerminalTA>
*<xref CutPasteTextTA>
*<xref windowresize>
*<xref ResizeTerminalWindowTA>
*<xref XTRunningClientsTA>
*<xref rlogin>
*<xref config>
<\list>

<s1 id=StartStopTerminalEmulatorSI>To Start ``dtterm'' 

There are several ways you can start a &ProductName; terminal
emulator:
<list bullet tight>
* From the Front Panel
* From File Manager
* From a command in an existing terminal window
* From Application Manager
* From New in the Terminal Window pulldown menu
<\list>

<!--s1 id=XTUsingTerminalControlTA-->
<procedure>To Start Terminal from the Front Panel

     <idx|starting: terminal emulator|
     <idx|closing: terminal emulator|
     <idx|Terminal: button|
     <idx|button: Terminal|

The Terminal control is located in the Personal Applications subpanel.

<figure nonumber entity=fptermOL>
<\figure>

<list bullet>
* Click the Terminal control.  The busy light blinks, indicating that
the terminal is being activated.
*The Terminal window appears after a short time.
<\list>

<!-- s1 id=ToStartATerminalFromFileManagerTA -->
<procedure>To Start Terminal from File Manager

<list bullet>
* Choose Open Terminal from the File menu.
<\list>

<figure nonumber entity=fmgrtermOL>
<\figure>

This step opens a Terminal with the same current directory
as the File Manager view. 


<!-- s1 id=XTStartingTermFromCommandLineTA -->
<procedure>To Start a Terminal Emulator Other Than ``dtterm''
To use a terminal emulator other than
``dtterm'',
start it from a command line in an
existing terminal emulator window.

<list bullet tight>
*At the command-line prompt, type the name of the terminal emulator and
any options you want.  For example, to start ``xterm'', enter:

<ex>
xterm  [%%options%%] &&
<\ex>

<lablist>
\%%options%%\	represents optional items to customize the terminal emulator.
\``&''\	     	specifies that the terminal emulator runs in the background,
				so you can continue working in your
				original window while the terminal emulator is 
				running.
		
<\lablist>

The terminal emulator starts in the current workspace
unless directed otherwise by options. 
<\list>

<procedure>To Start Terminal from the Window Menu
<list bullet tight>
*Choose New from the Window menu in an existing Terminal window.
A duplicate Terminal window appears.
<\list>

<procedure>Examples

The following command starts a Terminal window in the workspace ``Project
Notes'':

<ex>
dtterm -xrm '*workspaceList: "Project Notes"' &&
<\ex>

The following command starts a Terminal window on a screen on the system
named "lgmcd":

<ex>
dtterm -display lgmcd:0.1 &&
<\ex>

<procedure>See Also

<list tight bullet>
* Refer to the <link manpage1x>``dtterm (1X)''<\link> man page for details
about the options available for ``dtterm''.
<\list>


<s1 id=XTClosingTerminalTA>To Close Terminal 
     <idx|closing: ``dtterm''|
     <idx|window menu: button|

<list order tight>
* Type ``exit'' at the command line and press Return.
* !!Or!!, Choose Exit from the Window menu.
* !!Or!!, choose Close from the window 
menu pulldown menu, which can be accessed from the button at the upper left corner of
the window manager frame.
<\list>

<note>
Typing ``exit'' at the command line is the preferred method of
closing Terminal.  Closing it through the menus does not terminate
any background
processes you started from Terminal, which can sometimes cause
problems.
<\note>

<s1 id=CutPasteTextTA>To Copy and Paste Text

     <idx|cutting: text|
     <idx|pasting: text|
     <idx|text: cutting and pasting|

<procedure>To Copy Text
<list order>
*Using mouse button 1,
drag the pointer over the text you want to copy.  The text appears 
highlighted. 
*Release mouse button 1 after all the text you want
to copy is highlighted.
<\list>

The text is not 
removed from its original position.

<procedure>To Paste Text
<list order>
*Position the cursor where you want to insert the text.
*Click mouse button 2.
<\list>

A copy of the current selection is pasted at the location you
indicated.  You can paste additional copies by repeating the above steps.

<newpage>

<s1 id=windowresize>To Resize the Terminal Window
     <idx|resize window|
<list  order tight>
*Choose Window Size from Options.
*Choose one of the three sizes:
<list bullet tight>
*80x24
*132x24
*normal
<\list>
<\list>
<note>
In some cases, depending on the screen size and font size you are using,
you may not be able
to resize the Terminal window to 132 columns.  In this case, Terminal
resizes to the maximum number of columns allowable under the circumstances.
<\note>

You can also resize Terminal using the Window Manager menu.
<procedure>See Also
<xref ResizeTerminalWindowTA>

<s1 id=ResizeTerminalWindowTA>To Resize the Window Contents

     <idx|``resize'' function|


When you change the size of a terminal emulator window, applications running in the
window may not know about the resizing.  Use this procedure to resize the
output from the application.

<list bullet>
*At the command-line prompt, type:
<ex>
eval `resize`
<\ex>
<\list>

<procedure>See Also
<xref windowresize>

<s1 id=XTRunningClientsTA>To Start Applications in a Terminal Window

<list bullet>
* Enter the command to start the application at the command-line prompt.
<\list>

The general syntax for starting an application is:

<ex>
%%application%% [%%options%%] &&
<\ex>

<lablist>
\%%application%%\the application name.

\%%options%%\	a list of optional information to be passed to the
		application.

\``&''\		specifies that the application runs in the background, so
		you can continue to use the terminal emulator window
		while the application is running.
<\lablist>

<procedure>Example
To start a digital clock from the command line:
<ex>
xclock -digital &&
<\ex>


<procedure>See Also
<list tight bullet>
*Refer to the man page or other documentation for each application to
find the command and options to use for that application.
<\list>

<s1 id=rlogin>To Log On to a Remote System
<procedure>Using rlogin
Use the ``rlogin'' command in an existing terminal emulator window to log
in to a remote host.
Once the window is acting as a terminal to the remote host, you can run
applications there, redirecting the display back to your system if you
desire.

<procedure>Example
The following command logs onto a system named ``there'', runs
the client ``xload'', and redirects the display back to your original 
system.  Assume your system is named ``here''.
<ex>
rlogin there
xload -display here:0
<\ex>

<procedure>Using remsh

The ``remsh'' command starts a shell on a remote host, performs some
client (often starting a terminal emulator on that host), and redirects the
display back to your original system, if desired.
The syntax is:
<ex>
remsh %%remote%% -n %%client%% -display %%system:display[.screen]%%
<\ex>
where:
<lablist width=1.5in>
\%%remote%%\   The remote host name
\%%client%%\   The program you want to run on the remote host
\%%system:display[.screen]%%\  The host and display on which the results
are to be displayed.

<\lablist>

<procedure>Example
The following command runs ``xload'' on the remote host named
``there'', and directs output back to your system, ``here''.
<ex>
remsh there -n /usr/bin/X11/xload -display here:0.0 &
<\ex>

The ``remsh'' command is often used when customizing a menu to access other
hosts.


<s1 id=config>To Configure ``dtterm'' 

<list bullet>
* <xref setresources>
* <xref XTUsingScrollbarsTA>
* <xref XTSettingTTYResourceTA>
<\list>

<s2 id=setresources>To Set ``dtterm'' Resources
A resource is a variable whose value affects some attribute of
``dtterm''.  Examples of resources are foreground color, background
color, height, and width.  Resources are found in a resource database.
Examples of ``dtterm'' resources are:

<ex>
Dtterm*saveLines:  4s
Dtterm*scrollBar: True
<\ex>

App-default files for the desktop applications are located in the
``/usr/dt/app-defaults/language'' directory.

Resources are loaded at session startup by Session Manager.  For information 
on how Session Manager loads the resources into the RESOURCE_MANAGER, 
see "Loading the Session Resources" in the !!CDE Advanced User's & System
Administrator's Guide!!.

<s3>To Set System-Wide Resources
<list bullet tight>
*Add the resources to the file ``/etc/dt/config/language/sys.resources''.  
You may have to create the file. 
<\list>
For example, if in ``/etc/dt/config/C/sys.resources'', you specify:

<ex>
AnApplication*resource: value
<\ex>

then the resource ``AnApplication*resource'' is set in each user's 
RESOURCE_MANAGER property at the next login.

<s3>To Set Personal Resources
<list order tight>
*Add the resources to the file !!HomeDirectory!!``/.Xdefaults''.
*Double-click Reload Resources in the Desktop_Tools application group.
<\list>

<!-- MODULE XTUsingScrollbarsTA xt405.TAe -->
<s2 id=XTUsingScrollbarsTA>To Specify Scrollbars
<list order>
*Specify a ``scrollBar'' resource for
the terminal emulator.
If the value of ``scrollBar'' is True, ``dtterm'' 
has scrollbars.  If the value is False, it does not have scrollbars.

*Log out, then log back in for the current session.  For home session,
set home session, log out, then log back in.
<\list>

<procedure>Examples
To set scrollbars in all ``dtterm'' windows:
<ex smaller>
Dtterm*scrollBar:     True
<\ex>

To set scrollbars only for ``dtterm'' windows named "localTerminal":
<ex smaller>
localTerminal*scrollBar:   True
<\ex>

<s2 id=XTSettingTTYResourceTA>To Set Terminal Control Characters

<list bullet>
*Edit the ``ttyModes'' resource using one of the methods described in
<link setresources>Setting ``dtterm'' Resources<\link>.
<\list>

The syntax for this resource is:
<ex smaller>
ttyModes:  %%^C%%  %%name%%
<\ex>

where %%name%% is the control, and %371% is the character.  For example,
the default value of ``ttyModes'' is:
<ex smaller>
ttyModes:	erase ^H intr ^C kill ^U start ^Q stop ^S swtch ^@
<\ex>
Because ``dtterm'' only !!emulates!! a terminal, your
control characters might not be what you are used to on a physical
terminal.  Using the ``ttyModes'' resource, you can set control characters
for your terminal emulator.

<need begin>
By default, Login Manager sets the following control characters:
<lablist>
<labheads>\Control name\   Character (Effect)
\erase\		^H (Backspace erases characters.)
\intr\		^C (Interrupt - cancel the current operation and redisplay the
		command-line prompt.)
\kill\		^U (Clear the input line.)
\start\		^Q (Start subprocess output.)
\swtch\		^@ (Switch between layers in a shell.)
<\lablist>
<need end>

<note>
The "``^''" character stands for the [[CTRL]] key, so to interrupt an
operation in progress, you press [[CTRL]] [[C]].  When setting
``ttyModes'', use the [[^]]
key instead of the [[CTRL]] key.
<\note>

