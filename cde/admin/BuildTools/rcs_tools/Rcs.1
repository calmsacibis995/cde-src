.\" $Header: Rcs.1,v 1.2 93/07/12 10:55:45 xbuild_hp_cv Exp $
.TH Rcs 1 "" "" HP-UX
.ds )H Hewlett-Packard Company UTD-CV
.ds ]W July 1993
.SH NAME
Rcs \- OSSD-CV rcs utility with remote capabilities.
.SH SYNOPSIS
.B Rcs
.RI [ \|options\| ]
.I file ...
.SH DESCRIPTION
.I Rcs
is a perl front-end to the
.I rcs
program used for local and remote source exchange.
It is used exactly like the original RCS executable except that full
path names should be used when you are not in the directory containing
the RCS subdirectory. The most useful options for an engineer are 
.I -l
and
.IR -u .
.SH DESCRIPTION
.I Rcs
creates new
.SM RCS
files or changes attributes of existing ones.
An
.SM RCS
file contains multiple revisions of text, an access list,
a change log, descriptive text, and some control attributes.
For
.I Rcs
to work, the user's login name must be on the access list,
except if the access list is empty,
if the user is the owner of the file
or the superuser, or if the
.I -i
option is present.
.PP
The user of the command must have read/write permission
for the directory containing the
.SM RCS
file and read permission for the
.SM RCS
file itself.
.I Rcs
creates a semaphore file in the same directory as the
.SM RCS
file to prevent simultaneous update.
For changes,
.I Rcs
always creates a new file.
On successful completion,
.I Rcs
deletes the old one and renames the new one.
This strategy makes links to
.SM RCS
files useless.
.PP
Files ending in
.I ,v
are
.SM RCS
files; all others are working files.
If a working file is given,
.I Rcs
tries to find the corresponding
.SM RCS
file first in directory
.IR ./RCS ,
then in the current directory, as explained in
.IR Rcsintro (5).
.SS Options
.I Rcs
recognizes the following options:
.RS
.TP 15
.I -a logins
Appends the login names appearing in the comma-separated list
.I logins
to the access list of the
.SM RCS
file.
.TP
.I -A oldfile
Appends the access list of
.I oldfile
to the access list of the
.SM RCS
file.
.tr ~"
.TP
.I -c~ string ~
Sets the comment leader to
.IR string .
.tr ~~
The comment leader is printed
before every log message line generated by the keyword
.I $\&Log$
during check out (see
.IR co (1)).
This is useful for programming
languages without multi-line comments.
During
.I Rcs -i
or initial
.IR ci ,
the comment leader is guessed from the suffix of the working file.
.TP
.IR -e [\|\f2logins\f1\|]
Erases the login names
appearing in the comma-separated list
.I logins
from the access list of the
.SM RCS
file.
If
.I logins
is omitted, the entire access list is erased.
.TP
.I -i
Creates and initializes a new
.SM RCS
file, but does not deposit any revision.
If the
.SM RCS
file has no path prefix,
.I Rcs
tries to place it first into the subdirectory
.IR ./RCS ,
then into the current directory.
If the
.SM RCS
file already exists, an error message is printed.
.TP
.IR -l [\|\f2rev\fP\|]
Locks the revision with number
.IR rev .
If a branch is given, the latest revision on that branch is locked.
If
.I rev
is omitted, the latest revision on the trunk is locked.
Locking prevents overlapping changes.
A lock is removed with
.I ci
or
.I Rcs -u
(see below).
.TP
.I -L
Sets locking to
.IR strict .
Strict locking means that the owner of an
.SM RCS
file is not exempt from locking for check in.
This option should be used for files that are shared.
DO NOT USE THIS OPTION UNLESS YOU ARE THE RCS ADMINISTRATOR!
.TP
.IR -n \f2name\fP[ : [\|\f2rev\f1\|]\|]
Associates the symbolic name
.I name
with the branch or revision
.IR rev .
.I Rcs
prints an error message if
.I name
is already associated with another number.
If
.I rev
is omitted, the symbolic name
is associated with the latest revision on the trunk.
If
.I : rev
is omitted, the symbolic name is deleted.
DO NOT USE THIS OPTION UNLESS YOU ARE THE RCS ADMINISTRATOR!
.TP
.IR \-N \f2name\fP[ : [\|\f2rev\f1\|]\|]
Same as
.IR -n ,
except that it overrides a previous assignment of
.IR name .
DO NOT USE THIS OPTION UNLESS YOU ARE THE RCS ADMINISTRATOR!
.TP
.I -o range
Deletes ("obsoletes") the revisions given by
.IR range .
A range consisting of a single revision number means that revision.
A range consisting of a branch number
means the latest revision on that branch.
A range of the form
.IR rev1 \- rev2
means revisions
.I rev1
to
.I rev2
on the same branch,
.I - rev
means from the beginning of the branch containing
.I rev
up to and including
.IR rev ,
and
.RC rev -
means from revision
.I rev
to the head of the branch containing
.IR rev .
None of the outdated revisions can have branches or locks.
THIS IS A VERY DANGEROUS OPTION!
.TP
.I -q
Quiet mode; diagnostics are not printed.
.TP
.IR -s \f2state\fP[ : \f2rev\|\fP]
Sets the state attribute of the revision
.I rev
to
.IR state .
If
.I rev
is omitted, the latest revision on the trunk is assumed.
If
.I rev
is a branch number, the latest revision on that branch is assumed.
Any identifier is acceptable for
.IR state .
A useful set of states
is
.I Exp
(for experimental),
.I Stab
(for stable), and
.I Rel
(for released).
By default,
.I ci
sets the state of a revision to
.IR Exp .
.TP
.IR -t \|[\|\f2txtfile\fP\|]
Writes descriptive text into the
.SM RCS
file (deletes the existing text).
If
.I txtfile
is omitted,
.I Rcs
prompts the user for text supplied from the standard input,
terminated with a line containing a single
.I .
or Ctrl-D.
Otherwise, the descriptive text is copied from the file
.IR txtfile .
If the
.I -i
option is present, descriptive text is requested even if
.I -t
is not given.
The prompt is suppressed if the standard input is not a terminal.
.TP
.IR -u \|[\|\f2rev\fP\|]
Unlocks the revision with number
.IR rev .
If a branch is given,
the latest revision on that branch is unlocked.
If
.I rev
is omitted, the latest lock held by the user is removed.
Normally, only the locker of a revision may unlock it.
Somebody else unlocking a revision breaks the lock.
This causes a mail message to be sent to the original locker.
The message contains a commentary solicited from the breaker.
The commentary is terminated with a line containing a single
.I .
or Control-D.
.TP
.I -U
Sets locking to non-strict.
Non-strict locking means that the owner of
a file need not lock a revision for check in.
This option should
.I not
be used for files that are shared.
The default
.RC ( -L
or
.IR -U )
is determined by the system administrator.
DO NOT USE THIS OPTION UNLESS YOU ARE THE RCS ADMINISTRATOR!
.RE
.SS "Access Control Lists (ACLs)
Do not add optional
.SM ACL
entries to an
.SM RCS
file, because they are deleted when the file is updated.
The resulting access modes for the new file might not be as desired.
.SH DIAGNOSTICS
The
.SM RCS
filename and the revisions outdated
are written to the diagnostic output.
The exit status always refers to the last
.SM RCS
file operated upon, and is 0 if the operation was successful;
1 if unsuccessful.
.SH EXAMPLES
Lock the file foo.c where the RCS directory path is present in the
current directory:
.IP
.I Rcs \-l foo.c
.PP
Unlock all of the files in the current directory:
.IP
.I Rcs \-u *
.PP
Lock the file foo1.c in the /users/myclone/directory from anywhere:
.IP
.I Rcs \-l /users/myclone/RCS/foo1.c,v
.PP
Add the names
.IR jane ,
.IR mary ,
.IR dave ,
and
.I jeff
to the access list of
.SM RCS
file
.IR vision,v :
.IP
.I Rcs \-ajane,mary,dave,jeff vision
.PP
Set the comment leader to
.IC tab *
for file
.IR vision :
.IP
.I "Rcs -c'\f2tab\fP*' vision"
.PP
Associate the symbolic name
.I sso/6_0
with revision
.I 38.1
of file
.IR vision :
.IP
.I Rcs -Nsso/6_0:38.1 vision
.PP
Lock revision
.I 38.1
of file
.I vision,v
so that only the locker is permitted to check in (see
.IR ci (1))
the next revision of the file.
This command prevents two or more people
from simultaneously revising the same file
and inadvertently overwriting each other's work.
.IP
.I Rcs -l38.1 vision,v
.SH AUTHOR
was developed by Marc Ayotte & Ron Voll,
OSSD-CV, Hewlett-Packard.
.I rcs
was developed by Walter F. Tichy.
.SH SEE ALSO
Co(1),
Ci(1),
Rcsdiff(1),
Rcsmerge(1),
Rlog(1),
Rcsfile(4),
Acl(5),
Rcsintro(5).
