/*
 *+SNOTICE
 *
 *	RESTRICTED CONFIDENTIAL INFORMATION:
 *	
 *	The information in this document is subject to special
 *	restrictions in a confidential disclosure agreement bertween
 *	HP, IBM, Sun, USL, SCO and Univel.  Do not distribute this
 *	document outside HP, IBM, Sun, USL, SCO, or Univel wihtout
 *	Sun's specific written approval.  This documment and all copies
 *	and derivative works thereof must be returned or destroyed at
 *	Sun's request.
 *
 *	Copyright 1993 Sun Microsystems, Inc.  All rights reserved.
 *
 *+ENOTICE
 */

#ifndef I_HAVE_NO_IDENT
#pragma ident " @(#)PropUi.hh	1.9 10/30/95 "
#endif

#include <DtMail/PropSource.hh>

#ifndef _PROPUI_HH
#define _PROPUI_HH

// This class is the 'glue' between the mail back end and the Props GUI as 
// generated by dtbuilder


// defines the type of item one wishes to create
typedef enum {
  _ANTICHECKBOX_ITEM,
  _CHECKBOX_ITEM,
  _TEXTFIELD_ITEM,
  _LIST_ITEM,
  _SPINBOX_ITEM,
  _SCALE_ITEM,
  _DATEFIELD_ITEM,
  _FILEBOX_ITEM
  } PROP_UI_ITEM_TYPE;

// defines the possible sources for props variables
typedef enum { 
  _FROM_MAILRC,
  _FROM_XRDB,
  _FROM_FILE
  } PROP_SOURCES;

// CLASS PropUiItem
// Base class for Prop sheet item glue list elements
///////////////////////////////////////////////////////////
class PropUiItem {

public:
  
  PropUiItem(Widget w, int source, char *search_key );
  virtual ~PropUiItem();
  
  Widget getWidget(){ return prop_widget; };
#ifdef DEAD_WOOD
  virtual int getType() = 0;
  virtual int getSource() = 0;
#endif /* DEAD_WOOD */
  virtual void writeFromUiToSource() = 0;
  virtual void writeFromSourceToUi() = 0;
  Boolean getDirtyBit(){ return dirty_bit; };
  void setDirtyBit(Boolean db) { dirty_bit = db; };
  char *getKey(){ return key; };
  PropSource *getPropSource(){ return prop_source; };

protected:

  Boolean	dirty_bit;
  PropSource	*prop_source;

private:

  Widget 	prop_widget;
  char 		*key;

};

#endif
