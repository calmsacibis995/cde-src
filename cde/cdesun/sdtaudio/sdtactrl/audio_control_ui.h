/*
 * File: audio_control_ui.h
 * Contains: Declarations of module objects, user create procedures,
 *           and callbacks.
 *
 * This file was generated by dtcodegen, from module audio_control
 *
 *    ** DO NOT MODIFY BY HAND - ALL MODIFICATIONS WILL BE LOST **
 */
#ifndef _AUDIO_CONTROL_UI_H_
#define _AUDIO_CONTROL_UI_H_

#include <stdlib.h>
#include <X11/Intrinsic.h>
#include "dtb_utils.h"

/*
 * User Interface Objects
 */
/*
 * Shared data structures
 */

typedef struct {
    Widget	On_item;
    Widget	Off_item;
} AudioControlMuteRbItemsRec, *AudioControlMuteRbItems;
typedef struct {
    Widget	Microphone_item;
    Widget	Line_In_item;
    Widget	CD_item;
} AudioControlInputDevRbItemsRec, *AudioControlInputDevRbItems;
typedef struct {
    Widget	Speaker_item;
    Widget	Headphone_item;
    Widget	Line_Out_item;
} AudioControlSpeakerCbsItemsRec, *AudioControlSpeakerCbsItems;
typedef struct
{
    Boolean	initialized;
    
    Widget	main_window;	/* object "main_window" */
    Widget	main_window_mainwin;
    Widget	main_window_form;
    
    Widget	controlpane2;
    Widget	main_pane;
    Widget	ok_button;
    Widget	cancel_button;
    Widget	help_button;
    Widget	sys_vol_label;
    Widget	sys_balance_label;
    Widget	balance_scale;
    Widget	right_vol_label;
    Widget	left_vol_label;
    Widget	output_device_label;
    Widget	system_mute_label;
    
    Widget	mute_rb;	/* object "mute_rb" */
    AudioControlMuteRbItemsRec	mute_rb_items;
    
    Widget	separator;
    Widget	record_vol_label;
    Widget	rec_vol_scale;
    Widget	rec_balance_label;
    Widget	rec_balance_scale;
    Widget	left_rec_label;
    Widget	right_rec_label;
    Widget	input_dev_label;
    
    Widget	input_dev_rb;	/* object "input_dev_rb" */
    AudioControlInputDevRbItemsRec	input_dev_rb_items;
    
    Widget	speaker_cbs;	/* object "speaker_cbs" */
    AudioControlSpeakerCbsItemsRec	speaker_cbs_items;
    
    Widget	title_group;
    Widget	separator2;
    Widget	separator3;
    Widget	separator4;
    Widget	rec_settings_group;
    Widget	separator5;
    Widget	separator6;
    Widget	separator7;
    Widget	separator8;
    Widget	sys_vol_scale;
    Widget	sys_title_label;
    Widget	hostname1;
    Widget	record_settings_label;
    Widget	hostname2;
    int         last_play_vol;
    int         last_play_bal;
    int         last_record_vol;
    int         last_record_bal;
} DtbAudioControlMainWindowInfoRec, *DtbAudioControlMainWindowInfo;


extern DtbAudioControlMainWindowInfoRec dtb_audio_control_main_window;

/*
 * Structure Clear Procedures: These set the fields to NULL
 */
int dtbAudioControlMainWindowInfo_clear(DtbAudioControlMainWindowInfo instance);

/*
 * Structure Initialization Procedures: These create the widgets
 */
int dtb_audio_control_main_window_initialize(
    DtbAudioControlMainWindowInfo	instance,
    Widget	parent
);

/*
 * User Callbacks
 */
void SysRecVolChangeCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysPlayVolChangeCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysPlayBalanceChangeCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysRecBalanceChangeCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysPlayJackCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysMuteCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysOutputPortCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysInputPortCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysRecordBalCreateCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysPlayVolCreateCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysRecordVolCreateCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void SysPlayBalCreateCB(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);

/*
 * Connections
 */
#endif /* _AUDIO_CONTROL_UI_H_ */
