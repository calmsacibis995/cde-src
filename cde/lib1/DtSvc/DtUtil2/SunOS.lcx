!
!  (c) Copyright 1993, 1994 Hewlett-Packard Company
!  (c) Copyright 1993, 1994 International Business Machines Corp.
!  (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.
!  (c) Copyright 1993, 1994 Novell, Inc.
!
!!!!!!!!!!!!!! SunOS Locale-Related Translations !!!!!!!!!!!!!!
! File:			SunOS.lcx
! Default location:	/usr/dt/config/svc/SunOS.lcx
! Purpose:
!    Define the SunOS-specific set of locale-related translations.
! Description:
!    This file contains the set of all locale-related translations
!    that  can occur during _DtLcxXlateOpToStd() and _DtLcxStdToOp()
!    calls on SunOS platforms. Note that platform-specific tables may
!    include more than one translation to and from CDE standard
!    strings if they can be distinguished by version, operation, or
!    pattern matching.
!
!    It is important that additional CDE standard strings only
!    be created by the CDE owner of the _DtLcx translation service
!    and NOT be created by an individual vendor or user.  This be because
!    the purpose of adopting a set of CDE standard strings is to 
!    support interoperability across platforms.  If individual vendors 
!    add their own "standard" strings and these strings are not
!    known on other platforms, then the goal of interoperability
!    will be defeated.
!
!    If you feel that a new CDE standard string is needed,
!    contact your CDE representative/vendor with a specific
!    proposal and justification and have them forward it to
!    the owner of the CDE _DtLcx service.
!
!    Note that it is allowed for vendors and users to add new
!    operations for which translations are specified and which
!    utilize the standard strings.  If the operations are of
!    general utility, please bring them to the attention of
!    your CDE representative/vendor for forwarding to the
!    _DtLcx owner.
! Invoked by:
!    This table is used by the _DtLcx translation service
! Product:	@(#)Cde1
! Revision:	$Revision: 1.16 $
! Defects:
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!! translation specification syntax !!!!!!!!!!!!!!!!!!!
! Introductory fields:
! ====================
! The _DtLcx translation specifications have a fixed number of
! introductory fields followed by a several standard value
! fields and the operation-specific value.
! The introductory fields are:
!  <platform>.<version range>.<operation(s)>.<kind>
!
! Platform generally is the same string as uname(1) -s.
! Version range utilizes normalized version numbers that 
!   are acquired using the 'version' translations.
! Operations are one or more comma-separated strings that
!   uniquely identify the operation associated with the
!   operation-specific value.  This string is specified
!   as part of the request for a translation.
!
! Kinds of translations allow the mechanism to support several modes
!   of operation, each useful for different purposes.  When
!   reading or writing a specification, pay particular attention
!   to the kind of specification, as this guides the usage of it.
!
! Specification kinds:
!  .=. means a valid bi-directional translation requiring the op-value 
!      in the translation specification to exactly match the op-value of 
!      the call to _DtLcxXlateOpToStd(), e.g. foo matches only foo
!  .~. means a valid bi-directional translation requiring the op-value 
!      in the translation specification to match the beginning of the
!      op-value of the call to _DtLcxXlateOpToStd(), e.g. foo matches 
!      foo@bar.  This is often useful, e.g. for operation-specific
!      locale strings that may also contain modifier suffixes.
!  .>. means only from standard to op-specific (generally a 
!      compatibility translation, meaning on op-specific value 
!      that will work for the standard, although that is not 
!      the straight mapping)
!  .<. means only from op-specific to standard (generally a
!      regex in the op-value which is used to map a class of
!      op values to a standard value)
!  .0. means that translation is not supported and if a translation
!      request matches the specification, the request will fail.
!      Because there is no way to turn off a translation marked
!      with .0. once it is specified, the preferred method of
!      indicating that a translation is not supported --at the moment--
!      is just to comment out the translation rather than use .0.
!
! Standard values:
! ================
! _DtLcx defines the order of the standard values in the
! translations it utilizes.  All translation specifications
! must adhere to this order.
!    <std lang_terr>.<std codeset>.<std modifier>
! In CDE 1.0, no modifiers are standardized and that
! portion of the table is unspecified.  This means
! that no CDE standard modifiers are available across
! platforms.  Operations that use only the <std codeset>
! should specify the wildcard character ("?") for the 
! <std lang_terr> value.
!
! Operation-specific value:
! =========================
! The operation-specific value is a string that is used
! according to the kind of translation.  The syntax is
!      : <op-string>
! or   :  "<op-string>", if it contains white space
! 
! Filling in the table of translations:
! =====================================
! The person preparing the translation table should know 
! the minimum version of the target platform that is
! be supported.  For example, assume that we must
! complete the table for all versions 9.00 and higher.
! 
! The objective is then to provide two sets of translations:
! a full set of translations from CDE standard locales to
! valid platform locales, and a full set of translations
! from valid platform locales to some or all CDE standard
! locales.  
! 
! Translations from CDE standard locales to valid platform
! locales must use the .~. .=. or .>. mappings.  When there 
! is a 1:1 mapping between a CDE locale and a platform locale, 
! use the .~. or .=. mapping.  See the comment below to 
! decide which to use.  When there is no 1:1 mapping between 
! CDE locale and platform locale, use the .>. mapping.  This 
! provides a valid translation from the CDE locale to the 
! best-suitable platform locale, but never translates from 
! that platform locale to the CDE locale.
! 
! Translations from every platform locale to the appropriate 
! CDE locale must use the .~. .=. or .<. mappings.
! When there is a 1:1 mapping between a platform locale and
! a CDE standard locale, use the .~. or .=. mapping.  See the
! comment below to decide which to use.  If there is a 1:1
! mapping, but the platform locale pattern uses a regular
! expression, or if more than one platform locale can 
! be translated to one CDE standard locale, the .<. mapping must 
! be used.  
! 
! If no appropriate CDE standard locale can be found, you have 
! identified the need for a new CDE standard locale.  Refer to 
! the instructions at the head of this file for how to go about 
! registering a new CDE standard locale.  You should not create 
! a new "standard" locale (the left hand side of the translation 
! specification) without registering it with CDE, because this 
! will hinder the free exchange of information across locales 
! and platforms.
! 
! The .=. and .~. mappings are similar.  The difference is
! that the .=. mapping requires an exact string match between
! the platform locale and the string provided to the
! translation routine.  Generally speaking, this mapping
! is risky unless exact matchings can be guaranteed in
! all DtLcx clients for the particular operation in question.
! The .~. mapping is to be preferred, but the .=. translation
! is useful in limited situations, where similar strings may
! occur.
! 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! uncomment this resource to debug/test translation
!*debugDtXlate:  True

!!!!!!!!!!!!!!!! SunOS Version Identificaton !!!!!!!!!!!!!!!!!
! These translations are used by the _DtXlateGetXlateEnv()
! call to determine the version number to use.
!
! To understand the translation, realize that the
! operation-specific regexp(5) pattern on the right
! hand side is matched against the strings returned
! by uname(2).  The best match determines the "normalized"
! version number of the platform, which should range from 
! 001 and up.  By convention, major release numbers
! map to centuries and minor release numbers to within
! the century.
!
! To determine the string that the regular expression on the
! right hand side is matching against, use uname(1) and run
! 'uname -r' and 'uname -v' and note the strings.  During execution,
! the strings returned by this command are retrieved and
! concatenated "rv"--in that order, no extra spaces.
! This is the string that the pattern must match.
!
! Sometimes this string may not be intuitive.  For example,
! note that AIX 3.2 returns 2 for 'uname -r' and 3 for 'uname -v'.
! So the pattern string must be 23, not 32.  Do not go by
! the order of 'uname -rv' or 'uname -vr', as that is not used.
!!!
SunOS.?.version.<.530:   "5\\.3.*"
SunOS.?.version.<.500:   "5\\..*"


!!!!!!!!!!!!!!!! SunOS-specific setlocale translations !!!!!!!!!!!!!!!!!!!
! These translations are for the string returned by the
! getlocale() or setlocale(LC_xxx,NULL) operations, but not
! setlocale(LC_ALL,NULL) operation.
!
! It provides translations from Sun operation-specific
! to CDE standard strings and back again.
!
! Some language,territory combinations have the following comments:
!  (1) These ISO territory names may be subject to change
!      However, their CDE names will continue to be supported
!  (2) No ISO "territory" name exists for the Arabic-speaking regions of the
!      world as a whole.  Vendors have sometimes supplied their own.
!      Those names, when conformant to the ISO model, will be adopted for CDE.
!
!Platform Operation Lang_Terr           Op-Value		Language,Territory           Who has
!---     ---------   ----- 		--------		------------------           -------
!   Version      Kind      Codeset
!   ----           -       ---------

! setlocales Compliance
SunOS.520+.setlocale.=.C.ISO-8859-1:     C               ! setlocales compliance           ,IBM, HP, Sun       , USL
SunOS.520+.setlocale.~.POSIX.ISO-8859-1: POSIX           ! setlocales compliance           ,IBM, HP, Sun       , USL

! W European/Americas, Latin 1 codeset
SunOS.520+.setlocale.>.da_DK.ISO-8859-1:	de         	! Danish, Denmark            XoJIG,IBM, HP,           , USL ("da")

SunOS.520+.setlocale.>.de_AT.ISO-8859-1:	de         	! German,Austria             XoJIG,   ,   ,           , USL        
SunOS.520+.setlocale.>.de_CH.ISO-8859-1:	de         	! German,Switzerland         XoJIG,IBM,   ,           , USL        
SunOS.520+.setlocale.~.de_DE.ISO-8859-1:	de         	! German, Germany            XoJIG,IBM, HP, Sun ("de"), USL ("de")
SunOS.520-539.setlocale.>.en_AU.ISO-8859-1:	en         	! English,Australia               ,   ,   ,           , USL
SunOS.540+.setlocale.>.en_AU.ISO-8859-1:	en_US         	! English,Australia               ,   ,   ,           , USL
SunOS.520-539.setlocale.>.en_CA.ISO-8859-1:	en         	! English,Canada             XoJIG,   ,   ,           , USL        
SunOS.540+.setlocale.>.en_CA.ISO-8859-1:	en_US         	! English,Canada             XoJIG,   ,   ,           , USL        
SunOS.520-539.setlocale.>.en_DK.ISO-8859-1:	en         	! English, Denmark           XoJIG,   ,   ,           , USL        
SunOS.540+.setlocale.>.en_DK.ISO-8859-1:	en_US         	! English, Denmark           XoJIG,   ,   ,           , USL        
SunOS.520-539.setlocale.>.en_GB.ISO-8859-1:	en         	! English, U.K.              XoJIG,IBM, HP,           , USL ("en")
SunOS.540+.setlocale.>.en_GB.ISO-8859-1:	en_US         	! English, U.K.              XoJIG,IBM, HP,           , USL ("en")
SunOS.520-539.setlocale.>.en_JP.ISO-8859-1:	en         	! English, Japan             XoJIG,IBM,   ,           , 
SunOS.540+.setlocale.>.en_JP.ISO-8859-1:	en_US         	! English, Japan             XoJIG,IBM,   ,           , 
SunOS.520-539.setlocale.>.en_IE.ISO-8859-1:	en         	! English, Ireland           XoJIG,   ,   ,           , USL        
SunOS.540+.setlocale.>.en_IE.ISO-8859-1:	en_US         	! English, Ireland           XoJIG,   ,   ,           , USL        
SunOS.520-539.setlocale.>.en_MY.ISO-8859-1:	en         	! English,Malaysia                ,   ,   ,           , USL        
SunOS.540+.setlocale.>.en_MY.ISO-8859-1:	en_US         	! English,Malaysia                ,   ,   ,           , USL        
SunOS.520-539.setlocale.>.en_NZ.ISO-8859-1:	en         	! English,New Zealand             ,   ,   ,           , USL
SunOS.540+.setlocale.>.en_NZ.ISO-8859-1:	en_US         	! English,New Zealand             ,   ,   ,           , USL
SunOS.520-539.setlocale.>.en_KR.ISO-8859-1:	en         	! English,Korea                   ,   ,   ,           , USL
SunOS.540+.setlocale.>.en_KR.ISO-8859-1:	en_US         	! English,Korea                   ,   ,   ,           , USL
SunOS.520-539.setlocale.>.en_TW.ISO-8859-1:	en         	! English,Taiwan                  ,   ,   ,           , USL
SunOS.540+.setlocale.>.en_TW.ISO-8859-1:	en_US         	! English,Taiwan                  ,   ,   ,           , USL
SunOS.520-539.setlocale.~.en_US.ISO-8859-1:	en         	! English, USA               XoJIG,IBM, HP,           , USL
SunOS.540+.setlocale.~.en_US.ISO-8859-1:	en_US         	! English, USA               XoJIG,IBM, HP,           , USL

SunOS.520-529.setlocale.>.es_AR.ISO-8859-1:	es         	! Spanish, Argentina              ,   ,   , Sun
SunOS.530+.setlocale.~.es_AR.ISO-8859-1:	es_AR         	! Spanish, Argentina              ,   ,   , Sun
SunOS.520-529.setlocale.>.es_BO.ISO-8859-1:	es         	! Spanish, Bolivia                ,   ,   , Sun
SunOS.530+.setlocale.~.es_BO.ISO-8859-1:	es_BO         	! Spanish, Bolivia                ,   ,   , Sun
SunOS.520-529.setlocale.>.es_CL.ISO-8859-1:	es         	! Spanish, Chile                  ,   ,   , Sun       , USL
SunOS.530+.setlocale.~.es_CL.ISO-8859-1:	es_CL         	! Spanish, Chile                  ,   ,   , Sun       , USL
SunOS.520-529.setlocale.>.es_CO.ISO-8859-1:	es         	! Spanish, Columbia               ,   ,   , Sun
SunOS.530+.setlocale.~.es_CO.ISO-8859-1:	es_CO         	! Spanish, Columbia               ,   ,   , Sun
SunOS.520-529.setlocale.>.es_CR.ISO-8859-1:	es         	! Spanish, Costa Rica             ,   ,   , Sun
SunOS.530+.setlocale.~.es_CR.ISO-8859-1:	es_CR         	! Spanish, Costa Rica             ,   ,   , Sun
SunOS.520-529.setlocale.>.es_EC.ISO-8859-1:	es         	! Spanish, Ecuador                ,   ,   , Sun
SunOS.530+.setlocale.~.es_EC.ISO-8859-1:	es_EC         	! Spanish, Ecuador                ,   ,   , Sun
SunOS.520+.setlocale.~.es_ES.ISO-8859-1:	es         	! Spanish, Spain             XoJIG,IBM, HP, Sun       , USL

SunOS.520-529.setlocale.>.es_GT.ISO-8859-1:	es         	! Spanish, Guatemala              ,   ,   , Sun
SunOS.530+.setlocale.~.es_GT.ISO-8859-1:	es_GT         	! Spanish, Guatemala              ,   ,   , Sun

SunOS.520-529.setlocale.>.es_MX.ISO-8859-1:	es         	! Spanish, Mexico                 ,   ,   , Sun       , USL
SunOS.530+.setlocale.~.es_MX.ISO-8859-1:	es_MX         	! Spanish, Mexico                 ,   ,   , Sun       , USL
SunOS.520-529.setlocale.>.es_PE.ISO-8859-1:	es         	! Spanish, Peru                   ,   ,   , Sun
SunOS.530+.setlocale.~.es_PE.ISO-8859-1:	es_PE         	! Spanish, Peru                   ,   ,   , Sun

SunOS.520-529.setlocale.>.es_UY.ISO-8859-1:	es         	! Spanish, Uruguay                ,   ,   , Sun
SunOS.530+.setlocale.~.es_UY.ISO-8859-1:	es_UY         	! Spanish, Uruguay                ,   ,   , Sun
SunOS.520-529.setlocale.>.es_VE.ISO-8859-1:	es         	! Spanish, Venezuela              ,   ,   , Sun       , USL
SunOS.530+.setlocale.~.es_VE.ISO-8859-1:	es_VE         	! Spanish, Venezuela              ,   ,   , Sun       , USL
! SunOS.520+.setlocale.>.et_EE.ISO-8859-1:			! Estonian, Estonia          XoJIG, 
! SunOS.520+.setlocale.>.fi_FI.ISO-8859-1:			! Finnish, Finland           XoJIG,IBM, HP,           , USL ("fi")
! SunOS.520+.setlocale.>.fo_FO.ISO-8859-1:			! Faroese, Faeroe Island     XoJIG,
SunOS.520+.setlocale.>.fr_BE.ISO-8859-1:	fr         	! French,Belgium             XoJIG,   ,   ,           , USL        
SunOS.520+.setlocale.>.fr_CA.ISO-8859-1:	fr         	! French, Canada             XoJIG,IBM, HP,           , USL
SunOS.520+.setlocale.>.fr_CH.ISO-8859-1:	fr         	! French, Switzerland        XoJIG,IBM,   ,           , USL
SunOS.520+.setlocale.~.fr_FR.ISO-8859-1:	fr         	! French, France             XoJIG,IBM, HP, Sun ("fr"), USL ("fr")
!SunOS.520+.setlocale.>.is_IS.ISO-8859-1:			! Icelandic, Iceland         XoJIG,IBM, HP,           , USL ("is")
SunOS.520+.setlocale.>.it_CH.ISO-8859-1:	it         	! Italian,Switzerland             ,   ,   ,           , USL        
SunOS.520+.setlocale.~.it_IT.ISO-8859-1:	it         	! Italian, Italy             XoJIG,IBM, HP, Sun ("it"), USL ("it")
!SunOS.520+.setlocale.>.kl_GL.ISO-8859-1:			! Greenlandic, Greenland     XoJIG,
!SunOS.520+.setlocale.>.lt_LT.ISO-8859-1:			! Lithuanian, Lithuania      XoJIG,
!SunOS.520+.setlocale.>.lv_LV.ISO-8859-1:			! Latvian, Latvia            XoJIG,
SunOS.520+.setlocale.>.nl_BE.ISO-8859-1:	ge         	! Dutch, Belgium             XoJIG,IBM,   ,           , USL
!SunOS.520+.setlocale.>.nl_BE.ISO-8859-1:	nl_BE         	! Dutch, Belgium             XoJIG,IBM,   ,           , USL
SunOS.520+.setlocale.>.nl_NL.ISO-8859-1:	ge         	! Dutch, The Netherlands     XoJIG,IBM, HP,           , USL ("nl")
!SunOS.520+.setlocale.>.nl_NL.ISO-8859-1:	nl         	! Dutch, The Netherlands     XoJIG,IBM, HP,           , USL ("nl")
SunOS.520+.setlocale.>.no_NO.ISO-8859-1:	ge         	! Norwegian, Norway          XoJIG,IBM, HP,           , USL ("no")
!SunOS.520+.setlocale.>.no_NO.ISO-8859-1:	no         	! Norwegian, Norway          XoJIG,IBM, HP,           , USL ("no")

SunOS.520+.setlocale.>.pt_BR.ISO-8859-1:	es         	! Portuguese,Brazil               ,   ,   ,           , USL
!SunOS.520+.setlocale.>.pt_BR.ISO-8859-1:	pt         	! Portuguese,Brazil               ,   ,   ,           , USL

SunOS.520+.setlocale.>.pt_PT.ISO-8859-1:	pt         	! Portuguese, Portugal       XoJIG,IBM, HP,           , USL
SunOS.520+.setlocale.>.sv_FI.ISO-8859-1:	sv         	! Swedish, Finland           XoJIG,
SunOS.520+.setlocale.~.sv_SE.ISO-8859-1:	sv         	! Swedish, Sweden            XoJIG,IBM, HP, Sun ("sv"), USL ("sv") 


! E European 
! SunOS.520+.setlocale.>.cs_CS.ISO-8859-2: 	cs        		! Czech(1)                        ,IBM, HP
! SunOS.520+.setlocale.>.hr_HR.ISO-8859-2:				! Croatian, Croatia               ,IBM
! SunOS.520+.setlocale.>.hu_HU.ISO-8859-2:	hu        			! Hungarian, Hungry          XoJIG,IBM, HP
! SunOS.520+.setlocale.>.pl_PL.ISO-8859-2:	pl        			! Polish, Poland             XoJIG,IBM, HP 
! SunOS.520+.setlocale.>.ro_RO.ISO-8859-2:				! Rumanian, Romania          XoJIG,IBM, HP
! SunOS.520+.setlocale.>.sh_YU.ISO-8859-2:				! Serbocroatian, Yugoslavia(1)    ,IBM, HP 
! SunOS.520+.setlocale.>.sl_CS.ISO-8859-2:				! Slovenian                       ,   , HP
! SunOS.520+.setlocale.>.si_SI.ISO-8859-2: 			! Slovenian                       ,IBM, 
! SunOS.520+.setlocale.>.sk_SK.ISO-8859-2: 			! Slovak                          ,IBM

! Cyrillic 
! SunOS.520+.setlocale.>.bg_BG.ISO-8859-5:				! Bulgarian, Bulgaria             ,IBM, HP
! SunOS.520+.setlocale.>.mk_MK.ISO-8859-5: 			! Macedonian                      ,IBM
! SunOS.520+.setlocale.>.ru_RU.ISO-8859-5:	ru        			! Russian(1)                      ,IBM, 
! SunOS.520+.setlocale.>.ru_SU.ISO-8859-5:				! Russian(1)                      ,   , HP
! SunOS.520+.setlocale.>.sp_YU.ISO-8859-5: 			! Serbian,Yugoslavia(1)           ,IBM

! Arabic 
! SunOS.520+.setlocale.>.ar_DZ.ISO-8859-6:				! Arabic(2)                       ,   , HP
! SunOS.520+.setlocale.>.ar_SA.ISO-8859-6:				! Arabic(2)                       ,   , HP

! Hebrew 
! SunOS.520+.setlocale.>.iw_IL.ISO-8859-8:				! Hebrew, Israel                  ,IBM, HP

! Greek 
! SunOS.520+.setlocale.>.el_GR.ISO-8859-7:				! Greek, Greece                   ,IBM, HP

! Turkish 
! SunOS.520+.setlocale.>.tr_TR.ISO-8859-9:				! Turkish, Turkey                 ,IBM, HP

! East Asia 
SunOS.520+.setlocale.~.ja_JP.EUC-JP:	ja			! Japanese, Japan                 ,IBM, HP, Sun ("ja"), USL
! Commented out the above line because the following 2 are needed
! so that ja and japanese refer to the same common Japanese locale name.
! SunOS.520+.setlocale.=.ja_JP.EUC-JP:	ja			! Japanese, Japan                 ,IBM, HP, Sun ("ja"), USL
SunOS.520+.setlocale.=.ja_JP.EUC-JP:	japanese	! Japanese, Japan                 ,IBM, HP, Sun ("ja"), USL
SunOS.520+.setlocale.~.ja_JP.PCK-JP:	ja_JP.PCK		! Japanese, Japan                 ,IBM, HP, Sun ("ja"), USL
SunOS.520+.setlocale.=.ja_JP.PCK-JP:	ja_JP.SJIS		! Japanese, Japan                 ,IBM, HP, Sun ("ja"), USL
SunOS.520+.setlocale.~.ko_KR.EUC-KR:	ko			! Korean, Korea                   ,IBM, HP, Sun ("ko"), USL
SunOS.520+.setlocale.=.ko_KR.EUC-KR:	korean	    ! Korean, Korea                 ,IBM, HP, Sun ("ko"), USL
SunOS.560+.setlocale.=.ko.UTF-8:	ko.UTF-8    ! Korean, Korea                 ,IBM, HP, Sun ("ko.UTF-8"), USL
SunOS.520+.setlocale.~.zh_CN.EUC-CN:	zh			! Chinese, China                  ,IBM,   , Sun ("zh"), USL
SunOS.520+.setlocale.=.zh_CN.EUC-CN:	chinese	    ! Chinese, Taiwan                 ,IBM, HP, Sun ("ja"), USL
SunOS.520.setlocale.~.zh_TW.EUC-TW:	zh_TW			! Chinese, Taiwan                 ,IBM, HP, Sun       , USL
SunOS.520+.setlocale.=.zh_TW.EUC-TW:	tchinese	! Chinese, Taiwan                 ,IBM, HP, Sun ("ja"), USL
SunOS.530+.setlocale.~.zh_TW.EUC-TW:	zh_TW			! Chinese, Taiwan                 ,IBM, HP, Sun       , USL
SunOS.520+.setlocale.>.zh_CN.HP-15CN:	zh			! Chinese, China                  ,   , HP
SunOS.560+.setlocale.=.zh_TW.BIG5:	zh_TW.BIG5    		! Chinese, Taiwan                 ,IBM, HP, Sun ("zh_TW.BIG5"), USL
! SunOS.520+.setlocale.0.zh_TW.HP-BIG5:		 		! Chinese, Taiwan                 ,   , HP,           , 
! SunOS.520+.setlocale.>.zh_TW.HP-CCDC:				! Chinese, Taiwan                 ,   , HP,           , 
! SunOS.520+.setlocale.>.ja_JP.HP-SJIS:     				! Japanese, Japan aka
 japanese 15 ,   , HP,
! SunOS.520+.setlocale.>.ja_JP.HP-KANA8:  				! Japanese, Japan
             ,   , HP,           ,


! Thai 
! SunOS.520+.setlocale.>.th_TH.TIS-620:				! Thai, Thailand                  ,IBM, HP

! Sun mime names (for V3 compat)
! MIME names should be in upper case.
SunOS.500+.mime.~.ISO-8859-1:   ISO-8859-1      ! ISO Latin 1
SunOS.500+.mime.~.?.ISO-8859-1:   ISO-8859-1      ! ISO Latin 1
! ja locale
SunOS.500+.mime.<.ISO-2022-JP.EUC-JP:   JA_JP.ISO2022-7      ! V3 ja charset
SunOS.500+.mime.~.ISO-2022-JP.EUC-JP:    ISO-2022-JP
SunOS.500+.mime.~.?.EUC-JP:       ISO-2022-JP      !  ja charset
SunOS.500+.mime.<.ISO-2022-JP.PCK-JP:     JA_JP.ISO2022-7      ! V3 ja charset
SunOS.500+.mime.~.ISO-2022-JP.PCK-JP:     ISO-2022-JP
SunOS.500+.mime.~.?.PCK-JP:               ISO-2022-JP      !  ja charset
! Ko locale
SunOS.500+.mime.~.ISO-2022-KR.EUC-KR:  ISO-2022-KR 
SunOS.500+.mime.~.?.EUC-KR:       ISO-2022-KR      !  ko charset
SunOS.500+.mime.~.?.EUC-KR:       KO_KR.ISO2022-7  !  ko charset
SunOS.500+.mime.<.ISO-2022-KR.UTF-8-KR:     KO_KR.ISO2022-KR      ! V3 ko charset
SunOS.500+.mime.~.ISO-2022-KR.UTF-8-KR:     ISO-2022-KR
SunOS.500+.mime.~.?.UTF-8-KR:               ISO-2022-KR      !  ko charset
393a399
! zh_TW locale
SunOS.500+.mime.<.ISO-2022-TW.EUC-TW:    ISO-2022-INT-1.EUC-TW
SunOS.500+.mime.=.?.EUC-TW:       ISO-2022-INT-1      !  zh_TW charset
SunOS.500+.mime.~.?.EUC-TW:       ZH_TW.ISO2022-7      !  zh_TW charset
! zh locale
SunOS.500+.mime.<.ISO-2022-CN.EUC-CN:    ISO-2022-INT-1.EUC-CN
SunOS.500+.mime.=.?.EUC-CN:       ISO-2022-INT-1      !  zh charset
SunOS.500+.mime.~.?.EUC-CN:       ZH_CN.ISO2022-7      !  zh charset
! Added to support mail with no charset
! Need DEFAULT-ja
! The following should work but does not.
!SunOS.500+.mime.<.?.EUC-JP:       DEFAULT.EUC-JP      !  ja charset
SunOS.500+.mime.~.DEFAULT.EUC-JP:       DEFAULT.EUC-JP      !  ja charset
SunOS.500+.mime.~.DEFAULT.PCK-JP:       DEFAULT.PCK-JP      !  ja charset
SunOS.500+.mime.~.DEFAULT.ISO-8859-1:   DEFAULT.ISO-8859-1  !  8859 charset
SunOS.500+.mime.~.DEFAULT.EUC-KR:       DEFAULT.EUC-KR      !  ko charset
SunOS.500+.mime.~.DEFAULT.UTF-8-KR:     DEFAULT.UTF-8-KR    !  ko.UTF-8 charset
SunOS.500+.mime.~.DEFAULT.EUC-TW:       DEFAULT.EUC-TW      !  zh_TW charset
SunOS.500+.mime.~.DEFAULT.EUC-CN:       DEFAULT.EUC-CN      !  zh charset
! For Sending V3 compatibility
SunOS.500+.mime.~.2022-JP-V3:       ja_JP.iso2022-7  !  ja charset
SunOS.500+.mime.~.?.ja_JP.SJIS:       SJIS      !  sjis ja charset
SunOS.500+.mime.~.2022-KR-V3:       ko_KR.iso2022-7  !  ko charset
SunOS.500+.mime.~.2022-TW-V3:       zh_TW.iso2022-7  !  zh_TW charset
SunOS.500+.mime.~.2022-CN-V3:       zh_CN.iso2022-7  !  zh charset

! Only iconv names can be in lower case.
! codesets supported for iconv(1); iconv(3) & nl_langinfo not supported
SunOS.520+.iconv1,iconv3.=.C.ISO-8859-1:
SunOS.520+.iconv1,iconv3.~.?.ISO-8859-1: 	8859
SunOS.540+.iconv1,iconv3.~.?.EUC-JP:		eucJP
SunOS.540+.iconv1,iconv3.<.?.EUC-JP:		ja_JP.euc
SunOS.540+.iconv1,iconv3.~.ja_JP.EUC-JP:	eucJP
! ko locale
SunOS.540+.iconv1,iconv3.~.?.EUC-KR:		ko_KR-euc
SunOS.540+.iconv1,iconv3.<.?.EUC-KR:		ko_KR-johap
SunOS.540+.iconv1,iconv3.~.ko_KR.EUC-KR:	ko_KR-euc
SunOS.540+.iconv1,iconv3.~.ISO-2022-KR:	    ko_KR-iso2022-7
SunOS.560+.iconv1,iconv3.~.?.UTF-8-KR:		ko_KR-UTF-8
SunOS.560+.iconv1,iconv3.<.?.UTF-8-KR:		ko_KR-euc
SunOS.560+.iconv1,iconv3.~.ko_KR.UTF-8-KR:	ko_KR-UTF-8
! 
SunOS.540+.iconv1,iconv3.~.ISO-2022-JP:	        ISO-2022-JP
SunOS.540+.iconv1,iconv3.<.?.ISO-2022-JP:	JIS7
SunOS.540+.iconv1,iconv3.~.?.ISO-2022-7:	ISO-2022-JP
SunOS.540+.iconv1,iconv3.<.?.ISO-2022-7:	ja_JP.iso2022-7
SunOS.540+.iconv1,iconv3.~.?.HP-SJIS:		SJIS
SunOS.540+.iconv1,iconv3.~.?.IBM-932:		ibmj
SunOS.540+.iconv1,iconv3.~.?.HP-BIG5:		zh_TW.big5
SunOS.540+.iconv1,iconv3.~.?.ISO-2022-CN:	zh_CN.iso2022-7
SunOS.540+.iconv1,iconv3.~.?.PCK-JP:		SJIS
SunOS.540+.iconv1,iconv3.<.?.PCK-JP:		ja_JP.euc
SunOS.540+.iconv1,iconv3.~.ja_JP.PCK-JP:	SJIS
! zh_TW locale
SunOS.540+.iconv1,iconv3.~.?.EUC-TW:		zh_TW-euc
SunOS.540+.iconv1,iconv3.~.zh_TW.EUC-TW:	zh_TW-euc
SunOS.540+.iconv1,iconv3.~.ISO-2022-TW:	    zh_TW-iso2022-7
! zh locale
SunOS.540+.iconv1,iconv3.~.?.EUC-CN:		zh_CN.euc
SunOS.540+.iconv1,iconv3.~.zh_CN.EUC-CN:	zh_CN.euc
SunOS.540+.iconv1,iconv3.~.ISO-2022-CN:	    zh_CN.iso2022-7
!
SunOS.540+.iconv1,iconv3.~.?.EUC-CN:		zh_CN.euc
SunOS.540+.iconv1,iconv3.>.?.HP-15CN:		zh_CN.euc
SunOS.540+.iconv1,iconv3.~.?.UTF-8:		UTF2

! codesets not supported by SunOS iconv(1)
! SunOS.?.iconv1,iconv3.~.?.ISO-8859-2:
! SunOS.?.iconv1,iconv3.~.?.ISO-8859-5:
! SunOS.?.iconv1,iconv3.~.?.ISO-8859-6:
! SunOS.?.iconv1,iconv3.~.?.ISO-8859-7:
! SunOS.?.iconv1,iconv3.~.?.ISO-8859-8:
! SunOS.?.iconv1,iconv3.~.?.ISO-8859-9:
! SunOS.?.iconv1,iconv3.~.?.IBM-437:
! SunOS.?.iconv1,iconv3.~.?.IBM-850:
! SunOS.?.iconv1,iconv3.~.?.IBM-856:
! SunOS.?.iconv1,iconv3.~.?.IBM-1046:
! SunOS.?.iconv1,iconv3.~.?.HP-ARABIC8:
! SunOS.?.iconv1,iconv3.~.?.HP-GREEK8:
! SunOS.?.iconv1,iconv3.~.?.HP-HEBREW8
! SunOS.?.iconv1,iconv3.~.?.HP-ROMAN8:
! SunOS.?.iconv1,iconv3.~.?.HP-TURKISH8:
! SunOS.?.iconv1,iconv3.~.?.TIS-620:
! SunOS.?.iconv1,iconv3.~.?.HP-KANA8:
! SunOS.?.iconv1,iconv3.~.?.HP-CCDC:
! SunOS.?.iconv1,iconv3.~.?.UCS-2:

! multibyte codesets 
! This translation provides an alternative to a call to
! using setlocale() and MB_CUR_MAX to determine this.
SunOS.520+.multibyte.=.?.EUC-KR:	2
SunOS.560+.multibyte.=.?.UTF-8-KR:	3
SunOS.520+.multibyte.=.?.EUC-JP:	2
SunOS.520+.multibyte.=.?.PCK-JP:	2
SunOS.520+.multibyte.=.?.EUC-TW:	4
SunOS.520+.multibyte.=.?.EUC-CN:	2
SunOS.560+.multibyte.=.?.UTF-8:         3
SunOS.560+.multibyte.=.?.BIG5:          2
! SunOS.?.multibyte.~.?.HP-SJIS:	2
! SunOS.?.multibyte.~.?.IBM-932:	2
! SunOS.?.multibyte.~.?.HP-CCDC:	2
! SunOS.?.multibyte.~.?.HP-BIG5:	2
! SunOS.?.multibyte.~.?.TIS-620:	2
! SunOS.?.multibyte.~.?.HP-15CN:	2


! Translations from predefined CCDF-locales to CDE Standard Locales
SunOS.?.ccdf.=.?.HP-ROMAN8:    	hp-roman8
SunOS.?.ccdf.=.?.ISO-8859-1:	iso8859-1
SunOS.?.ccdf.=.ko_KR.EUC-KR:	hp-korean15
SunOS.?.ccdf.=.ja_JP.HP-SJIS:	hp-japanese15
SunOS.?.ccdf.=.?.DT-SYMBOL-1:	symbol        !!! standard Dt symbol font

! These CDE standard locales may have CCDF-locales, but they are defined by localizers
! SunOS.?.ccdf.=.ar_SA.HP-ARABIC8:	arabic8
! SunOS.?.ccdf.=.el_GR.HP-GREEK8:	greek8
! SunOS.?.ccdf.=.iw_IL.HP-HEBREW8:	hebrew8
! SunOS.?.ccdf.=.tr_TR.HP-TURKISH8:	turkish8
! SunOS.?.ccdf.<.ja_JP.HP-SJIS:		sjis
! SunOS.?.ccdf.=.ja_JP.HP-KANA8:	kana8
! SunOS.?.ccdf.<.ja_JP.EUC-JP:		ujis
! SunOS.?.ccdf.=.zh_CN.HP-CCDC:		roc15		


! Codesets that require multibyte parsing to avoid confusion with shell special chars
! Sun doesn't have these codesets
!SunOS.?.dtkshSpecialParse.=.ja_JP.HP-SJIS:	True
!SunOS.?.dtkshSpecialParse.=.ja_JP.IBM-932:	True
!SunOS.?.dtkshSpecialParse.=.zh_TW.HP-BIG5:	True
!SunOS.?.dtkshSpecialParse.=.zh_TW.HP-CCDC:	True
SunOS.?.dtkshSpecialParse.=.zh_TW.EUC-TW:	True


!! When content is exchanged with other platforms, the interchange codeset
!! may be different that the codeset used locally.  In CDE1, these translations
!! are used by dtmail, but other clients may use the same translations
!! in the future.  For example, to improve interoperability of 8-bit mail,
!! the mail messages of users working in codesets such as HP-ROMAN8 or IBM-850 
!! are translated to the interchangeCodeset (in this case, ISO-8859-1) before 
!! they are sent.  Similarly, the mail of Japanese users is translated to ISO-2022-JP
!! before it is sent.
SunOS.500+.interchangeCodeset.~.ISO-8859-1:	ISO-8859-1	! ISO Latin 1
!SunOS.500+.interchangeCodeset.~.?.ISO-8859-1:	ISO-8859-1	! ISO Latin 1
!SunOS.?.interchangeCodeset.>.?.HP-ROMAN8:	ISO-8859-1	! HP Roman8 
!SunOS.?.interchangeCodeset.>.?.IBM-437:	ISO-8859-1	! PC (US)
!SunOS.?.interchangeCodeset.>.?.IBM-850:	ISO-8859-1	! PC (Multi-lingual)
SunOS.?.interchangeCodeset.~.?.ISO-8859-2:	ISO-8859-2	! ISO Latin 2
SunOS.?.interchangeCodeset.~.?.ISO-8859-5:	ISO-8859-5	! ISO Latin/Cyrillic
SunOS.?.interchangeCodeset.~.?.ISO-8859-6:	ISO-8859-6	! ISO Latin/Arabic
!SunOS.?.interchangeCodeset.>.?.HP-ARABIC8:	ISO-8859-6	! HP Arabic8
!SunOS.?.interchangeCodeset.>.?.IBM-1046:	ISO-8859-6	! PC Arabic Code Set
SunOS.?.interchangeCodeset.~.?.ISO-8859-8:	ISO-8859-8	! ISO Latin/Hebrew
!SunOS.?.interchangeCodeset.>.?.HP-HEBREW8:	ISO-8859-8	! HP Hebrew8
!SunOS.?.interchangeCodeset.>.?.IBM-856:	ISO-8859-7	! PC Hebrew
SunOS.?.interchangeCodeset.~.?.ISO-8859-7:	ISO-8859-7	! ISO Latin/Greek
!SunOS.?.interchangeCodeset.>.?.HP-GREEK8:	ISO-8859-7	! HP Greek8
SunOS.?.interchangeCodeset.~.?.ISO-8859-9:	ISO-8859-9	! ISO Latin 5
!SunOS.?.interchangeCodeset.>.?.HP-TURKISH8:	ISO-8859-9	! HP Turkish8
!SunOS.500+.interchangeCodeset.~.?.EUC-JP:	ISO-2022-JP	! Japanese EUC
SunOS.500+.interchangeCodeset.~.EUC-JP:	ISO-2022-JP	! Japanese EUC
! Add the following line -- hack to see if "japanese" works
SunOS.500+.interchangeCodeset.=.?.EUC-JP:	ISO-2022-JP	! Japanese EUC
! For Sending V3 compatibility
SunOS.500+.interchangeCodeset.~.?.EUC-JP.V3:	2022-JP-V3	! Japanese EUC
SunOS.500+.interchangeCodeset.~.ISO-2022-JP:	ISO-2022-JP	! Japanese EUC
SunOS.500+.interchangeCodeset.~.PCK-JP:		ISO-2022-JP     ! Japanese PCK
SunOS.500+.interchangeCodeset.=.?.PCK-JP:	ISO-2022-JP	! Japanese PCK
SunOS.500+.interchangeCodeset.~.?.PCK-JP.V3:	2022-JP-V3      ! Japanese PCK
!SunOS.?.interchangeCodeset.>.?.HP-SJIS:	ISO-2022-JP	! HP Japanese Shift JIS
!SunOS.?.interchangeCodeset.>.?.IBM-932:	ISO-2022-JP	! PC Japanese Shift JIS
!SunOS.?.interchangeCodeset.>.?.HP-KANA8:	ISO-2022-JP	! HP Japanese Katakana8
SunOS.?.interchangeCodeset.~.EUC-KR:		ISO-2022-KR	! Korean EUC
! Add the following line -- hack to see if "korean" works
SunOS.500+.interchangeCodeset.=.?.EUC-KR:	ISO-2022-KR	! Korean EUC
! For Sending V3 compatibility
SunOS.500+.interchangeCodeset.~.?.EUC-KR.V3:	2022-KR-V3	! Korean EUC
SunOS.500+.interchangeCodeset.~.ISO-2022-KR:	ISO-2022-KR	! Korean EUC
SunOS.500+.interchangeCodeset.~.UTF-8-KR:	ISO-2022-KR     ! Korean UTF-8
SunOS.500+.interchangeCodeset.=.?.UTF-8-KR:	ISO-2022-KR	! Korean UTF-8
SunOS.500+.interchangeCodeset.~.?.UTF-8-KR.V3:	2022-KR-V3      ! Korean UTF-8
!
SunOS.500+.interchangeCodeset.~.EUC-TW:		ISO-2022-TW	! Taiwan Chinese EUC
! Add the following line -- hack to see if "tchinese" works
SunOS.500+.interchangeCodeset.=.?.EUC-TW:	ISO-2022-TW	! 
SunOS.500+.interchangeCodeset.~.EUC-CN:		ISO-2022-CN	! China Chinese EUC
! Add the following line -- hack to see if "chinese" works
SunOS.500+.interchangeCodeset.=.?.EUC-CN:	ISO-2022-CN	! 
! For Sending V3 compatibility
SunOS.500+.interchangeCodeset.~.?.EUC-TW.V3:	2022-TW-V3	! 
SunOS.500+.interchangeCodeset.~.?.EUC-CN.V3:	2022-CN-V3	! 
!
!SunOS.?.interchangeCodeset.>.?.HP-BIG5:	ISO-2022-TW	! HP Big5 Chinese
!SunOS.?.interchangeCodeset.>.?.HP-CCDC:	ISO-2022-TW	! HP CCDC Chinese 
!SunOS.?.interchangeCodeset.>.?.HP-15CN:	ISO-2022-CN 	! HP Chinese EUC
SunOS.?.interchangeCodeset.~.?.TIS-620:		TIS-620		! Thai
SunOS.?.interchangeCodeset.>.?.UCS-2:		UTF-8		! Unicode
SunOS.?.interchangeCodeset.~.?.UTF-8:		UTF-8		! multibyte Unicode
