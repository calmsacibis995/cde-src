XCOMM $XConsortium: Imakefile /main/cde1_maint/4 1995/10/08 22:18:52 pascale $
#ifndef DoNormalLib
#define DoNormalLib NormalLibDtSvc
#endif
#ifndef DoSharedLib
#define DoSharedLib SharedLibDtSvc
#endif

#include <Library.tmpl>

#if defined(REORDER_PROFILED)
    C++ = CC -pg $(BBAFLAGS)
    CC = cc -xpg $(BBAFLAGS)
    LD = cc
#endif

/* KEEP all DT macros LOCAL so that you can find local headers, etc. */
/* DTINCLUDESRC points to local directories */
LOCALDTINCLUDESRC = ../include/Dt
LOCALDTSVCSRC = ..

/* General case INCLUDES DEFINES
 * Each individual architecture may have more or less of the above.
 * Use EXTRA_DEFINES and EXTRA_INCLUDES to add defines and includes
 * to an individual architecture.
 */
DEFINES = -DXK_MISCELLANY -DMULTIBYTE \
          -DCDE_INSTALLATION_TOP=\"$(CDE_INSTALLATION_TOP)\" \
          -DCDE_CONFIGURATION_TOP=\"$(CDE_CONFIGURATION_TOP)\"
INCLUDES = -I. -I../include -I$(LOCALDTSVCSRC)/DtUtil2 

#ifdef SCOArchitecture
EXTRA_DEFINES = -DMESSAGE_CAT -DMULTIBYTE
#endif

#ifdef HPArchitecture
EXTRA_DEFINES = -DMESSAGE_CAT -DMULTIBYTE
EXTRA_CCOPTIONS = $(ESLIT_OPTION) /* set in hp.cf */
#endif

#if defined(RsArchitecture) 
#endif

#ifdef SunArchitecture
EXTRA_DEFINES=-DNO_REGCOMP

/* Following files need a "long long" for large file system support. Use -Xa */
DndFile.o Dts.o DtsMM.o := CCOPTIONS = -Xa

Dts64.o := STD_DEFINES += -D_FILE_OFFSET_BITS=32
#endif

#ifdef USLArchitecture
EXTRA_DEFINES=-DNO_REGCOMP
#endif

#ifdef UXPArchitecture
EXTRA_DEFINES=-DNO_REGCOMP
#endif

#ifdef AlphaArchitecture
EXTRA_DEFINES = -DMESSAGE_CAT -DMULTIBYTE
#endif

INSTALLFLAGS = $(INSTINCFLAGS)

LINTLIBS = $(LINTXLIB) $(LINTXTOOL) $(LINTXM) 

HEADERS = \
	Action.h \
	ActionDb.h \
	ActionDbP.h \
	ActionP.h \
	ActionFind.h \
	ActionUtilP.h \
	CmdInv.h \
	CmdInvP.h \
	DbReader.h \
	DbUtil.h \
	Dnd.h \
	DndP.h \
	DndIconI.h \
	Dt.h \
	Dts.h \
	DtsDb.h \
	DtsMM.h \
	DtHash.h \
	DtShmDb.h \
	Qualify.h \
	Saver.h \
	SaverP.h \
	Session.h \
	SessionM.h \
	SessionP.h \
	Wsm.h \
	WsmM.h \
	WsmP.h


SRCS1 = \
	Action.c \
	ActionTt.c \
	ActionDb.c \
	ActionFind.c \
	ActionUtil.c \
	DbReader.c \
	DbUtil.c \
	CmdSpc.c \
	CmdMain.c \
	CmdProcess.c \
	CmdUtilityP.c \
	Dnd.c \
	DndDrag.c \
	DndDrop.c \
	DndIcon.c \
	DndBuff.c \
	DndFile.c \
	DndText.c \
	Dt.c \
	Dts.c \
	Dts64.c \
	DtsDb.c \
	DtsSort.c \
	DbLoad.c \
	DtsInit.c \
	DtHash.c \
	intarray.c \
	inttab.c \
	strtab.c \
	DtsMM.c \
	MMDb.c \
	GetVWmHint.c \
	GetMwmW.c \
	Qualify.c \
	Saver.c \
	SetVWmHint.c \
	SmComm.c \
	SmUtil.c \
	WmAddDelWs.c \
	WmBackWin.c \
	WmChBackD.c \
	WmGWsInfo.c \
	WmGWsList.c \
	WmMarquee.c \
	WmRestart.c \
	WmRmWsFcn.c \
	WmSetTitle.c \
	WmWsCallB.c \
	WmSetWs.c \
	WmWsHints.c \
	WmWsOccupy.c

#if defined(RsArchitecture) || (defined(HPArchitecture) && (OSMajorVersion > 9))|| defined(USLArchitecture) || defined(UXPArchitecture) || defined(AlphaArchitecture)
SRCS2 =
#else
SRCS2 = Fnmatch.c
#endif


/* WARNING!!!!
 * Any .o's added to this list need to be added to DTUTIL1_OBJS1
 * and SHARED_DTUTIL1_OBJS1 in the DtSvc Imakefile.
 */
OBJS1 = \
	Action.o \
	ActionTt.o \
	ActionDb.o \
	ActionFind.o \
	ActionUtil.o \
	DbReader.o \
	DbUtil.o \
	CmdSpc.o \
	CmdMain.o \
	CmdProcess.o \
	CmdUtilityP.o \
	Dnd.o \
	DndDrag.o \
	DndDrop.o \
	DndIcon.o \
	DndBuff.o \
	DndFile.o \
	DndText.o \
	Dt.o \
	Dts.o \
	Dts64.o \
	DtsDb.o \
	DtsSort.o \
	DbLoad.o \
	DtsInit.o \
	DtHash.o \
	intarray.o \
	inttab.o \
	strtab.o \
	DtsMM.o \
	MMDb.o \
	GetVWmHint.o \
	GetMwmW.o \
	Qualify.o \
	Saver.o \
	SetVWmHint.o \
	SmComm.o \
	SmUtil.o \
	WmAddDelWs.o \
	WmBackWin.o \
	WmChBackD.o \
	WmGWsInfo.o \
	WmGWsList.o \
	WmMarquee.o \
	WmRestart.o \
	WmRmWsFcn.o\
	WmSetTitle.o \
	WmWsCallB.o \
	WmSetWs.o \
	WmWsHints.o \
	WmWsOccupy.o

#if defined(RsArchitecture) || (defined(HPArchitecture) && (OSMajorVersion > 9))|| defined(USLArchitecture) || defined(UXPArchitecture) || defined(AlphaArchitecture)
OBJS2 =
#else
OBJS2 = Fnmatch.o
#endif


OBJS = $(OBJS1) $(OBJS2)
SRCS = $(SRCS1) $(SRCS2)

LibraryObjectRule()
all:: $(OBJS)

LintLibraryTarget(DtSvc,$(SRCS))

/* includes exported to build tree */
BuildIncludes($(HEADERS),$(DTINCLUDEDEST),../..)
/* local includes for use by DtSvc */
BuildLocalIncludes($(HEADERS),$(LOCALDTINCLUDESRC),../../DtUtil1)

/* For install of developer's build environment */
LOCAL_BINSTALL_DEST = include/Dt
BuildMultipleInstall($(HEADERS),$(LOCAL_BINSTALL_DEST))

DependTarget()

includes::
