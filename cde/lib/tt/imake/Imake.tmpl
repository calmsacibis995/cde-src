/*
 * Imake.tmpl 1.1	2/23/93
 *
 * Imake.tmpl - a makefile template that imake uses to build makefiles
 */

/*
 * cpp (run by imake) defines to '1' various strings that we like to use
 */
#undef sparc

/*
 * To put a comment in the generated makefile, hide it from cpp so
 * cpp will not treat it as preprocessor directives.
 */
/**/#
/**/# This makefile was generated by imake.  Do not change this
/**/# makefile; instead, change the imakefile and then regenerate this
/**/# makefile by using any one of the following commands:
/**/#
/**/# % make -f <makefile> <makefile>
/**/# % sh <imakefile>

/*
 * Read in a bunch of cpp rules on how to emit various rules into
 * the generated makefile.
 */
#include <Imake.rules>

/*
 * The makefile will have these make macros: IMAKEFILE, MAKEFILE, and ImakeDir.
 */
IMAKE_IMAKEFILE		= INCLUDE_IMAKEFILE
IMAKEFILE		= $(IMAKE_IMAKEFILE:<%>=%)
ImakeDir		= IMAKEDIR

#if defined(gnu)
MAKEFILE		= $(IMAKEFILE:I%=GNU%)
#else
MAKEFILE		= $(IMAKEFILE:I%=%)
#endif

MAKE_FLAGS = -$(MAKEFLAGS) -f $(MAKEFILE)

/*
 * Have the generated makefile include our master makefile macros.
 * Imake.macros cannot be include by make(1), because its contents
 * depend on whose brand of make(1) you are using.
 */
#include <Imake.macros>
#ifdef SELF_CONTAINED
#include <Make.macros>
#else
include IMAKEDIR/Make.macros
#endif SELF_CONTAINED

/*
 * Now include the imakefile.  Usually, this is the imakefile from
 * the directory for which we are generating a makefile.
 */
#include INCLUDE_IMAKEFILE

/*
 * Standard ToolTalk targets
 */
install: install_O
install_O::

/*
 * Have the generated makefile include our master makefile rules.
 * They go after the your INCLUDE_IMAKEFILE, so that you get to
 * decide what the first target in the generated makefile will be.
 */
#ifdef SELF_CONTAINED
#include <Make.rules>
#else
include IMAKEDIR/Make.rules
#endif SELF_CONTAINED

/*
 * At the end of the generated makefile, put in a rule to regenerate it.
 */
#if defined(gnu)
#define DEFINE_GNU 	-Dgnu
#else
#define DEFINE_GNU
#endif

#if defined(SELF_CONTAINED)
#define DEFINE_SELF_CONTAINED -DSELF_CONTAINED
MAKEFILE_DEPENDENCIES	= $(ImakeDir)/Imake.tmpl $(ImakeDir)/Imake.rules \
			  $(ImakeDir)/Make.macros $(ImakeDir)/Make.rules
#else
#define DEFINE_SELF_CONTAINED
MAKEFILE_DEPENDENCIES	= $(ImakeDir)/Imake.tmpl $(ImakeDir)/Imake.rules
#endif

$(MAKEFILE): $(IMAKEFILE) $(MAKEFILE_DEPENDENCIES)
	unset OPENWINHOME; imake -I$(ImakeDir) -f $(IMAKEFILE) -s $(MAKEFILE) \
		-DIMAKEDIR=$(ImakeDir) DEFINE_SELF_CONTAINED DEFINE_GNU

$(MAKEFILE)s: $(MAKEFILE)
	@for dir in $(SUB-DIRS) .; do \
		if [ $$dir != . ]; then \
			(cd $$dir; \
			if [ -f $(IMAKEFILE) -a ! -f $(MAKEFILE) ]; then \
				sh $(IMAKEFILE) $(MAKEFILE); \
			fi; \
			$(MAKE) $(MAKE_FLAGS) $@) \
		fi; \
	done
