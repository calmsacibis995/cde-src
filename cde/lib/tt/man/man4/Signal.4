.TH Signal 4 "1 March 1996" "ToolTalk 1.3" "Desktop Services Message Sets"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.BH "1 March 1996" 
.IX "Signal.4" "" "Signal.4" "" 
.SH NAME
Signal \- send a (POSIX-style) signal to a tool
.SH SYNOPSIS
.ft 3
.nf
.ta \w@Signal(@u
Signal(in string \f2theSignal\fP);
.fn
.PP
.fi
.SH DESCRIPTION
The
.I Signal
request
asks the handling procid to send itself the
indicated POSIX signal.
.PP
The
.I theSignal
argument
is the signal to send.
.SH "APPLICATION USAGE"
The
.BR ttdt_session_join (3),
function can be used to register for,
and transparently process, the
.I Signal
request.
.SH EXAMPLES
The
.I Signal
request can be sent as in the following example:
.PP
.sp -1
.RS 5
.ta 4m +4m +4m +4m +4m +4m +4m
.nf
.ft 3
Tt_message msg = tttk_message_create(0, TT_REQUEST, TT_SESSION,
			the_recipient_procid, TTDT_SIGNAL,
			my_callback);
tt_message_arg_add(msg, TT_IN, Tttk_string, "SIGHUP");
tt_message_send(msg);
.PP
.ft 1
.fi
.RE
.SH WARNINGS
.I Signal
can also be sent as a multicast notice, as an
.I edict
to all tools in the scope of the message.
The consequences of doing so can be severe and unexpected.
.SH "SEE ALSO"
.na
.BR sigaction (2)
.BR tt_message_arg_add (3),
.BR tt_message_send (3),
.BR ttdt_session_join (3),
