.TH Get_XInfo 4 "1 March 1996" "ToolTalk 1.3" "Desktop Services Message Sets"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.BH "1 March 1996" 
.IX "Get_XInfo.4" "" "Get_XInfo.4" "" 
.SH NAME
Get_XInfo \- get a tool's X11 attributes
.SH SYNOPSIS
.ft 3
.nf
.ta \w@Get_XInfo(@u
Get_XInfo(out string \f2display\fP,
	out string \f2visual\fP,
	out integer \f2depth\fP
	[in messageID \f2commission\fP]);
.PP
.fi
.SH DESCRIPTION
The
.I Get_XInfo
request
reports the X11 attributes of the optionally specified
window, or of the window primarily associated with the recipient
procid (if no window is specified).
.PP
The
.I display
argument
is an X11 display.
.PP
The
.I visual
argument
is an X11 visual class (which determines how a pixel will be
displayed as a color).
Valid values are:
.PP
.sp -1
.RS 5
.ta 4m +4m +4m +4m +4m +4m +4m
.nf
.ft 3
StaticGray
GrayScale
StaticColor
PseudoColor
TrueColor
DirectColor
.PP
.ft 1
.fi
.RE
.PP
The
.I depth
argument
is the number of bits in a pixel.
.PP
The
.I commission
argument
is the ID of the ongoing request with respect to which X11 attributes
are being set or reported.
.SH "APPLICATION USAGE"
The
.BR ttdt_session_join (3),
and
.BR ttdt_message_accept (3),
functions can be used by Xt applications to register for,
and transparently process, the
.I Get_XInfo
request.
Also,
.I Get_XInfo
can be sent by
.BR ttdt_sender_imprint_on (3).
.PP
Since the handler may be running on a
different host, it is almost always better to return
a
.I display
value of
\f2hostname\f1:\f2n\f1[.\f2n\f1]
instead of :\f2n\f1[.\f2n\f1].)
.PP
The
.I commission
argument
is useful to the extent
that the handler employs different attributes for the
different operations it may be carrying out.
.SH EXAMPLES
The
.I Get_XInfo
request can be sent as in the following example:
.PP
.sp -1
.RS 5
.ta 4m +4m +4m +4m +4m +4m +4m
.nf
.ft 3
Tt_message msg = tttk_message_create(0, TT_REQUEST, TT_SESSION,
			the_recipient_procid, TTDT_GET_XINFO,
			my_callback);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_iarg_add(msg, TT_OUT, Tttk_integer, 0);
tt_message_send(msg);
.PP
.ft 1
.fi
.RE
.SH "SEE ALSO"
.na
.BR tt_message_iarg_add (3),
.BR tt_message_send (3),
.BR ttdt_message_accept (3),
.BR ttdt_sender_imprint_on (3),
.BR ttdt_session_join (3).
