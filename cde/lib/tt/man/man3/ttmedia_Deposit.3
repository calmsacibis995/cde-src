.de Lc
.\" version of .LI that emboldens its argument
.TP \\n()Jn
\s-1\f3\\$1\f1\s+1
..
.TH ttmedia_Deposit 3 "1 March 1996" "ToolTalk 1.3" "ToolTalk Functions"
.BH "1 March 1996"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.IX "ttmedia_Deposit.3" "" "ttmedia_Deposit.3" "" 
.SH NAME
ttmedia_Deposit \- send a Deposit request to checkpoint a document
.SH SYNOPSIS
.ft 3
.nf
#include <Tt/tttk.h>
.sp 0.5v
.ta \w'Tt_status ttmedia_Deposit('u
Tt_status ttmedia_Deposit(Tt_message \f2load_contract\fP,
	const char *\f2buffer_id\fP,
	const char *\f2media_type\fP,
	const unsigned char *\f2new_contents\fP,
	int \f2new_len\fP,
	const char *\f2pathname\fP,
	XtAppContext \f2app2run\fP,
	int \f2ms_timeout\fP);
.PP
.fi
.SH DESCRIPTION
The
.BR ttmedia_Deposit (\|)
function
is used to perform a checkpoint save on a document that was the
subject of a Media Exchange
.I load_contract
request such as
.IR Edit ,
.IR Compose ,
or
.IR Open .
To carry out a checkpoint save, the editor must send the new document
contents back to the sender of
.IR load_contract .
.PP
The
.BR ttmedia_Deposit (\|)
function
creates and sends a
.IR Deposit
request and returns the
success or failure of that request.
The
.I load_contract
argument is the request that caused this editor to load the document.
The
.I buffer_id
argument is the identifier
of the buffer this editor created if the document was
loaded via an
.IR Open
request.
If
.I buffer_id
is
.BR \s-1NULL\s+1 ,
the
the ToolTalk service
gives the
.I Deposit
request a
.B Tt_address
of
.BR \s-1TT_HANDLER\s+1
and sends it directly to the
.BR tt_message_sender (\|)
of
.IR load_contract ;
otherwise, the
the ToolTalk service
will address it as a
.BR \s-1TT_PROCEDURE\s+1
and insert
.I buffer_id
into the request to match the pattern registered by the
sender of the
.IR load_contract .
.PP
The
.BR ttmedia_Deposit (\|)
function uses the
.I media_type
argument as the
vtype
of the contents argument of the sent request, and
.I new_contents
and
.I new_len
as its value.
The latter two must be zero if
.I pathname
is used to name a temporary file into which the editor will place the
checkpointed document.
The editor is free to remove the temporary
file after the reply to the
.IR Deposit
request is received; that is, after
.BR ttmedia_Deposit (\|)
has returned.
.PP
After the request is sent,
.BR ttmedia_Deposit (\|)
passes
.I app2run
and
.I ms_timeout
to
.BR tttk_block_while (3)
to wait for the reply.
.SH "RETURN VALUE"
Upon successful completion, the
.BR ttmedia_Deposit (\|)
function returns the status of the operation as one of the following
.B Tt_status
values:
.PP
.RS 3
.nr )J 8
.Lc TT_OK
The operation completed successfully.
.Lc TT_DESKTOP_ETIMEDOUT
.br
No reply was received within
.I ms_timeout
milliseconds.
.Lc TT_ERR_NOMEM
.br
There is insufficient memory available to perform the function.
.Lc TT_ERR_NOMP
.br
The
.BR ttsession (1)
process is not running and the ToolTalk service cannot restart it.
.Lc TT_ERR_OVERFLOW
.br
The ToolTalk service has more active messages than it can handle.
(The maximum number of active messages is
.ne 2
implementation specific, but is at least 2000.)
.Lc TT_ERR_POINTER
.br
The
.I pathname
argument was
.BR \s-1NULL\s+1
or was a ToolTalk error pointer.
.Lc TT_ERR_PROCID
.br
The specified process identifier is out of date or invalid.
.PP
.RE
.nr )J 0
.SH "SEE ALSO"
.na
.BR tttk (5),
.BR ttmedia_load (3),
.BR ttmedia_load_reply (3),
.BR ttmedia_ptype_declare (3),
.BR ttdt_Save (3),
.BR tttk_block_while (3).
