.de Lc
.\" version of .LI that emboldens its argument
.TP \\n()Jn
\s-1\f3\\$1\f1\s+1
..
.TH ttmedia_load 3 "1 March 1996" "ToolTalk 1.3" "ToolTalk Functions"
.BH "1 March 1996"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.IX "ttmedia_load.3" "" "ttmedia_load.3" "" 
.SH NAME
ttmedia_load \- send a Display, Edit or Compose request
.SH SYNOPSIS
.ft 3
.nf
#include <Tt/tttk.h>
.sp 0.5v
.ta \w'Tt_message ttmedia_load('u
Tt_message ttmedia_load(Tt_message \f2context\fP,
	Ttmedia_load_msg_cb \f2cb\fP,
	void *\f2clientdata\fP,
	Tttk_op \f2op\fP,
	const char *\f2media_type\fP,
	const unsigned char *\f2contents\fP,
	int \f2len\fP,
	const char *\f2file\fP,
	const char *\f2docname\fP,
	int \f2send\fP);
.PP
.fi
.SH DESCRIPTION
The
.BR ttmedia_load (\|)
function
is used to create and optionally send a Media Exchange request
to display, edit or compose a document.
.PP
The
.I cb
argument will be passed
.I clientdata
when the reply is received, or when intermediate versions
of the document are checkpointed through
.IR Deposit
requests.
The
.I op
argument must be one of
.BR \s-1TTME_DISPLAY\s+1 ,
.BR \s-1TTME_EDIT\s+1
or
.BR \s-1TTME_COMPOSE\s+1 .
The
.I media_type
argument names the data format of the document, and is usually the
primary determinant of which application will be chosen to
handle the request.
The
.I contents
and
.I len
arguments specify the document; if they are
.BR \s-1NULL\s+1
and zero, respectively, and
.I file
is not
.BR \s-1NULL\s+1 ,
then the document is assumed to be contained in
.IR file .
If
.I docname
is not
.BR \s-1NULL\s+1 ,
then
.BR ttmedia_load (\|)
uses it as the title of the document.
If
.I send
is True, the message is sent before being returned.
.PP
The
.I context
argument describes the environment to use.
If
.I context
is not zero, messages created by
.BR ttmedia_load (\|)
inherit from
.I context
all contexts whose slotname begins with the characters
.BR \s-1ENV_\s+1 .
.PP
The
.B Ttmedia_load_msg_cb
argument is a callback defined as:
.PP
.sp -1
.RS 5
.ta 4m +4m +4m +4m +4m +4m +4m
.nf
.ft 3
.ta \w'Tt_message (*Ttmedia_load_msg_cb)('u
Tt_message (*Ttmedia_load_msg_cb)(Tt_message \f2msg\fP,
	void *\f2clientdata\fP),
	Tttk_op \f2op\fP,
	unsigned char *\f2contents\fP,
	int \f2len\fP,
	char *\f2file\fP);
.PP
.ft 1
.fi
.RE
.PP
The
.I msg
argument is the
reply to the load request, or a
.IR Deposit
request with a
.IR messageID
argument naming the identifier (see
.BR tt_message_id (3))
of the load request.
In the latter case, the client
program becomes responsible for either failing or replying
to the request.
In either case,
.I msg
should be destroyed after being processed.
.PP
The
.I op
argument is the
op of
.IR msg .
It must be either
.BR \s-1TTME_DEPOSIT\s+1
or the
.I op
passed to
.BR ttmedia_load (3).
.PP
The
.IR contents ,
.I len
and
.I file
arguments represent the
contents of the arriving document.
If
.I len
is zero, then the document is contained in
.IR file .
If
.I contents
or
.I file
are non-\c
.BR \s-1NULL\s+1 ,
they can be freed using
.BR tt_free (\|).
.PP
The
.I clientdata
argument is the
.I clientdata
passed to
.BR ttmedia_load (\|).
.SH "RETURN VALUE"
Upon successful completion, the
.BR ttmedia_load (\|)
function returns the request it was asked to build;
otherwise, it returns an error pointer.
The application can use
.BR tt_ptr_error (3)
to extract one of the following
.B Tt_status
values from the returned handle:
.PP
.RS 3
.nr )J 8
.Lc TT_ERR_NOMEM
.br
There is insufficient memory available to perform the function.
.Lc TT_ERR_NOMP
.br
The
.BR ttsession (1)
process is not running and the ToolTalk service cannot restart it.
.Lc TT_ERR_OVERFLOW
.br
The ToolTalk service has more active messages than it can handle.
(The maximum number of active messages is
.ne 2
implementation specific, but is at least 2000.)
.Lc TT_ERR_PROCID
.br
The specified process identifier is out of date or invalid.
.PP
.RE
.nr )J 0
.SH "APPLICATION USAGE"
After the request created by
.BR ttmedia_load (\|)
is sent, the application will probably want to use
.BR ttdt_subcontract_manage (\|)
immediately afterwards to manage the standard interactions with the
handler of the request.
.PP
A
.B Ttmedia_load_msg_cb
callback should return
.BR \s-1NULL\s+1
if it processes
.I msg
successfully, or a
.BR tt_error_pointer (\|)
cast to
.B Tt_message
if processing results in an error.
It should return the
.I msg
if it does not consume it, in which case
the ToolTalk service
will pass
.BR \s-1TT_CALLBACK_CONTINUE\s+1
down the call stack, so that
.I msg
will be offered to other callbacks or (more likely) be returned
from
.BR tt_message_receive (3).
Applications will rarely want
.I msg
to get processed by other callbacks or in the main event loop.
.SH EXAMPLES
This is the typical algorithm of a
.BR Ttmedia_load_msg_cb :
.PP
.sp -1
.RS 5
.ta 4m +4m +4m +4m +4m +4m +4m
.nf
.ft 3
Tt_message
myLoadMsgCB(Tt_message  msg,
        void           *clientData,
        Tttk_op         op,
        unsigned char  *contents,
        int             len,
        char           *file)
{
        if (len > 0) {
                /* Replace data with len bytes in contents */
        } else if (file != 0) {
                /* Replace data with data read from file */
        }
        if (op == TTME_DEPOSIT) {
                tt_message_reply(msg);
        }
        tttk_message_destroy(msg);
        return 0;
}
.PP
.ft 1
.fi
.RE
.SH "SEE ALSO"
.na
.BR tttk (5),
.BR ttmedia_load_reply (3),
.BR ttmedia_ptype_declare (3),
.BR ttmedia_Deposit (3),
.BR tt_free (3),
.BR tt_message_receive (3).
