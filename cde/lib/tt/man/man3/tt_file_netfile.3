.de Lc
.\" version of .LI that emboldens its argument
.TP \\n()Jn
\s-1\f3\\$1\f1\s+1
..
.TH tt_file_netfile 3 "1 March 1996" "ToolTalk 1.3" "ToolTalk Functions"
.BH "1 March 1996"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.IX "tt_file_netfile" "" "tt_file_netfile(3)" ""
.SH NAME
tt_file_netfile \- map between local and canonical pathnames on the local host
.SH SYNOPSIS
.ft 3
.nf
#include <Tt/tt_c.h>
.sp 0.5v
.ta \w'char *tt_file_netfile('u
char *tt_file_netfile(const char *\f2filename\fP);
.PP
.fi
.SH DESCRIPTION
The
.BR tt_file_netfile (\|)
function converts a local pathname to a
.IR netfilename ,
a form that can be passed to other hosts on the network and converted
back to a local pathname for the same file with
.BR tt_netfile_file (3).
.PP
The
.I filename
argument is
a pathname (absolute or relative) that is valid on the local host.
Every component of
.I filename
must exist, except that the last component need not exist.
.SH "RETURN VALUE"
Upon successful completion, the
.BR tt_file_netfile (\|)
function returns
a freshly allocated
null-terminated string of unspecified format, which can be passed to
.BR tt_netfile_file (3)
or
.BR tt_host_netfile_file (3);
otherwise, it returns an error pointer.
The application can use
.BR tt_ptr_error (3)
to extract one of the following
.B Tt_status
values from the returned pointer:
.PP
.RS 3
.nr )J 8
.Lc TT_ERR_PATH
.br
The
.I filename
argument is a path that is not valid on this host.
.PP
.RE
.nr )J 0
.SH "APPLICATION USAGE"
The
.BR tt_file_netfile (3),
.BR tt_netfile_file (3),
.BR tt_host_file_netfile (3)
and
.BR tt_host_netfile_file (3)
functions allow an
application to determine a path valid on remote hosts,
perhaps for purposes of constructing a command string valid for remote
execution on that host.
By composing the two calls, paths for files not accessible from the
current host can be constructed.
For example, if path
.B /sample/file
is valid on host A, a program
running on host B can use
.PP
.sp -1
.RS 5
.ta 4m +4m +4m +4m +4m +4m +4m
.nf
.ft 3
tt_host_netfile_file("C", tt_host_file_netfile("A", "/sample/file"))
.PP
.ft 1
.fi
.RE
to determine a path to the same file valid on host C, if such a
path is possible.
.PP
The
.I netfile
string
returned by
.BR tt_file_netfile (\|)
should be considered opaque;
the content and format of the strings are not a public interface.
These strings can be safely copied (with
.BR strcpy (3C)
or similar methods), written to files, or transmitted
to other processes, perhaps on other hosts.
.PP
Allocated strings should be freed using either
.BR tt_free (3)
or
.BR tt_release (3).
.PP
The
.BR tt_open (3)
function need not be called before
.BR tt_file_netfile (\|).
.SH "SEE ALSO"
.na
.BR tt_c (5),
.BR tt_netfile_file (3),
.BR tt_host_file_netfile (3),
.BR tt_host_netfile_file (3),
.BR tt_open (3),
.BR tt_free (3),
.BR tt_release (3).
