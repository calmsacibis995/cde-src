.de Lc
.\" version of .LI that emboldens its argument
.TP \\n()Jn
\s-1\f3\\$1\f1\s+1
..
.TH tt_otype_base 3 "1 March 1996" "ToolTalk 1.3" "ToolTalk Functions"
.BH "1 March 1996"
.\" CDE Common Source Format, Version 1.0.0
.\" (c) Copyright 1993, 1994 Hewlett-Packard Company
.\" (c) Copyright 1993, 1994 International Business Machines Corp.
.\" (c) Copyright 1993, 1994 Sun Microsystems, Inc.
.\" (c) Copyright 1993, 1994 Novell, Inc.
.IX "tt_otype_base" "" "tt_otype_base(3)" ""
.SH NAME
tt_otype_base \- return the base otype of an otype
.SH SYNOPSIS
.ft 3
.nf
#include <Tt/tt_c.h>
.sp 0.5v
.ta \w'char *tt_otype_base('u
char *tt_otype_base(const char *\f2otype\fP);
.PP
.fi
.SH DESCRIPTION
The
.BR tt_otype_base (\|)
function
returns the base
otype
of the given
otype,
or
.BR \s-1NULL\s+1
if the given
otype
is not derived.
.PP
The
otype
argument is the object type involved in this operation.
.SH "RETURN VALUE"
Upon successful completion, the
.BR tt_otype_base (\|)
function returns the name of the base otype; if the given
otype
is not derived, this value is
.BR \s-1NULL\s+1 .
The application can use
.BR tt_ptr_error (3)
to extract one of the following
.B Tt_status
values from the returned pointer:
.PP
.RS 3
.nr )J 8
.Lc TT_OK
The operation completed successfully.
.Lc TT_ERR_NOMP
.br
The
.BR ttsession (1)
process is not running and the ToolTalk service cannot restart it.
.Lc TT_ERR_OTYPE
.br
The specified object type is not the name of an installed object type.
.PP
.RE
.nr )J 0
.SH "APPLICATION USAGE"
The application should use
.BR tt_free (3)
to free any data stored in the address returned by the
ToolTalk API.
.SH "SEE ALSO"
.na
.BR tt_c (5),
.BR tt_otype_is_derived (3),
.BR tt_otype_derived (3),
.BR tt_otype_deriveds_count (3),
.BR tt_spec_type (3),
.BR tt_message_otype (3),
.BR tt_ptr_error (3),
.BR tt_free (3).
