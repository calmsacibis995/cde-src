/*%%  (c) Copyright 1993, 1994 Hewlett-Packard Company			 */
/*%%  (c) Copyright 1993, 1994 International Business Machines Corp.	 */
/*%%  (c) Copyright 1993, 1994 Sun Microsystems, Inc.			 */
/*%%  (c) Copyright 1993, 1994 Novell, Inc. 				 */
/*%%  $XConsortium: tt_entry_pt_names.h /main/cde1_maint/1 1995/07/14 18:39:25 drk CHECKEDOUT $ 			 				 */
/* @(#)tt_entry_pt_names.h	1.1 93/11/03
 * Files tt_entry_pt.h, tt_entry_pt.C, and tt_entry_pt_names.h must
 * be updated each time a new API call is added.  You can do this
 * by hand, or by running the "mktrcfiles" shell script which
 * will regenerate them from tt_c.h.
 */
static const char* _tt_entries[] = {
     "tt_X_session",
     "tt_bcontext_join",
     "tt_bcontext_quit",
     "tt_close",
     "tt_context_join",
     "tt_context_quit",
     "tt_default_file",
     "tt_default_file_set",
     "tt_default_procid",
     "tt_default_procid_set",
     "tt_thread_procid",
     "tt_thread_procid_set",
     "tt_default_ptype",
     "tt_default_ptype_set",
     "tt_default_session",
     "tt_default_session_set",
     "tt_thread_session",
     "tt_thread_session_set",
     "tt_error_int",
     "tt_error_pointer",
     "tt_fd",
     "tt_file_copy",
     "tt_file_destroy",
     "tt_file_join",
     "tt_file_move",
     "tt_file_objects_query",
     "tt_file_quit",
     "tt_free",
     "tt_icontext_join",
     "tt_icontext_quit",
     "tt_initial_session",
     "tt_int_error",
     "tt_malloc",
     "tt_mark",
     "tt_message_abstainer" ,
     "tt_message_abstainers_count" ,
     "tt_message_accept",
     "tt_message_accepter",
     "tt_message_accepters_count",
     "tt_message_address",
     "tt_message_address_set",
     "tt_message_arg_add",
     "tt_message_arg_bval",
     "tt_message_arg_bval_set",
     "tt_message_arg_ival",
     "tt_message_arg_ival_set",
     "tt_message_arg_mode",
     "tt_message_arg_type",
     "tt_message_arg_val",
     "tt_message_arg_val_set",
     "tt_message_arg_xval",
     "tt_message_arg_xval_set",
     "tt_message_args_count",
     "tt_message_barg_add",
     "tt_message_bcontext_set",
     "tt_message_callback_add",
     "tt_message_class",
     "tt_message_class_set",
     "tt_message_context_bval",
     "tt_message_context_ival",
     "tt_message_context_set",
     "tt_message_context_slotname",
     "tt_message_context_val",
     "tt_message_context_xval",
     "tt_message_contexts_count",
     "tt_message_create",
     "tt_message_create_super",
     "tt_message_destroy",
     "tt_message_disposition",
     "tt_message_disposition_set",
     "tt_message_fail",
     "tt_message_file",
     "tt_message_file_set",
     "tt_message_gid",
     "tt_message_handler",
     "tt_message_handler_ptype",
     "tt_message_handler_ptype_set",
     "tt_message_handler_set",
     "tt_message_iarg_add",
     "tt_message_icontext_set",
     "tt_message_id",
     "tt_message_object",
     "tt_message_object_set",
     "tt_message_op",
     "tt_message_op_set",
     "tt_message_opnum",
     "tt_message_otype",
     "tt_message_otype_set",
     "tt_message_pattern",
     "tt_message_print",
     "tt_message_receive",
     "tt_message_reject",
     "tt_message_rejecter",
     "tt_message_rejecters_count",
     "tt_message_reply",
     "tt_message_scope",
     "tt_message_scope_set",
     "tt_message_send",
     "tt_message_send_on_exit",
     "tt_message_sender",
     "tt_message_sender_ptype",
     "tt_message_sender_ptype_set",
     "tt_message_session",
     "tt_message_session_set",
     "tt_message_state",
     "tt_message_status",
     "tt_message_status_set",
     "tt_message_status_string",
     "tt_message_status_string_set",
     "tt_message_uid",
     "tt_message_user",
     "tt_message_user_set",
     "tt_message_xarg_add",
     "tt_message_xcontext_set",
     "tt_objid_equal",
     "tt_objid_objkey",
     "tt_onotice_create",
     "tt_open",
     "tt_orequest_create",
     "tt_otype_base",
     "tt_otype_derived",
     "tt_otype_deriveds_count",
     "tt_otype_hsig_arg_mode",
     "tt_otype_hsig_arg_type",
     "tt_otype_hsig_args_count",
     "tt_otype_hsig_count",
     "tt_otype_hsig_op",
     "tt_otype_is_derived",
     "tt_otype_opnum_callback_add",
     "tt_otype_osig_arg_mode",
     "tt_otype_osig_arg_type",
     "tt_otype_osig_args_count",
     "tt_otype_osig_count",
     "tt_otype_osig_op",
     "tt_pattern_address_add",
     "tt_pattern_arg_add",
     "tt_pattern_barg_add",
     "tt_pattern_bcontext_add",
     "tt_pattern_callback_add",
     "tt_pattern_category",
     "tt_pattern_category_set",
     "tt_pattern_class_add",
     "tt_pattern_context_add",
     "tt_pattern_create",
     "tt_pattern_destroy",
     "tt_pattern_disposition_add",
     "tt_pattern_file_add",
     "tt_pattern_iarg_add",
     "tt_pattern_icontext_add",
     "tt_pattern_object_add",
     "tt_pattern_op_add",
     "tt_pattern_opnum_add",
     "tt_pattern_otype_add",
     "tt_pattern_print",
     "tt_pattern_register",
     "tt_pattern_scope_add",
     "tt_pattern_sender_add",
     "tt_pattern_sender_ptype_add",
     "tt_pattern_session_add",
     "tt_pattern_state_add",
     "tt_pattern_unregister",
     "tt_pattern_user",
     "tt_pattern_user_set",
     "tt_pattern_xarg_add",
     "tt_pattern_xcontext_add",
     "tt_pnotice_create",
     "tt_pointer_error",
     "tt_prequest_create",
     "tt_procid_session",
     "tt_ptype_declare",
     "tt_ptype_exists",
     "tt_ptype_opnum_callback_add",
     "tt_ptype_undeclare",
     "tt_release",
     "tt_session_bprop",
     "tt_session_bprop_add",
     "tt_session_bprop_set",
     "tt_session_equal",
     "tt_session_join",
     "tt_session_prop",
     "tt_session_prop_add",
     "tt_session_prop_count",
     "tt_session_prop_set",
     "tt_session_propname",
     "tt_session_propnames_count",
     "tt_session_quit",
     "tt_session_types_load",
     "tt_spec_bprop",
     "tt_spec_bprop_add",
     "tt_spec_bprop_set",
     "tt_spec_create",
     "tt_spec_destroy",
     "tt_spec_file",
     "tt_spec_move",
     "tt_spec_prop",
     "tt_spec_prop_add",
     "tt_spec_prop_count",
     "tt_spec_prop_set",
     "tt_spec_propname",
     "tt_spec_propnames_count",
     "tt_spec_type",
     "tt_spec_type_set",
     "tt_spec_write",
     "tt_status_message",
     "tt_trace_control",
     "tt_xcontext_join",
     "tt_xcontext_quit",
     "tt_file_netfile",
     "tt_netfile_file",
     "tt_host_file_netfile",
     "tt_host_netfile_file",
     "tt_feature_enabled",
     "tt_feature_required"
};
const int _tt_entries_count = 200;
