XCOMM $XConsortium: Imakefile /main/cde1_maint/3 1995/10/04 13:26:21 gtsang $
/* tt/lib/db/Imakefile */
/* The default for the defines NormalLibtt and SharedLibtt are set in
 * config/Project.tmpl.
 * If NormalLibtt and ! SharedLibtt, only non-pic code is built in
 *    current directory.
 * If NormalLibtt and SharedLibtt, non-pic code is built in the current
 *    directory and pic code is built in the shared subdirectory.
 * If !NormalLibtt and SharedLibtt, only pic code is built in the 
 *    current directory.
 * The default defines for NormalLibtt and SharedLittt can be overwritten 
 *    in many places. See the file config/ExtensionsToImake for 
 *    information.
 */
#ifndef DoNormalLib
#define DoNormalLib NormalLibtt
#endif
#ifndef DoSharedLib
#define DoSharedLib SharedLibtt
#endif

#include <Library.tmpl>

TT_DIR = ../..
#include "../../tooltalk.tmpl"
/* We don't need the local, CDE, or X includes here (see tooltalk.tmpl) */
CDEINCLUDES=
XINCLUDES=

/* General case INCLUDES DEFINES
 * Each individual architecture may have more or less of the above.
 * Use EXTRA_DEFINES and EXTRA_INCLUDES to add defines and includes
 * to an individual architecture.
 */
DEFINES = 
/* Sure wish we could put mini_isam only on the few files that need	*/
/* it, but SpecialObjectRule doesn't seem to be defined 		*/
INCLUDES = -I../../lib -I../../mini_isam 

/* put EXTRA_DEFINES and EXTRA_INCLUDES and anything else below */
#ifdef HPArchitecture
EXTRA_C++OPTIONS = $(ESLIT++_OPTION)
#endif

#ifdef SunArchitecture
EXTRA_DEFINES = -D_REENTRANT -DSVR4 -DOS_VERSION=OSMajorVersion -DOS_MINOR_VERSION=OSMinorVersion
#endif

#ifdef RsArchitecture
#endif

#ifdef USLArchitecture
#endif

#ifdef UXPArchitecture
#endif


/*** NOTE!
 *** Every time a .o is added below it needs to be added to
 *** the lib/tt/lib Imakefile in DB_OBJS and SHARED_DB_OBJS
 ***/

SRCS = \
db_server_clnt.C \
db_server_xdr.C \
tt_db_access_utils.C \
tt_db_client.C \
tt_db_client_utils.C \
tt_db_create_objid.C \
tt_db_file.C \
tt_db_file_utils.C \
tt_db_hostname_global_map_ref.C \
tt_db_hostname_redirection_map.C \
tt_db_key.C \
tt_db_key_utils.C \
tt_db_network_path.C \
tt_db_object.C \
tt_db_object_utils.C \
tt_db_objid_to_key.C \
tt_db_property.C \
tt_db_property_utils.C \
tt_db_rpc_message_routines.C \
tt_db_rpc_routines.C \
old_db_server_functions.C \
tt_client_isam_file.C \
tt_client_isam_file_utils.C \
tt_client_isam_key_descriptor.C \
tt_client_isam_key_descriptor_utils.C \
tt_client_isam_record.C \
tt_client_isam_record_utils.C \
tt_old_db.C \
tt_old_db_partition_map_ref.C \
tt_old_db_utils.C \
tt_old_db_message_info.C \
tt_old_db_message_info_utils.C 


OBJS = \
db_server_clnt.o \
db_server_xdr.o \
tt_db_access_utils.o \
tt_db_client.o \
tt_db_client_utils.o \
tt_db_create_objid.o \
tt_db_file.o \
tt_db_file_utils.o \
tt_db_hostname_global_map_ref.o \
tt_db_hostname_redirection_map.o \
tt_db_key.o \
tt_db_key_utils.o \
tt_db_network_path.o \
tt_db_object.o \
tt_db_object_utils.o \
tt_db_objid_to_key.o \
tt_db_property.o \
tt_db_property_utils.o \
tt_db_rpc_message_routines.o \
tt_db_rpc_routines.o \
old_db_server_functions.o \
tt_client_isam_file.o \
tt_client_isam_file_utils.o \
tt_client_isam_key_descriptor.o \
tt_client_isam_key_descriptor_utils.o \
tt_client_isam_record.o \
tt_client_isam_record_utils.o \
tt_old_db.o \
tt_old_db_partition_map_ref.o \
tt_old_db_utils.o \
tt_old_db_message_info.o \
tt_old_db_message_info_utils.o


/* Build the .o's */
LibraryObjectRule()

all:: $(OBJS)

/* Library built up one level */
LintLibraryTarget(tt,$(SRCS))

DependTarget()

includes::
