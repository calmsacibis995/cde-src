/* bin/dbck/Imakefile */

TT_DIR = ../..
#include "../../tooltalk.tmpl"
/* find libtt locally */
LOCAL_TTLIB_DIR=../../lib  /* reset library top for correct dependencies */

XINCLUDES=
CDEINCLUDES=

/* General case INCLUDES DEFINES
 * Each individual architecture may have more or less of the above.
 * Use EXTRA_DEFINES and EXTRA_INCLUDES to add defines and includes
 * to an individual architecture.
 */

DEFINES = -DTT_VERSION_STRING=\"$(TT_VERSION)\"
INCLUDES = -I. -I../../slib -I../../lib -I../../mini_isam

/* DEPLIBS contains the list of library depencies for a client.
 * LOCAL_LIBRARIES contains the list of libraries on the link line.
 * Generally, the dependency form of a library has DEP as a prefix.
 * e.g. put $(XLIB) in LOCAL_LIBRARIES and $(DEPXLIB) in DEPLIBS.
 * NOTE: if DEPLIBS is not set here, it is by default null and there
 *       are no library dependencies for clients.
 *       You cannot put -Llibpath into DEPLIBS. You must put actual
 *       paths to the library.
 */
DEPLIBS = ../../slib/libstt.a $(DEPTTLIB_AND_MAYBE_XLIB) ../../mini_isam/libisam.a 
LOCAL_LIBRARIES = ../../slib/libstt.a $(TTLIB_AND_MAYBE_XLIB) ../../mini_isam/libisam.a ../../lib/util/copyright.o

/* put EXTRA_DEFINES and EXTRA_INCLUDES and anything else below */
#ifdef HpArchitecture
#endif

#ifdef SunArchitecture
SYS_LIBRARIES = -ldl -lintl -lnsl
EXTRA_DEFINES = -D_REENTRANT -DSVR4 -DOS_VERSION=OSMajorVersion -DOS_MINOR_VERSION=OSMinorVersion 
#endif

#ifdef RsArchitecture
#endif

#ifdef USLArchitecture
#endif

#ifdef UXPArchitecture
#endif

#ifdef AlphaArchitecture
EXTRA_LIBRARIES= -lc
#endif

SRCS = \
        ttdbck.C \
        binkey.C \
        binkey_utils.C \
        common.C \
        options.C \
        options_tt.C \
        prop.C \
        prop_utils.C \
        spec.C \
        spec_repair.C \
        spec_utils.C

OBJS = \
        ttdbck.o \
        binkey.o \
        binkey_utils.o \
        common.o \
        options.o \
        options_tt.o \
        prop.o \
        prop_utils.o \
        spec.o \
        spec_repair.o \
        spec_utils.o $(NONSHAREDLIBCOBJ)


/* Build the .o's */
NormalLibraryObjectRule()
ComplexProgramTarget(ttdbck)
