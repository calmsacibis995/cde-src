--  HP Tag Document-Type Definition
    Copyright (c) Hewlett-Packard Company, 1987-1991
    Version 1.22  (9/21/91)-with Calculator Additions
--

--  Standard pre-defined HP Tag Entities --
  -- Math symbols --
<!ENTITY minus SDATA > -- Minus sign --
<!ENTITY pm SDATA > -- Plus or minus sign --
<!ENTITY div SDATA > -- Division sign --
<!ENTITY times SDATA > -- Multiplication sign --
<!ENTITY leq SDATA >  -- Less than or equals sign --
<!ENTITY geq SDATA >  -- Greater than or equals sign --
<!ENTITY neq SDATA >  -- Not equals sign --

  -- Special typographical symbols --
<!ENTITY copy SDATA >
<!ENTITY reg SDATA >
<!ENTITY tm SDATA >
<!ENTITY ellipsis SDATA >
<!ENTITY pellipsis SDATA >
<!ENTITY vellipsis SDATA >
<!ENTITY a.m. SDATA >
<!ENTITY p.m. SDATA >
<!ENTITY minutes SDATA >
<!ENTITY seconds SDATA >
<!ENTITY deg SDATA >
<!ENTITY squote SDATA >   -- Single quote, non-directional --
<!ENTITY dquote SDATA >   -- Double quote, non-directional --
<!ENTITY endash SDATA >
<!ENTITY emdash SDATA >
<!ENTITY vblank SDATA >  -- Visible blank for syntax descriptions --
<!ENTITY cents SDATA >
<!ENTITY sterling SDATA > -- Pound sterling --
<!ENTITY m-d- PI >     -- Discretionary hyphen --
<!ENTITY sigspace SDATA > -- Significant space --
<!ENTITY empty SDATA "">

  -- Special technical symbols --
<!ENTITY micro SDATA >
<!ENTITY ohm SDATA >

  -- Keycap arrows --
<!ENTITY up SDATA >
<!ENTITY down SDATA >
<!ENTITY left SDATA >
<!ENTITY right SDATA >
<!ENTITY home SDATA >
<!ENTITY back SDATA >

  -- Miscellaneous entities --
<!ENTITY date SDATA >
<!ENTITY time SDATA >
<!ENTITY halfspace SDATA >

  -- Entities for service documentation --
--<!ENTITY INSTMAN SDATA >
<!ENTITY HAZVOLT SDATA >
<!ENTITY GROUND SDATA >
<!ENTITY DCVOLT SDATA >
<!ENTITY NEGPULSE SDATA >
<!ENTITY POSPULSE SDATA >
<!ENTITY SINEWAVE SDATA >
<!ENTITY SAWWAVE SDATA >
<!ENTITY RAMPWAVE SDATA >
<!ENTITY TRIWAVE SDATA >
<!ENTITY SQWAVE SDATA >
--
  --  Entities for partext short references --
<!ENTITY m-startemph       STARTTAG "emph">
<!ENTITY m-startcomputer   STARTTAG "computer">
<!ENTITY m-startdisplay    STARTTAG "display">
<!ENTITY m-startquote      STARTTAG "quote">
<!ENTITY m-startkeycap     STARTTAG "keycap">
<!ENTITY m-startsoftkey    STARTTAG "softkey">
<!ENTITY m-startskline     STARTTAG "skline">
<!ENTITY m-startsuper      STARTTAG "super">
<!ENTITY m-startsub        STARTTAG "sub">
<!ENTITY m-startvar        STARTTAG "var">
<!ENTITY m-startterm       STARTTAG "term">
<!ENTITY m-startcircle     STARTTAG "circle">
<!ENTITY m-startineqn      STARTTAG "ineqn">
<!ENTITY m-startwhitemenu  STARTTAG "whitemenu">

  -- Miscellaneous entities for system use--
<!ENTITY m-msgnumst        STARTTAG "msgnum">
<!ENTITY m-msgnumend       ENDTAG "msgnum">
<!ENTITY m-msgtxtst        STARTTAG "msgtext">
<!ENTITY m-textmap         MD "USEMAP TEXT" >
<!ENTITY m-startrow        STARTTAG "row">
<!ENTITY m-startcell       STARTTAG "cell">
<!ENTITY m-starttext       STARTTAG "text">
-- m-starttextincell is used in possible applications (such as that
   generated by the empty interface) that do not insert markup into
   the input stream.  Unfortunately, the HP Tag to TeX converter does
   do this horrible thing in order to distinguish cells from quadded
   cells automatically. The Tag to TeX converter supports this
   "feature" by redefining this entity to the null string and
   inserting either <text> or <quadcell> in the start-code for <cell>
   and <rowh> --
<!ENTITY m-starttextincell STARTTAG "text">
<!ENTITY m-startcolh       STARTTAG "colh">
<!ENTITY m-starthline      STARTTAG "hline">
<!ENTITY m-startpartext    STARTTAG "partext">
<!ENTITY m-endcomp         ENDTAG "computer">
<!ENTITY m-startchi        STARTTAG "computer HALFBRIGHT INVERSE">
<!ENTITY m-startcfi        STARTTAG "computer FULLBRIGHT INVERSE">
<!ENTITY m-enddisplay      ENDTAG "display">
<!ENTITY m-startcsuser     STARTTAG "csuser">
<!ENTITY m-endcsuser       ENDTAG "csuser">
<!ENTITY m-startuser       STARTTAG "user">
<!ENTITY m-enduser         ENDTAG "user">
<!ENTITY m-startuhi        STARTTAG "user HALFBRIGHT INVERSE">
<!ENTITY m-startufi        STARTTAG "user FULLBRIGHT INVERSE">
<!ENTITY m-startcursor     STARTTAG "cursor">
<!ENTITY m-endcursor       ENDTAG "cursor">
<!ENTITY m-startcurhi      STARTTAG "cursor HALFBRIGHT INVERSE">
<!ENTITY m-startcurfi      STARTTAG "cursor FULLBRIGHT INVERSE">
<!ENTITY m-endopt          ENDTAG "optblock">
<!ENTITY m-endreq          ENDTAG "reqblock">
<!ENTITY m-startcrow       STARTTAG "crow">
<!ENTITY m-startccell      STARTTAG "ccell">
<!ENTITY m-startcmddesc    STARTTAG "cmddesc">
<!ENTITY m-startcmdtype    STARTTAG "cmdtype">

  -- Entities for MARKUP delimiters --
<!ENTITY m-backslash CDATA "\">
<!ENTITY m-lt CDATA "<">
<!ENTITY m-and CDATA "&">

  -- For localizable "special characters" head in
     automatically generated index --
<!ENTITY m-specchar SDATA>

<!SHORTREF text>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
    "W--W" -> &emdash,
    "W--W&#RE;" -> &emdash,
    "&#RE;W--W" -> &emdash,
    "-?" -> &m-d-,
    "!!" -> &m-startemph,
    "``" -> &m-startcomputer,
    "::" -> &m-startdisplay,
    '"' -> &m-startquote,
    "[[" -> &m-startkeycap,
    "{{" -> "&m-startsoftkey;&m-startskline;",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
    "%%" -> &m-startvar,
    "++" -> &m-startterm,
    "((" -> &m-startcircle,
    "@@" -> &m-startineqn,
    "{{{" -> &m-startwhitemenu,
    ;

infostart -> (!helpvolume | manual)
  <MIN> STARTTAG ENDTAG
  ;

helpvolume -> (hyphenations?,
           reviewers?,
           (front|metainfo)?,
           toc?,
           hometopic?,
           (part* | !chapter* | (s1*, rsect*)),
           appendix*,
           message?,
           biblio?,
           glossary?,
           idxsyn?,
           index?)
  <EXCEPT> +(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <PARAM>
    author CDATA,
    language CDATA,
    idxvol NAMETOKEN,
    status CDATA,
  <USEMAP text>
  <MIN> STARTTAG ENDTAG
  ;

hometopic -> (chaphead, !text?)
  <MIN> ENDTAG
  ;

otherhead -> (head, !text?)
  <MIN> ENDTAG
  ;

manual -> (hyphenations?,
           reviewers?,
           front?,
           toc?,
           (part* | !chapter*),
           appendix*,
           message?,
           biblio?,
           glossary?,
           idxsyn?,
           index?)
  <EXCEPT> +(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <PARAM>
    author CDATA,
    language CDATA,
    idxvol NAMETOKEN,
    status CDATA,
  <USEMAP text>
  <MIN> STARTTAG ENDTAG
  ;

memo -> CDATA      -- A writer's note to self or reviewer --
  <PARAM>
    audience NAMES
  ;


link -> (partext)
  <PARAM>
    hyperlink CDATA,
    type (JUMP | JUMPNEWVIEW | DEFINITION | EXECUTE | APPDEFINED | MAN),
    description CDATA
  ;

location -> (partext?)
  <PARAM>
    id ID #REQUIRED
  ;

default -> EMPTY
  <PARAM>
  -- Changes to this element's parameters require changes in the HP
     Tag to TeX interface, functions setdefault(), texinit(),
     texuptodate(). --
    calcqrgwidth CDATA,
    ctbltype ( KEYS2 | COMMAND),
    ctblgraphics (NOGRAPHICS | GRAPHICS),
    ctbldisplines (TWO | FOUR | EIGHT | OTHER),
    extype (COMPUTER | DISPLAY),
    expos (LEFT | INDENT | CENTER),
    exnotes (SIDE | STACK),
    exlines (NUMBER | NONUMBER),
    extextsize (NORMAL | SMALLER | SMALLEST),
    gloss (GLOSS | NOGLOSS),
    listtype (ORDER | BULLET | PLAIN | MILSPEC | CHECK),
    listordertype (UALPHA | LALPHA | ARABIC | UROMAN | LROMAN),
    listspacing (TIGHT | LOOSE),
    longlabel (WRAP | NOWRAP),
    labelwidth CDATA,
    tableborder (BOX | NOBOX),
    tablerule (NORULE | HEADRULE | GRID),
    tableallvr (VRULE),
    tableallhr (HRULE),
    tablevr NUMBER,
    tablehr NUMBER,
    tablespacing (TIGHT | LOOSE),
    tablepos (LEFT | INDENT | CENTER),
    tablewidth NAMETOKEN,
    tabletextsize (NORMAL | SMALLER | SMALLEST),
    numbertables (NUMBER | NONUMBER),
    figtype NAME,
    oldfigtype (ART | PCL | TIFF | LISTING | TEXT),
    figmagnify NAMETOKEN,
    figwidth NAMETOKEN,
    figheight NAMETOKEN,
    figborder (TOP | BOTTOM | BOX | SCREEN | NOBOX),
    figvideo (INVERSE | NOINVERSE),
    figstrip (STRIP | NOSTRIP),
    figmargin CDATA,
    figclip CDATA,
    figpenwidth CDATA,
    figsnap (SNAP | NOSNAP),
    figautoscale (AUTOSCALE | NOAUTOSCALE),
    figplottype CDATA,
    listtextsize (NORMAL | SMALLER | SMALLEST),
    numberfigs (NUMBER | NONUMBER),
    eqn NAME,
    rsectpagebreak (NEWPAGE | SAMEPAGE),
  ;

(header | footer)
  -> ((inside, middle?, outside?) | (middle, outside?) | outside)
  <EXCEPT> -(header | footer | fillin | location | idx | newpage | need)
  ;

-- * instead of + on hline below allows for blanking a header or 
   footer field --
(inside | middle | outside)
  -> (hline*)
  <ADDMAP>
    "W\" -> &m-starthline,
    "&&#RE;" -> " ",
  <MIN> ENDTAG
  ;

rev -> EMPTY
  <PARAM>
    delim (BEGIN | END | DELETE) #REQUIRED,
    revid CDATA
  ;

whatsit -> (partext)
  <EXCEPT> -(fillin)
  <PARAM>
    original CDATA
  ;

hyphenations -> (hyphentry*)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> ENDTAG
  ;

hyphentry -> (#PCDATA)
  <USEMAP>
    "&#RE;" -> ENDTAG "hyphentry",
    "&#RS;&#RE;" -> ENDTAG "hyphentry"
  <MIN> STARTTAG
  ;

reviewers -> (reviewer +)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need | fillin)
  <MIN> ENDTAG
  ;

reviewer -> (partext)
  <ADDMAP>
    "&#RE;" -> ENDTAG "reviewer",
    "&#RS;&#RE;" -> ENDTAG "reviewer",
    "&&#RE;" -> " ",
  <MIN> STARTTAG
  ;

--  Front matter  --
(metainfo | front) -> (idsection, legal?, history?, safety?,
          map?, abstract?, preface?, conventions?, otherfront*, entrypointset?)
  <EXCEPT> -(footnote)
  <MIN> ENDTAG
  ;

idsection ->
  (title &
   volume? &
   country? &
   copyright &
   hardware? &
   serialno? &
   version? &
   source? &
   partno? &
   mfgno? &
   ficheno? &
   product? &
   edition? &
   printdate? &
   sdc? &
   binderno? &
   replaces? &
   titlefig?)
  <MIN> STARTTAG ENDTAG
  ;

title -> (hline +)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> ENDTAG
  <ADDMAP>
    "&#RE;" -> ENDTAG "title",
    "W\" -> &m-starthline,
    "&&#RE;" -> " ",
  ;

(volume | country | version | partno | mfgno | ficheno | product | edition |
 printdate | sdc | binderno | replaces)
     -> (partext)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> ENDTAG
  ;

serialno -> (text)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> ENDTAG
  ;

hardware -> (hline +, subcategory?)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> ENDTAG
  <ADDMAP>
    "W\" -> &m-starthline,
    "W:W" -> STARTTAG "subcategory",
    ;

subcategory -> (hline +)
  <MIN> ENDTAG
  <ADDMAP>
    "W\" -> &m-starthline,
  ;

copyright -> (text)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> ENDTAG
  ;

source -> (partext)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> ENDTAG
  ;

frontsub -> (head, text)
  <MIN> ENDTAG
  <PARAM>
    include CDATA,
    exclude CDATA
  ;

(legal | safety | map | abstract | preface | conventions | history)
    -> (head?, !text?, frontsub*)
  <MIN> ENDTAG
  <PARAM>
    include CDATA,
    exclude CDATA
  ;

otherfront -> (head?, !text?, frontsub*)
  <MIN> ENDTAG
  <PARAM>
    id ID,
    include CDATA,
    exclude CDATA
  ;

entrypointset -> (entrypoint +)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need | fillin)
  <MIN> ENDTAG
  ;

entrypoint -> (partext)
  <ADDMAP>
    "&#RE;" -> ENDTAG "entrypoint",
    "&#RS;&#RE;" -> ENDTAG "entrypoint",
    "&&#RE;" -> " ",
  <MIN> STARTTAG
  ;

toc -> EMPTY
  ;

-- Chapter Structure --
part -> (!head?, !text?, chapter +)
  <MIN> ENDTAG
  <PARAM>
    id ID,
    number NUMBER #IMPLIED,
    include CDATA,
    exclude CDATA
  ;

(chapter | appendix) -> (chaphead, !text?, (test* | (s1*, rsect*)) )
  <MIN> ENDTAG
  ;

<!PARAM chapter test s1 s2 s3 s4 s5 s6 s7 s8 s9>
  id ID,
  number NUMBERTOKEN #IMPLIED,
  include CDATA,
  exclude CDATA
  ;

<!PARAM appendix>
  letter NAMETOKEN #IMPLIED,
  id ID,
  include CDATA,
  exclude CDATA
  ;

test -> (chaphead, !text?, s1*, rsect*)
  <MIN> ENDTAG
  ;

s1 -> (chaphead, !text?, s2*, rsect*)
  <MIN> ENDTAG
  ;

s2 -> (chaphead, !text?, s3*, rsect*)
  <MIN> ENDTAG
  ;

s3 -> (chaphead, !text?, s4*, rsect*)
  <MIN> ENDTAG
  ;

s4 -> (chaphead, !text?, s5*, rsect*)
  <MIN> ENDTAG
  ;

s5 -> (chaphead, !text?, s6*, rsect*)
  <MIN> ENDTAG
  ;

s6 -> (chaphead, !text?, s7*, rsect*)
  <MIN> ENDTAG
  ;

s7 -> (chaphead, !text?, s8*, rsect*)
  <MIN> ENDTAG
  ;

s8 -> (chaphead, !text?, s9*, rsect*)
  <MIN> ENDTAG
  ;

s9 -> (chaphead, !text?)
  <MIN> ENDTAG
  ;

procedure -> (chaphead, !text?)
  <EXCEPT> -(procedure)
  <MIN> ENDTAG
  ;

rsect -> (chaphead, !text?, rsub*)
  <MIN> ENDTAG
  <PARAM>
    id ID,
    pagebreak (NEWPAGE | SAMEPAGE),
    include CDATA,
    exclude CDATA
  ;

rsub -> (chaphead, text?)
  <MIN> ENDTAG
  <PARAM>
    include CDATA,
    exclude CDATA
  ;

chaphead -> (head, abbrev?)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need | fillin | footnote)
  <MIN> STARTTAG ENDTAG
  ;

head -> (hline +)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <MIN> STARTTAG ENDTAG
  <ADDMAP>
    "&#RE;" -> ENDTAG "head",
    "W\" -> &m-starthline,
    "&&#RE;" -> " ",
  ;

hline -> (partext?)
  <MIN> STARTTAG ENDTAG
  ;

abbrev -> (hline +)
  <EXCEPT> -(need | footnote)
  <MIN> ENDTAG
  <PARAM>
    where (TOC | FOOTER | BOTH) BOTH
  <ADDMAP>
    "&#RE;" -> ENDTAG "abbrev",
    "&&#RE;" -> " ",
    "W\" -> &m-starthline,
  ;

--  TEXT  --
text -> (!p | note | caution | warning | lablist | list | ex | vex | esc |
         csyntax | cspot | ctable | otherhead | procedure | syntax | figure | 
         table | eqn | image | cdrom)*
  <MIN> STARTTAG ENDTAG
  ;

<!PARAM p image>
  number NUMBER,
  indent (INDENT),
  id ID,
  gentity ENTITY,
  gposition (LEFT | RIGHT),
  ghyperlink CDATA,
  glinktype (JUMP | JUMPNEWVIEW | DEFINITION | EXECUTE | APPDEFINED | MAN),
  gdescription CDATA
  ;

p -> (head?, partext)
  <EXCEPT> +(newline, parm)
  <ADDMAP>
    "&#RS;&#RE;" -> ENDTAG "p", -- blank line --
  <MIN> STARTTAG ENDTAG
    ;

newline -> EMPTY
  ;

image -> (head?, imagetext)
  <EXCEPT> -(footnote)
  <ADDMAP>
  -- Leading spaces on first line should trigger <partext> start-tag --
    " " -> "&sigspace;",
  ;
  
imagetext -> (partext)
  <MIN> STARTTAG ENDTAG
  <ADDMAP>
  -- Record ends are significant around em-dashes --
    "W--W&#RE;" -> "&emdash&#RE;",
    "&#RE;W--W" -> "&#RE;&emdash",
  ;

(note | caution | warning)
  -> (head?, text)
  <EXCEPT> -(note | caution | warning | footnote)
  ;

list -> (head?, item +)
  <ADDMAP>
    "&#RS;W*" -> STARTTAG "item",
  <PARAM>
    type (ORDER | BULLET | PLAIN | MILSPEC | CHECK) #IMPLIED,
    ordertype (UALPHA | LALPHA | ARABIC | UROMAN | LROMAN) #IMPLIED,
    spacing (TIGHT | LOOSE) #IMPLIED,
    continue (CONTINUE)
  ;

item -> (text)
  <EXCEPT> +(parm)
  <PARAM>
    id ID
  <MIN> ENDTAG
  ;

lablist -> (head?, labheads?, (label, text)+)
  <ADDMAP>
    "&#RS;W\" -> STARTTAG "label",
  <PARAM>
    longlabel (WRAP | NOWRAP) #IMPLIED,
    width CDATA #IMPLIED,
    spacing (TIGHT | LOOSE) #IMPLIED
  ;

labheads -> (labh, labhtext)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need)
  <ADDMAP>
    "W\" -> STARTTAG "labh",
    "&#RS;W\" -> STARTTAG "labh",
  <MIN> ENDTAG
  ;

labh -> (partext)
  <ADDMAP>
    "W\" -> &m-startpartext,
    "&#RS;W\" -> &m-startpartext,
  <MIN> STARTTAG ENDTAG
  ;

labhtext -> (partext)
  <ADDMAP>
    "&#RS;W\" -> STARTTAG "label",
  <MIN> STARTTAG ENDTAG
  ;

label -> (partext)
  <EXCEPT> +(parm)
  <ADDMAP>
    "W\" -> &m-starttext,
    "&#RS;W\" -> &m-starttext,
  <MIN> ENDTAG
  ;

ex -> (head?, (!exampleseg, annotation?)+)
  <EXCEPT> -(ex | vex | note | caution | warning | syntax | footnote) +(parm)
  <PARAM>
    type (COMPUTER | DISPLAY) #IMPLIED,
    position (LEFT | INDENT | CENTER) #IMPLIED,
    notes (SIDE | STACK) #IMPLIED,
    width CDATA #IMPLIED,
    lines (NUMBER | NONUMBER) #IMPLIED,
    textsize (NORMAL | SMALLER | SMALLEST) #IMPLIED,
  <USEMAP>
  -- Leading spaces on first line should trigger <exampleseg> start-tag --
    " " -> "&sigspace;",
    "<<" -> STARTTAG "annotation",
    -- Line-final & expands to nothing here, but to a space in head
       and other elements --
    "&&#RE;" -> "",
  -- partext short references --
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "``" -> &m-startcomputer,
    "::" -> &m-startdisplay,
    "[[" -> &m-startkeycap,
    "{{" -> "&m-startsoftkey;&m-startskline;",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
    "%%" -> &m-startvar,
  ;

exampleseg -> (partext)
  <EXCEPT> +(lineno)
  <MIN> STARTTAG ENDTAG
  ;

lineno -> EMPTY
  <PARAM> id ID #REQUIRED
  ;

annotation -> (partext?)
  <EXCEPT> +(newline)
  <USEMAP>
    ">>" -> ENDTAG "annotation",
  -- partext short references --
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
    "W--W" -> &emdash,
    "W--W&#RE;" -> &emdash,
    "&#RE;W--W" -> &emdash,
    "-?" -> &m-d-,
    "!!" -> &m-startemph,
    "``" -> &m-startcomputer,
    "::" -> &m-startdisplay,
    '"' -> &m-startquote,
    "[[" -> &m-startkeycap,
    "{{" -> "&m-startsoftkey;&m-startskline;",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
    "%%" -> &m-startvar,
    "++" -> &m-startterm,
    "((" -> &m-startcircle,
    "@@" -> &m-startineqn,
    "{{{" -> &m-startwhitemenu,
  ;

vex -> CDATA
  <PARAM>
    type (COMPUTER | DISPLAY) #IMPLIED,
    position (LEFT | INDENT | CENTER) #IMPLIED,
    lines (NUMBER | NONUMBER) #IMPLIED,
    textsize (NORMAL | SMALLER | SMALLEST) #IMPLIED,
  ;

csyntax -> (cmdname, cmddesc, cmdtype, csynheads?, crow +)
  <USEMAP>
    "&#RS;W=" -> &m-startcrow,
    "W||" -> &m-startccell,
  ;

cmdname -> (partext)
  <USEMAP>
    "W||" -> &m-startcmddesc,
    "@@" -> &m-startineqn,
    "!!" -> &m-startemph,
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
  <MIN> STARTTAG ENDTAG
  ;

cmddesc -> (#PCDATA)
  <USEMAP>
    "W||" -> &m-startcmdtype,
  <MIN> ENDTAG
  ;

cmdtype -> (#PCDATA)
  <MIN> ENDTAG
  ;

cspot -> (!text?, s3*, s4*)
  <EXCEPT> -(table, ctable, figure, cspot, list)
  <PARAM>
    entity ENTITY,
    graphics (NOGRAPHICS | GRAPHICS) #IMPLIED,
    width NAMETOKEN #IMPLIED,
    height NAMETOKEN #IMPLIED,
  ;

csynheads -> (ccell +)
  <USEMAP>
    "W||" -> &m-startccell,
    "&#RE;" -> ENDTAG "csynheads",
    "&#RS;&#RE;" -> ENDTAG "csynheads",
    "@@" -> &m-startineqn,
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
    "%%" -> &m-startvar,
  <MIN> ENDTAG
  ;

crow -> (ccell +)
  <USEMAP>
    "W||" -> &m-startccell,
    "&#RE;" -> ENDTAG "crow",
    "&#RS;&#RE;" -> ENDTAG "crow",
    "@@" -> &m-startineqn,
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
    "%%" -> &m-startvar,
    "??" -> &m-startcsuser,
    '"' -> '&m-startcsuser;"&m-endcsuser;',
    "'" -> "&m-startcsuser;'&m-endcsuser",
    "{" -> "&m-startcsuser;{&m-endcsuser;",
    "}" -> "&m-startcsuser;}&m-endcsuser;",
    "[" -> "&m-startcsuser;[&m-endcsuser;",
    "]" -> "&m-startcsuser;]&m-endcsuser;",
    "(" -> "&m-startcsuser;(&m-endcsuser;",
    ")" -> "&m-startcsuser;)&m-endcsuser;",
  <MIN> ENDTAG
  ;

csuser -> (#PCDATA | keycap | var | ineqn | super | sub | esc)*
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
    "[[" -> &m-startkeycap,
    "%%" -> &m-startvar,
    "@@" -> &m-startineqn,
    "??" -> &m-endcsuser,
    "^^" -> &m-startsuper,
    "__" -> &m-startsub
  ;

ccell -> (partext)
  <MIN> STARTTAG ENDTAG
  ;

-- synel + allows short reference of RE -> ENDTAG "synel" --
syntax -> (head?, synel +)
  <USEMAP>
    "[[" -> &m-startkeycap,
    "%%" -> &m-startvar,
    "[" -> STARTTAG "optblock",
    "{" -> STARTTAG "reqblock",
    "&&#RE;" -> " ",
    "]" -> &m-endopt,
    "}" -> &m-endreq,
  -- partext short references --
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
  ;

synel -> (#PCDATA | esc | var | ineqn | keycap | optblock | reqblock | parm)+
  <ADDMAP>
    "&#RE;" -> ENDTAG "synel",
    "@@" -> &m-startineqn,
  <MIN> STARTTAG ENDTAG
  ;

optblock -> (synel)+
  ;

reqblock -> (synel)+
  ;

footnote -> (p +)
  <EXCEPT> -(footnote)
  ;

eqn -> RCDATA
  <PARAM>
    formatter NAME #IMPLIED
  ;

idx -> (indexprimary, indexsub?)
  <EXCEPT> -(term | footnote | location | idx | newpage | need | fillin)
  <PARAM>
    main (MAIN),
    range (BEGIN | END)
  <USEMAP text>
  -- idx cannot inherit short-reference map from manual because if
     idx is called from within a partext element with identical open
     and close short-ref delimiters (e.g., !! or %%), a first
     occurrence of the delimiter within the idx should be an open
     instead of a close--
  ;

indexprimary -> (partext, sort?)
  <ADDMAP>
    "W:W" -> STARTTAG "indexsub",
  <MIN> STARTTAG ENDTAG
  ;

indexsub -> (partext, sort?)
  <MIN> ENDTAG
  ;

sort -> (#PCDATA | esc)+
  <MIN> ENDTAG
  ;

graphic -> EMPTY
  <PARAM>
    id ID,
    entity ENTITY,
  ;

(titlefig | figure) -> (!caption?, calltext*, figtext?, (fignote?))
  <EXCEPT> -(figure, graphic)
  <PARAM>
    number NUMBER #IMPLIED,
    tonumber (NUMBER | NONUMBER) #IMPLIED,
    id ID,
    entity ENTITY,
    figpos (LEFT | CENTER | RIGHT) #IMPLIED,
    cappos (LEFT | CENTER | RIGHT) #IMPLIED,
    oldtype (ART | PCL | TIFF | LISTING | TEXT) #IMPLIED,
    width NAMETOKEN #IMPLIED,
    height NAMETOKEN #IMPLIED,
  --The next two parameters are NAMETOKENs instead of
    NUMBERTOKENs so they can be negative numbers--
    hadjust NAMETOKEN,
    vadjust NAMETOKEN,
    border (TOP | BOTTOM | BOX | SCREEN | NOBOX) #IMPLIED,
    continue (CONTINUE),
    type NAME #IMPLIED,
    magnify NAMETOKEN #IMPLIED,
    video (INVERSE | NOINVERSE) #IMPLIED,
    strip (STRIP | NOSTRIP) #IMPLIED,
    mirror (MIRROR),
    margin CDATA #IMPLIED,
    clip CDATA,
    penwidth CDATA,
    snap (SNAP | NOSNAP) #IMPLIED,
    autoscale (AUTOSCALE | NOAUTOSCALE) #IMPLIED,
    plottype CDATA,
    callout NUMBER,
    textsize (NORMAL | SMALLER | SMALLEST) #IMPLIED,
    ghyperlink CDATA,
    glinktype (JUMP | JUMPNEWVIEW | DEFINITION | EXECUTE | APPDEFINED | MAN),
    gdescription CDATA
  ;

figtext -> (text?)
  <MIN> ENDTAG
  ;

calltext -> (#PCDATA)
  <PARAM>
    callno NUMBER #REQUIRED,
  <MIN> ENDTAG
  ;

caption -> (!hline +, abbrev?)
  <EXCEPT> -(memo | default | pageno | header | footer | rev |
             location | idx | newpage | need | fillin)
  <ADDMAP>
    "&#RE;" -> ENDTAG "caption",
    "&&#RE;" -> " ",
    "W\" -> &m-starthline,
  <MIN> STARTTAG ENDTAG
  ;

fignote -> CDATA
  <MIN> ENDTAG
  ;

ctable -> ( (cmd, cmddescrip, input....., output....)* |
            (descrip, keys, cdisplay)* )
  <PARAM>
    type (KEYS2 | COMMAND) #IMPLIED,
    graphics (NOGRAPHICS | GRAPHICS) #IMPLIED,
    displines (TWO | FOUR | EIGHT | OTHER) #IMPLIED,
  <MIN> ENDTAG
  <USEMAP text>
  ;

cmd -> (partext)
  <EXCEPT> -(ctable | location | idx)
  <USEMAP>
    "W:W" -> STARTTAG "cmddescrip",
  -- partext short references --
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    ".W.W." -> &ellipsis,
    "W--W" -> &emdash,
    "W--W&#RE;" -> &emdash,
    "&#RE;W--W" -> &emdash,
    "-?" -> &m-d-,
    "!!" -> &m-startemph,
    "``" -> &m-startcomputer,
    "::" -> &m-startdisplay,
    '"' -> &m-startquote,
    "[[" -> &m-startkeycap,
    "{{" -> "&m-startsoftkey;&m-startskline;",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
    "%%" -> &m-startvar,
    "++" -> &m-startterm,
    "@@" -> &m-startineqn,
    "{{{" -> &m-startwhitemenu,

  <MIN> ENDTAG
  ;

cmddescrip -> (partext)
  <EXCEPT> -(ctable)
  <MIN> ENDTAG
  ;

input..... ->  (#PCDATA | var | csuser | ineqn | user | cursor | super |
                sub | esc)*
  <EXCEPT> -(ctable | location | idx)
  <USEMAP>
    "[[" -> "[[",
    "??" -> &m-startcsuser,
  <MIN> ENDTAG
  ;

output.... -> (#PCDATA | var | csuser | ineqn | user | cursor | super |
               sub | esc)*
  <EXCEPT> -(ctable | location | idx)
  <USEMAP>
    "[[" -> "[[",
    "??" -> &m-startcsuser,
  <MIN> ENDTAG
  ;

keys -> (partext)*
  <EXCEPT> -(ctable) +(newline)
  <MIN> ENDTAG
  ;

cdisplay -> EMPTY
  <PARAM>
    entity ENTITY,
    startrow NUMBER,
    endrow NUMBER,
    clip CDATA,
    margin CDATA
  ;

descrip -> (p)*
  <EXCEPT> -(ctable)
  <MIN> ENDTAG
  ;

-- COLH is not allowed directly in TABLE, but is in COLHEADS 
   and TABLEHEAD.  Context checking is done in the interface --
table -> (!caption?, ((colheads, hsep?) | tablehead)?, (!row, hsep?)+)
  <EXCEPT> -(table | note | caution | warning | footnote)
  <PARAM>
    colspec CDATA #REQUIRED,
    id ID,
    number NUMBER #IMPLIED,
    tonumber (NUMBER | NONUMBER) #IMPLIED,
    box (BOX | NOBOX) #IMPLIED,
    rule (NORULE | HEADRULE | GRID) #IMPLIED,
    allvrules (VRULE) #IMPLIED,
    allhrules (HRULE) #IMPLIED,
    vrule NUMBER,
    hrule NUMBER,
    spacing (TIGHT | LOOSE) #IMPLIED,
    width NAMETOKEN,
    position (LEFT | INDENT | CENTER) #IMPLIED,
    divide NUMBER #IMPLIED,
    textsize (NORMAL | SMALLER | SMALLEST) #IMPLIED,
  <ADDMAP>
    "&#RS;W=" -> "&m-startrow;&m-startcell;&m-starttextincell",
    "W||" -> "&m-startcell;&m-starttextincell",
  ;

tablehead -> ((!row, hsep?)+)
  <EXCEPT> -(cell)
  <ADDMAP>
    "&#RS;W=" -> "&m-startrow;&m-startcolh;&m-starthline;&m-startpartext",
    "W||" -> "&m-startcolh;&m-starthline;&m-startpartext",
    "W\" -> "&m-starthline"
;

colheads -> (!colh)+
  <ADDMAP>
    "&#RS;W=" -> "&m-startrow;&m-startcell;&m-starttextincell",
    "W||" -> "&m-startcolh;&m-starthline;&m-startpartext",
    "W\" -> &m-starthline,
  <MIN> ENDTAG
  ;

colh -> (hline +)
  <PARAM>
    span NUMBER 1,
    vspan NUMBER 1,
    cellspec CDATA,
  <MIN> STARTTAG ENDTAG
  ;

-- Cell is not contextually required, but it is never minimized.  It is
   started by a short reference or has an explicit tag with parameters --
row -> ((rowh?, cell*) | colh*)
  <EXCEPT> -(newpage | need | hsep)
  <MIN> STARTTAG ENDTAG
  ;

cell -> (! partext | quadcell)
  <PARAM>
    span NUMBER 1,
    vspan NUMBER 1,
    cellspec CDATA,
  <MIN> STARTTAG ENDTAG
  ;

rowh -> (! text | quadcell)
  <PARAM>
    span NUMBER 1,
    vspan NUMBER 1,
    cellspec CDATA,
  <MIN> ENDTAG
  ;

quadcell -> (partext)
  <MIN> ENDTAG
  ;

hsep -> EMPTY
  <PARAM> rule (NORULE | RULE | BLANK) RULE
  ;

tnote -> (p +)
  <EXCEPT> -(tnote, footnote)
  <PARAM>
    id NAME #IMPLIED
  ;

tnoteref -> EMPTY
  <PARAM>
    id NAME #REQUIRED
  ;

-- Included text elements --
-- If modify definition of "partext", check exclusions to "term"--
-- NOTE: tnote and tnoteref should only be allowed in table,
   exceptions are handled in the interface, should probably be in dtd
--
partext -> (#PCDATA | acro | emph | computer | display | graphic | term | var |
            circle | ineqn | quote | keycap | softkey | csuser | user |
            cursor | whitemenu | super | sub | book | whatsit | number |
            xref | not | footnote | nobreak | esc | fillin | leader |
            location | tnote | tnoteref | link)*
  <MIN> STARTTAG ENDTAG
  ;

acro -> (#PCDATA | esc | super | sub)*
  ;

esc -> CDATA
  ;

emph -> (partext)
  <ADDMAP>
    "!!" -> ENDTAG "emph",
  ;

parm -> (partext)
  <EXCEPT> -(parm)
  ;

cdrom -> (partext)
  <EXCEPT> +(eqn, ex, figure, image, p, vex) -(acro | ineqn | csuser | user |
            cursor | whitemenu | super | sub | whatsit | number |
            xref | not | footnote | nobreak | fillin | leader |
            tnote | tnoteref | cdrom)
  ;

fillin -> EMPTY
  <PARAM>
    length NAMETOKEN #REQUIRED
  ;

leader -> EMPTY
  <PARAM>
    type (SPACE | DOTS) DOTS,
  ;
    
<!PARAM computer user cursor>
  underline (UL| NOUL) NOUL,
  intensity (FULLBRIGHT | HALFBRIGHT) FULLBRIGHT,
  video (NOINVERSE | INVERSE) NOINVERSE,
  blinking (BLINK | NOBLINK) NOBLINK
  ;

computer -> (#PCDATA | quote | keycap | var | ineqn | user | cursor |
	     super | sub | esc)*
  <USEMAP>
    '"'  -> &m-startquote,
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
    "''" -> &m-endcomp,
    "[[" -> &m-startkeycap,
    "%%" -> &m-startvar,
    "~~" -> "&m-endcomp;&m-startchi;",
    "$$" -> "&m-endcomp;&m-startcfi;",
    "@@" -> &m-startineqn,
    "``" -> "&m-endcomp;&m-startcomputer",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
  ;

display -> (#PCDATA | keycap | var | ineqn | user | cursor | super | sub |
            esc)*
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
    "::" -> &m-enddisplay,
    "[[" -> &m-startkeycap,
    "%%" -> &m-startvar,
    "@@" -> &m-startineqn,
    "``" -> "&m-enddisplay;&m-startdisplay;",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
  ;

user -> (#PCDATA | keycap | var | ineqn | super | sub | esc | cursor)*
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
    "[[" -> &m-startkeycap,
    "%%" -> &m-startvar,
    "~~" -> "&m-enduser;&m-startuhi;",
    "$$" -> "&m-enduser;&m-startufi;",
    "``" -> "&m-enduser;&m-startuser;",
    "@@" -> &m-startineqn,
    "^^" -> &m-startsuper,
    "__" -> &m-startsub
  ;

cursor -> (#PCDATA | keycap | var | ineqn | super | sub | esc)*
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "W.W.W.W" -> &ellipsis,
    "W.W.W.W.W" -> &pellipsis,
    "[[" -> &m-startkeycap,
    "%%" -> &m-startvar,
    "~~" -> "&m-endcursor;&m-startcurhi;",
    "$$" -> "&m-endcursor;&m-startcurfi;",
    "``" -> "&m-endcursor;&m-startcursor;",
    "@@" -> &m-startineqn,
    "^^" -> &m-startsuper,
    "__" -> &m-startsub
  ;

term -> (partext)
  <EXCEPT>
    -(emph | computer | display | term | var | ineqn | quote | user |
             cursor | book | number | footnote | whatsit)
  <PARAM>
    base CDATA,
    gloss (GLOSS | NOGLOSS)
  <ADDMAP>
    "++" -> ENDTAG "term",
  ;

quote -> (partext)
  <ADDMAP>
    '"' -> ENDTAG "quote",
  ;

number -> (#PCDATA)
  ;

keycap -> (#PCDATA | super | sub | esc)+
  <EXCEPT> -(need)
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "]]" -> ENDTAG "keycap",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
  ;

whitemenu -> (#PCDATA | super | sub | esc)+
  <USEMAP>
    "}}}" -> ENDTAG "whitemenu",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
  ;

softkey -> (skline +)
  <EXCEPT> -(need)
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "}}" -> ENDTAG "softkey",
    "W\" -> STARTTAG "skline",
    "&#RS;W\" -> STARTTAG "skline",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub,
  ;

skline -> (#PCDATA | super | sub | esc)+
  <MIN> STARTTAG ENDTAG
  ;

super -> (#PCDATA | esc | super | sub | var)+
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "%%" -> &m-startvar,
    "__" -> &m-startsub,
    "^^" -> ENDTAG "super"
  ;

sub -> (#PCDATA | esc | super | sub | var)+
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "%%" -> &m-startvar,
    "^^" -> &m-startsuper,
    "__" -> ENDTAG "sub"
  ;

var -> (#PCDATA | sub | super | esc)+
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "%%" -> ENDTAG "var",
    "^^" -> &m-startsuper,
    "__" -> &m-startsub
  ;

circle -> (#PCDATA)
  <EXCEPT> -(need)
  <USEMAP>
    "&\" -> &m-backslash,
    "&<" -> &m-lt,
    "&&" -> &m-and,
    "))" -> ENDTAG "circle",
  ;

ineqn -> (#PCDATA | esc)+
  <USEMAP>
    "@@" -> ENDTAG "ineqn",
  ;

book -> (partext)
  <EXCEPT> -(book)
  ;

not -> (#PCDATA | esc)+
  ;

xref -> EMPTY
  <PARAM>
    id IDREF #REQUIRED
  ;

-- Stuff following the chapters and appendixes:  error messages,
    bibliography, and glossary
--
  -- Error Messages --
message -> (chaphead?, !text?, (msg + | msgsub + ) )
  <MIN> ENDTAG
  <PARAM>
    include CDATA,
    exclude CDATA
  ;

msgsub -> (chaphead, !text?, msg +)
  <MIN> STARTTAG ENDTAG
  <PARAM>
    include CDATA,
    exclude CDATA
  ;

msg -> (!msgnum?, msgtext, explain?)
  <MIN> ENDTAG
  <ADDMAP>
    "&#RE;" -> "&m-msgtxtst;"
  ;

msgnum -> (#PCDATA | esc)+
  <ADDMAP>
    "&#RE;" -> "&m-msgnumend;&m-msgtxtst;",
  <MIN> STARTTAG ENDTAG
  ;

msgtext -> (partext)
  <EXCEPT> +(newline)
  <MIN> STARTTAG ENDTAG
  <USEMAP text>
  ;

explain -> (text)
  <MIN> ENDTAG
  <USEMAP text>
  ;

  -- Bibliography --
biblio -> (head, !text?, bibsub +)
  <EXCEPT> -(footnote)
  <MIN> ENDTAG
  ;

bibsub -> (!head?, !text?, references)
  <MIN> STARTTAG ENDTAG
  ;

references -> (item +)
  <ADDMAP>
    "&#RS;W*" -> STARTTAG "item",
  <MIN> ENDTAG
  ;

  -- Glossary --
glossary -> (!text?, (dterm, definition)+)
  <MIN> ENDTAG
  ;

dterm -> (partext)
  <EXCEPT> -(term)
  <MIN> ENDTAG
  <ADDMAP>
    "&#RE;" -> ENDTAG "dterm",
    "&&#RE;" -> " ",
  ;

definition -> (text)
  <MIN> STARTTAG ENDTAG
  ;

-- List of index synonyms for "SEE" entries --
idxsyn -> (synonym +)
  <EXCEPT> -(term | footnote | need | fillin)
  <MIN> ENDTAG
     ;

synonym -> (seefromprimary, seefromsub?, seetoprimary, seetosub?)
  <MIN> STARTTAG ENDTAG
  ;

seefromprimary -> (partext, sort?)
  <ADDMAP>
    "W:W" -> STARTTAG "seefromsub",
    "W->W" -> STARTTAG "seetoprimary",
  <MIN> STARTTAG ENDTAG
  ;

seefromsub -> (partext, sort?)
  <ADDMAP>
    "W->W" -> STARTTAG "seetoprimary",
  <MIN> STARTTAG ENDTAG
  ;

seetoprimary -> (partext, sort?)
  <ADDMAP>
    "W:W" -> STARTTAG "seetosub",
    "&#RE;" -> ENDTAG "synonym",
  <MIN> STARTTAG ENDTAG
  ;

seetosub -> (partext, sort?)
  <ADDMAP>
    "&#RE;" -> ENDTAG "synonym",
  <MIN> STARTTAG ENDTAG
  ;

-- Index --
-- Note: The index is automatically generated.  It is included in
   this DTD to simplify interface development, since many of its
   subelements contain partext. --

index -> (idx-sect +)
  <EXCEPT> -(idx | location)
  <MIN> ENDTAG
  ;

idx-sect -> (idx-letter, idx-entry +)
  <MIN> STARTTAG ENDTAG
  ;

idx-letter -> (partext)
  <MIN> STARTTAG ENDTAG
  ;

idx-entry -> (idx-primary-and-ref, idx-sub-and-ref*)
  <MIN> STARTTAG ENDTAG
  ;

idx-primary-and-ref -> (idx-primary, idx-refs?)
  <MIN> STARTTAG ENDTAG
  ;

idx-sub-and-ref -> (idx-sub, idx-refs)
  <MIN> STARTTAG ENDTAG
  ;

idx-refs -> (!idx-chap-ref*, (idx-vol, idx-chap-ref +)*, idx-syn*)
  <USEMAP>
    ",W" -> STARTTAG "idx-chap-ref",
    "-" -> STARTTAG "idx-start",
    "W--W" -> STARTTAG "idx-end"
  <MIN> STARTTAG ENDTAG
  ;

idx-chap-ref -> (!idx-chap?, idx-start, (idx-ff | idx-end)?)
  <PARAM>
    main (MAIN)
  <MIN> STARTTAG ENDTAG
  ;

(idx-primary, idx-sub, idx-vol, idx-syn) ->
  (partext)
  <MIN> STARTTAG ENDTAG
  <USEMAP text>
  ;

(idx-chap, idx-start, idx-end) ->
  (partext)
  <MIN> STARTTAG ENDTAG
  ;

idx-ff -> EMPTY
  <MIN> STARTTAG ENDTAG
  ;

-- Formatting elements --
newpage -> EMPTY
  ;

need -> EMPTY
  <PARAM>
    type (BEGIN | END | TOGETHER),
    amount NUMBERTOKEN
  ;

nobreak -> (partext)
  <EXCEPT> -(nobreak | need)
  ;

pageno -> EMPTY
  <PARAM>
    initial NAMETOKEN 1,
    rev (BEGINREV | ENDREV)
  ;
