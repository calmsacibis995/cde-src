\#!/bin/ksh
#define COM #
COM ###########################################################################
COM
COM   Xsession
COM
COM   Common Desktop Environment (CDE)
COM
COM   Configuration script for the Login Manager
COM
COM   (c) Copyright 1993, 1994 Hewlett-Packard Company
COM   (c) Copyright 1993, 1994 International Business Machines Corp.
COM   (c) Copyright 1993, 1994 Sun Microsystems, Inc.
COM   (c) Copyright 1993, 1994 Novell, Inc.
COM
COM       ************** DO NOT EDIT THIS FILE **************
COM
COM   CDE_INSTALLATION_TOP/bin/Xsession is a factory-default file and will
COM   be unconditionally overwritten upon subsequent installation.
COM   Modification is discouraged.
COM
COM   $XConsortium: Xsession.src /main/cde1_maint/7 1995/11/17 14:43:10 gtsang $
COM
COM ###########################################################################

#ifdef sun 
  COM 
  COM Set OPENWINHOME 
  COM 
  if [ -z "$OPENWINHOME" ]
  then
      export OPENWINHOME="/usr/openwin"
  fi
#endif


#if 0
/*
 * Platform specific definitions
 *
 * cpp_XINITUSER - user's xinit startup file
 * cpp_MAIL - system mail file
 * cpp_XDIR - X11 bin directory
 * cpp_HELLO - dthello command line
 * cpp_XDMSYS - xdm system session file
 */
#endif

#if defined (_AIX)
#  define cpp_XINITUSER "$HOME/.xinitrc"
#  define cpp_MAIL "/var/spool/mail/$USER"
#elif defined (__hpux)
#  define cpp_XDMSYS "/usr/lib/X11/xdm/sys.xsession"
#elif defined (sun)
#  define cpp_MAIL "/var/mail/$USER"
#  define cpp_XDIR "$OPENWINHOME/bin"
#endif

#if defined (__uxp__)
#  undef cpp_XDIR
#  define cpp_XDIR "/usr/bin/X11"
#endif

#ifdef __osf__
#  undef cpp_MAIL
#  undef cpp_XDIR
#  define cpp_MAIL "/usr/spool/mail/$USER"
#  define cpp_XDIR "/usr/bin/X11"
#endif

#if defined (__hpux) && defined (BLS)
#  undef cpp_HELLO
#  define cpp_HELLO "$DT_BINPATH/dthello -file /etc/copyright -file $HOME/.dtlogininfo &"
#endif

#if 0
/*
 * Fallback definitions
 */
#endif

#if !defined (cpp_XINITUSER)
#  define cpp_XINITUSER "$HOME/.x11start"
#endif

#if !defined (cpp_MAIL)
#  define cpp_MAIL "/usr/mail/$USER"
#endif

#if !defined (cpp_XDIR)
#  define cpp_XDIR "/usr/bin/X11"
#endif

#if !defined (cpp_HELLO)
#  define cpp_HELLO "$DT_BINPATH/dthello &"
#endif

#if !defined (cpp_XDMSYS)
#  define cpp_XDMSYS "/usr/lib/X11/xdm/Xsession"
#endif

COM ###########################################################################
COM 
COM 
COM   This script starts the user's session. It searches for one of three
COM   types of startup mechanisms, in the following order:
COM 
COM     DT     existence of CDE DT Session Manager on the system
COM     XDM    "$HOME/.xsession" (executable)
COM     xinit  cpp_XINITUSER  (executable)
COM 
COM   If none of these startup mechanisms exist, a default window manager
COM   and terminal emulator client are started.
COM 
COM ##########################################################################

\#
\# Variables must be explicitly exported
\# 
set +a

COM ###########################################################################
COM 
COM   Initialize session startup logging
COM 
COM ##########################################################################

  exec >/dev/null 2>/dev/null

  LOGDIR=$HOME/.dt
  LOGFILENAME=$LOGDIR/startlog
  
  if [ ! -d $LOGDIR ]; then
    mkdir $LOGDIR
    if [ -d $LOGDIR ]; then
      chmod 755 $LOGDIR
    fi
  fi

  [ -f $LOGFILENAME.older ] && rm -f $LOGFILENAME.older
  [ -f $LOGFILENAME.old ] && mv -f $LOGFILENAME.old $LOGFILENAME.older
  [ -f $LOGFILENAME ] && mv -f $LOGFILENAME $LOGFILENAME.old
  touch $LOGFILENAME

  if [ -w $LOGFILENAME ]; then
    exec >>$LOGFILENAME 2>&1
  fi


  Log()
  {
    echo "--- $1" >>$LOGFILENAME 2>&1
  }

  Log "$(date)"
  Log "$0 starting..."

COM ###########################################################################
COM 
COM   Global environment section
COM 
COM    DT pre-sets the following environment variables for each user.
COM    
COM     (internal)
COM 
COM     DISPLAY      set to the value of the first field in the Xservers file.
COM     HOME         set to the user's home directory (from /etc/passwd)
COM     LANG         set to the display's current NLS language (if any)
COM     LC_ALL       set to the value of $LANG
COM     LOGNAME      set to the user name
COM     PATH         set to the value of the Dtlogin "userPath" resource
COM     USER         set to the user name
COM     SHELL        set to the user's default shell (from /etc/passwd)
COM     TZ           set to the value of the Dtlogin "timeZone" resource
COM 
COM
COM     (Xsession)
COM 
COM     TERM         set to xterm
COM     EDITOR       set to the default editor
COM     KBD_LANG     set to the value of $LANG for certain languages
COM     MAIL         set to cpp_MAIL
COM 
COM 
COM    Three methods are available to modify or add to this list depending 
COM    on the desired scope of the resulting environment variable. 
COM    
COM     1. X server and/or all users on a display       (Xconfig file)
COM     2. all users on a display                       (Xsession file)
COM     3. individual users                             (.dtprofile file)
COM 
COM    See DT on-line help, the DT Users Guide, or the Dtlogin(1X) man
COM    page for details on setting environment variables.
COM     
COM     
COM      
COM ###########################################################################

  [ -z "$EDITOR" ] && EDITOR=CDE_INSTALLATION_TOP/bin/dtpad
  [ -z "$MAIL" ] && MAIL=cpp_MAIL
  [ -z "$LANG" ] && LANG="C"
  [ -z "$SHELL" ] && SHELL="/bin/sh"
  [ -z "$DISPLAY" ] && DISPLAY=":0"
  TERM=dtterm
  SESSION_SVR=`hostname`
  DISPLAY_HOLD=$DISPLAY

  export PATH EDITOR MAIL TERM SESSION_SVR LANG SHELL DISPLAY DTSOURCEPROFILE

  case ${SHELL##*/} in
       sh | bash | ksh | dtksh | jsh | csh | tcsh | zsh) ;;
       COM
       COM Non-standard user shell.  Verify it before continuing 
       COM
       *) export DT=true;
	  $SHELL;
	  if [ $? = 0 ]
	  then
	    unset DT
	    if [ ! -f /etc/shells]; then
	      Log "Non-standard user SHELL '$SHELL' returned good status." 
	      Log "/etc/shells file does not exist."
	      Log "$SHELL has not been verified as a valid shell."
	      Log "Will not start a session for user '$USER'"
	      exit 1
	    fi
	  else
	    unset DT
	    Log "Non-standard user SHELL '$SHELL' returned non-zero status."
	    Log "Will not start a session for user '$USER'"
	    exit 1
	  fi;;
  esac


#if defined (_AIX) && defined (_POWER)
COM
COM Clear the LFT message locale override if set
COM
if [ "$LC_MESSAGES" = "C@lft" ]
then
  unset LC_MESSAGES
fi
#endif

#if defined (__osf__)
  COM
  COM Set XFILESEARCHPATH if necessary
  COM
  if [ -z "$XFILESEARCHPATH" ]
  then
      export XFILESEARCHPATH="%D"
  fi
  COM
  COM check if network is configured. If not, set environment variable
  COM so that tooltalk will use localhost/loopback rather than system
  COM name
  RCMGR=/usr/sbin/rcmgr
  NUM_NETCONFIG=`$RCMGR get NUM_NETCONFIG`
  if [ "$NUM_NETCONFIG" = '' -o "$NUM_NETCONFIG" = 0 ]; then
        export DTNONETWORK=true
  fi
#endif
 
#if defined (__hpux)
  COM
  COM Set the keyboard language if necessary...
  COM
  if [ ! -z "$LANG" ]
  then
      case $LANG in
            bulgarian | czech   | hebrew | hungarian | \
            japanese  | korean  | polish | rumanian  | \
            russian   | serbocroatian) 
                        KBD_LANG=$LANG
                        export KBD_LANG;;
           
             chinese-t) KBD_LANG=t_chinese
                        export KBD_LANG;;
             chinese-s) KBD_LANG=s_chinese
                        export KBD_LANG;;
            
             *);; 
     esac
  fi
#endif

  COM
  COM Locate configuration file directories
  COM
  XDIR=cpp_XDIR
  DT_BINPATH=CDE_INSTALLATION_TOP/bin
  DT_INSTALL_CONFIG=CDE_INSTALLATION_TOP/config
  DT_CONFIG=CDE_CONFIGURATION_TOP/config
  DT_CONFIG_PATH="$DT_CONFIG $DT_INSTALL_CONFIG"

COM ###########################################################################
COM
COM  Default desktop component configuration variable settings
COM
COM  This section sets the default value for variables controlling
COM  some desktop components.
COM
COM ###########################################################################

  COM 
  COM Input method server startup
  COM 
  if [ -z "$DTSTARTIMS" ]; then
     DTSTARTIMS=True
  fi

  if [ "$DTSTARTIMS" = "False" ]; then
     unset DTSTARTIMS
  fi

  COM 
  COM Default desktop screen saver action list 
  COM  
  export DTSCREENSAVERLIST="StartDtscreenSwarm StartDtscreenQix \
    StartDtscreenFlame StartDtscreenHop StartDtscreenImage StartDtscreenLife \
    StartDtscreenRotor StartDtscreenPyro StartDtscreenWorm StartDtscreenBlank"

  COM 
  COM Session startup clients and args
  COM 
  if [ "$SESSIONTYPE" = "altDt" ]; then
      dtstart_session[0]="$SDT_ALT_SESSION"
      dtstart_hello[0]="$SDT_ALT_HELLO"
  else
      dtstart_session[0]="$DT_BINPATH/dtsession"
      dtstart_hello[0]=cpp_HELLO
  fi
  dtstart_session[1]="$HOME/.xsession"
  dtstart_session[2]=cpp_XINITUSER
  dtstart_session[3]="$XBIN/xterm -geometry 80x24+10+10"
  dtstart_hello[1]="$XDIR/xsetroot -default &"
  dtstart_searchpath="$DT_BINPATH/dtsearchpath"
  dtstart_dtsession_res="$DT_BINPATH/dtsession_res -load -system"
  dtstart_dtsession_res_tty="$DT_BINPATH/dtsession_res -merge -tty"
  dtstart_ttsession="$DT_BINPATH/ttsession"
  dtstart_dtdbcache="$DT_BINPATH/dtdbcache -init"
  dtdbcacherm="rm -f /tmp/dtdbcache_$DISPLAY"
  dtstart_appgather="$DT_BINPATH/dtappgather &"
#if defined(USL) || defined(sun) || defined(__uxp__)
  dtstart_dsdm="$DT_BINPATH/dsdm &"
#endif
#if defined(sun)
  dtstart_sdtspeckeysd="$XDIR/speckeysd"
#endif
  dtstart_shell="$DT_BINPATH/sdt_shell"

  xdmstart_session[0]="$HOME/.xsession"
  xdmstart_session[1]=cpp_XDMSYS
  xdmstart_session[2]="xterm -geometry 80x24+10+10 -ls"
  xdmstart_hello="$XDIR/xsetroot -default &"


  SESSIONLOGDIR=$LOGDIR/sessionlogs
  SESSIONLOGFILENAME="$SESSIONLOGDIR/$SESSION_SVR"_DISPLAY=$DISPLAY

  if [ ! -d $SESSIONLOGDIR ]; then
    mkdir $SESSIONLOGDIR
    if [ -d $SESSIONLOGDIR ]; then
      chmod 755 $SESSIONLOGDIR
    fi
  fi

  touch $SESSIONLOGFILENAME

  if [ -w $SESSIONLOGFILENAME ]; then
      dtstart_sessionlogfile="$SESSIONLOGFILENAME"
      echo "-- Session log created `date`" > $dtstart_sessionlogfile
  else
      dtstart_sessionlogfile="/dev/null"
  fi

COM 
COM Return first command in array named by $1 that is executable
COM 
GetFirst()
{
  let i=0
  while true; do
    eval "cmd=\${$1[$i]}"
    [ -z "$cmd" ] && break
    [ -x "${cmd%% *}" ] && echo "$cmd" && break
    Log "could not start $cmd"
    let i=$i+1
  done
}

COM 
COM Start first command in array named by $1 that is executable. If
COM $2 is 'eval', command result will be 'eval'ed. 
COM 
StartFirst()
{
  first=$(GetFirst $1)
  if [ ! -z "$first" ]; then
    Log "starting $first"
    if [ "$2" = "eval" ]; then
      eval `eval "PATH=$DT_BINPATH:$PATH:/usr/openwin/bin $first"`
    else
      eval "PATH=$DT_BINPATH:$PATH:/usr/openwin/bin $first"
    fi
  fi
}

#ifdef sun
  if [ "$DTXSERVERLOCATION" != "remote" ]
  then
  COM
  COM Start fallback console
  COM
     if [ -x $XDIR/fbconsole ]
     then
        $XDIR/fbconsole &
     fi
  COM
  COM Start Sun special key daemon for support of 
  COM Power keys, Bightness keys, Audio keys
  COM 
     StartFirst dtstart_sdtspeckeysd
  fi
#endif

#define cpp_Xsession
#include "config/_common.ksh.src"
#undef cpp_Xsession

#if defined (__osf__)
COM
COM Bring up the sysman checklist if it hasn't been run before
COM
  if [ -f /usr/sbin/start_checklist ]
  then
      Log "Starting the checklist setup"
      /usr/sbin/start_checklist&
  fi
#endif

COM ###########################################################################
COM 
COM   Source user's desktop profile
COM 
COM   This section determines if the user has a desktop profile in their
COM   home directory. If not, the desktop default profile is copied to
COM   the home directory. The desktop profile is then sourced. The purpose
COM   is to incorporate any per-user/per-session environment customizations
COM   and thereby propagate them to applications and desktop components.
COM 
COM ###########################################################################

  DTSYSPROFILE=sys.dtprofile
  DTPROFILE=.dtprofile

  if [ ! -f $HOME/$DTPROFILE ]; then
    for i in $DT_CONFIG_PATH
    do
      if [ -f $i/$DTSYSPROFILE ]; then
        /usr/bin/awk '
          BEGIN {printit=1}
          /SYSPROFILE COMMENT START/ {printit=0; next}
          /SYSPROFILE COMMENT END/ {printit=1; next}
          printit==1 {print}' <$i/$DTSYSPROFILE >$HOME/$DTPROFILE
        /bin/chmod 755 $HOME/$DTPROFILE
        break
      fi
    done
  fi

  COM
  COM load system default resources
  COM

  StartFirst dtstart_dtsession_res


  COM
  COM source the .dtprofile.
  COM
  if [ -f $HOME/$DTPROFILE ]; then
    Log "sourcing $HOME/$DTPROFILE..."
    . $HOME/$DTPROFILE
  fi

  COM
  COM envirornment vars that must not be changed by dtprofile 
  COM

  DISPLAY=$DISPLAY_HOLD


  COM
  COM Saftey checks for .dtprofile setting important env variables 
  COM to non-existent or incorrect values.  If so, reset to default values.
  COM

  if [ ! -w $dtstart_sessionlogfile ]; then
      dtstart_sessionlogfile="/dev/null"
  fi

  if [ ! -x $SHELL ]; then
      Log "could not execute $SHELL shell, falling back to /bin/sh shell"
      SHELL="/bin/sh"
  fi


COM ###########################################################################
COM 
COM  External Xsession processing section
COM 
COM  This section searches the Xsession.d subdirectory and sources
COM  the files contained therein.  The purpose is to set up any
COM  per-user/per-session environment customizations and thereby propagate
COM  them to applications and desktop components.
COM 
COM ##########################################################################

  DT_XSESSION_DIR=Xsession.d

  for i in $DT_CONFIG_PATH
  do
    if [[ -d $i/$DT_XSESSION_DIR ]]; then
      COM 
      COM Run custom Xsession scripts for this session.
      COM 
      for SCRIPT in $(ls $i/$DT_XSESSION_DIR); do
      	if [ -x $i/$DT_XSESSION_DIR/$SCRIPT -a \
	    \( ! -d $i/$DT_XSESSION_DIR/$SCRIPT \) ]; then
               Log "sourcing $i/$DT_XSESSION_DIR/$SCRIPT..."
               . $i/$DT_XSESSION_DIR/$SCRIPT
          fi
      done
    fi
  done


COM ###########################################################################
COM 
COM   Startup section.
COM      
COM   Note: The ksh syntax ${parameter%% *} is used when appropriate to
COM 	    remove any command line options that may have been included
COM 	    in the definition of a DT executable below.
COM      
COM ###########################################################################

  COM 
  COM Prepare for session startup
  COM 

  if [ "$DTSOURCEPROFILE" = "true" ]
  then
    case ${SHELL##*/} in
       sh | jsh | ksh | dtksh) shellprofile="$HOME/.profile";;
       bash) shellprofile="$HOME/.bash_profile";;
       csh | tcsh) shellprofile="$HOME/.login";;
       zsh) shellprofile="$HOME/$DTPROFILE";;
       *) Log "non-standard shell $SHELL"
    esac
  fi

  if [ "$shellprofile" -a ! -f "$shellprofile" ]
  then
    Log "could not read $shellprofile"
    unset shellprofile
  fi


  if [ "$SESSIONTYPE" = "xdm" ]; then
    startup=$(GetFirst xdmstart_session)    COM get xdm session client
    StartFirst xdmstart_hello               COM start xdm hello client
  else
    startup=$(GetFirst dtstart_session)     COM get desktop session client
    StartFirst dtstart_hello                COM start desktop hello client
    StartFirst dtstart_searchpath eval      COM setup desktop search paths
    StartFirst dtstart_appgather            COM setup session applications
  fi

  tooltalk=$(GetFirst dtstart_ttsession)	COM get tooltalk client
  dtdbcache=$(GetFirst dtstart_dtdbcache)	COM get dtdbcache client
  dtsession_res_tty=$(GetFirst dtstart_dtsession_res_tty) COM tty value merge

#if defined(USL) || defined(sun) || defined(__uxp__)
  if [ -z "$SDT_NO_DSDM" ]; then
     StartFirst dtstart_dsdm		    COM start drag and drop proxy
  fi
#endif

  if [ -z "$dtdbcache" ]; then
	dtdbcache="echo could not start $dtstart_dtdbcache"
  fi

  COM 
  COM Start the session.
  COM 

  Log "session log file is $dtstart_sessionlogfile" 

  if [ "$DTSOURCEPROFILE" = "true" ]; then
    Log "DTSOURCEPROFILE is 'true' (see $HOME/.dtprofile)"
    Log "execing $startup with a $SHELL login shell ..."
  else
    Log "DTSOURCEPROFILE is 'false' (see $HOME/.dtprofile)"
    Log "execing $startup with a $SHELL non-login shell..." 
  fi


  export DT=true;
  case ${SHELL##*/} in

      csh ) $dtstart_shell -c "unsetenv _ PWD; \
            unsetenv DT; \
	    setenv DISPLAY $DISPLAY_HOLD; \
  	    $dtstart_dtsession_res_tty; \
	    $dtdbcache; \
            (set path = ( $DT_BINPATH \$path /usr/openwin/bin ); $tooltalk ); \
            $startup  >>&! $dtstart_sessionlogfile" ;;

      tcsh) if [ $shellprofile ]; then
		source_login="source $shellprofile"
	    else
		source_login=""
	    fi
	    unset DTSOURCEPROFILE

	    $dtstart_shell -c "unsetenv _ PWD; \
	    $source_login;
            unsetenv DT; \
	    setenv DISPLAY $DISPLAY_HOLD; \
  	    $dtstart_dtsession_res_tty; \
	    $dtdbcache; \
            (set path = ( $DT_BINPATH \$path /usr/openwin/bin ); $tooltalk ); \
            $startup  >>&! $dtstart_sessionlogfile" ;;

      *) $dtstart_shell -c " \
	    unset DT; \
	    DISPLAY=$DISPLAY_HOLD; \
  	    $dtstart_dtsession_res_tty; \
	    $dtdbcache; \
            PATH=/usr/dt/bin:\$PATH:/usr/openwin/bin $tooltalk; \
            $startup >> $dtstart_sessionlogfile 2>&1" ;;
  esac

$dtdbcacherm		COM remove the actions/datatypes cachefile

COM ####################         eof      #################################
