/* $XConsortium: history.h /main/cde1_maint/3 1995/10/14 00:07:51 montyb $ */
/***************************************************************
*                                                              *
*                      AT&T - PROPRIETARY                      *
*                                                              *
*        THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF        *
*                    AT&T BELL LABORATORIES                    *
*         AND IS NOT TO BE DISCLOSED OR USED EXCEPT IN         *
*            ACCORDANCE WITH APPLICABLE AGREEMENTS             *
*                                                              *
*                Copyright (c) 1995 AT&T Corp.                 *
*              Unpublished & Not for Publication               *
*                     All Rights Reserved                      *
*                                                              *
*       The copyright notice above does not evidence any       *
*      actual or intended publication of such source code      *
*                                                              *
*               This software was created by the               *
*           Advanced Software Technology Department            *
*                    AT&T Bell Laboratories                    *
*                                                              *
*               For further information contact                *
*                    {research,attmail}!dgk                    *
*                                                              *
***************************************************************/

/* : : generated by proto : : */
                  
#ifndef HIST_VERSION
#if !defined(__PROTO__)
#if defined(__STDC__) || defined(__cplusplus) || defined(_proto) || defined(c_plusplus)
#if defined(__cplusplus)
#define __MANGLE__	"C"
#else
#define __MANGLE__
#endif
#define __STDARG__
#define __PROTO__(x)	x
#define __OTORP__(x)
#define __PARAM__(n,o)	n
#if !defined(__STDC__) && !defined(__cplusplus)
#if !defined(c_plusplus)
#define const
#endif
#define signed
#define void		int
#define volatile
#define __V_		char
#else
#define __V_		void
#endif
#else
#define __PROTO__(x)	()
#define __OTORP__(x)	x
#define __PARAM__(n,o)	o
#define __MANGLE__
#define __V_		char
#define const
#define signed
#define void		int
#define volatile
#endif
#if defined(__cplusplus) || defined(c_plusplus)
#define __VARARG__	...
#else
#define __VARARG__
#endif
#if defined(__STDARG__)
#define __VA_START__(p,a)	va_start(p,a)
#else
#define __VA_START__(p,a)	va_start(p)
#endif
#endif

/*
 *	Interface for history mechanism
 *	written by David Korn
 *
 */

#include	<ast.h>
#include	<sfio.h>

#define HIST_CHAR	'!'
#define HIST_VERSION	1		/* history file format version no. */

typedef struct 
{
	Sfdisc_t	histdisc;	/* discipline for history */
	Sfio_t		*histfp;	/* history file stream pointer */
	char		*histname;	/* name of history file */
	long		histind;	/* current command number index */
	int		histsize;	/* number of accessible history lines */
#ifdef _HIST_PRIVATE
	_HIST_PRIVATE
#endif /* _HIST_PRIVATE */
} History_t;

typedef struct
{
	int hist_command;
	int hist_line;
	int hist_char;
} Histloc_t;

/* the following are readonly */
extern __MANGLE__ const char	hist_fname[];

extern __MANGLE__ int _Hist;
#define	hist_min(hp)	((_Hist=((int)((hp)->histind-(hp)->histsize)))>=0?_Hist:0)
#define	hist_max(hp)	((int)((hp)->histind))
/* these are the history interface routines */
extern __MANGLE__ int		sh_histinit __PROTO__((void));
extern __MANGLE__ void 		hist_cancel __PROTO__((History_t*));
extern __MANGLE__ void 		hist_close __PROTO__((History_t*));
extern __MANGLE__ int		hist_copy __PROTO__((char*, int, int, int));
extern __MANGLE__ void 		hist_eof __PROTO__((History_t*));
extern __MANGLE__ Histloc_t	hist_find __PROTO__((History_t*,char*,int, int, int));
extern __MANGLE__ void 		hist_flush __PROTO__((History_t*));
extern __MANGLE__ void 		hist_list __PROTO__((History_t*,Sfio_t*, off_t, int, char*));
extern __MANGLE__ int		hist_match __PROTO__((History_t*,off_t, char*, int*));
extern __MANGLE__ off_t		hist_tell __PROTO__((History_t*,int));
extern __MANGLE__ off_t		hist_seek __PROTO__((History_t*,int));
extern __MANGLE__ char 		*hist_word __PROTO__((char*, int, int));
#ifdef SHOPT_ESH
    extern __MANGLE__ Histloc_t	hist_locate __PROTO__((History_t*,int, int, int));
#endif	/* SHOPT_ESH */

#endif /* HIST_VERSION */
