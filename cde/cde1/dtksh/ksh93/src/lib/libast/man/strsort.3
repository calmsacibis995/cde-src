.de L		\" literal font
.ft 5
.it 1 }N
.if !\\$1 \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
.de LR
.}S 5 1 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de RL
.}S 1 5 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de EX		\" start example
.ta 1i 2i 3i 4i 5i 6i
.PP
.RS 
.PD 0
.ft 5
.nf
..
.de EE		\" end example
.fi
.ft
.PD
.RE
.PP
..
.TH HSORT 3
.SH NAME
hsort \- array heap sort
.SH SYNOPSIS
.EX
#include <ast.h>

void    strsort(char** \fIarray\fP, int \fIelements\fP, int (*\fIcompare\fP)(const char* \fIa\fP, const char* \fIb\fP));
.EE
.SH DESCRIPTION
.L strsort
does a heap sort on the array of pointers
.I array
with
.I elements
elements using the comparison function
.IR compare .
.I compare
returns
.L \-1
if 
.I a
is lexicographically less than
.IR b ,
.L 0
if
.I a
is equal to
.IR b ,
and
.L 1
if 
.I a
is lexicographically greater than
.IR b .
