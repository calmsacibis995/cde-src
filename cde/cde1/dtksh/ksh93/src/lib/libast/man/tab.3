.de L		\" literal font
.ft 5
.it 1 }N
.if !\\$1 \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
.de LR
.}S 5 1 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de RL
.}S 1 5 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de EX		\" start example
.ta 1i 2i 3i 4i 5i 6i
.PP
.RS 
.PD 0
.ft 5
.nf
..
.de EE		\" end example
.fi
.ft
.PD
.RE
.PP
..
.TH TAB 3
.SH NAME
tab \- simple table lookup routines
.SH SYNOPSIS
.L "#include <ast.h>"
.sp
.L "int tabindex(const void* tab, int size, const char* name);" 
.L "void* tablook(const void* tab, int size, const char* name);" 
.SH DESCRIPTION
These routines do linear lookups in
.I small
tables (on the order of 32 elements).
Each table element has a size of
.L size
bytes and the beginning of the element points to a name that is
matched by the lookup routines.
.PP
.L tabindex
returns the index of the table element in
.L tab
that matches
.LR name .
If there is no match then
.L \-1
is returned.
.PP
.L tablook
returns a pointer to the table element in
.L tab
that matches
.LR name .
If there is no match then
.L 0
is returned.
.SH "SEE ALSO"
hash(3)
